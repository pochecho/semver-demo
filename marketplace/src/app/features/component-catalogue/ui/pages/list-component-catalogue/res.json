[
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Home"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Home"
    ],
    "documentation": {},
    "implementations": [
      {
        "pipes": [],
        "directives": [],
        "interfaces": [
          {
            "name": "IDashboardModel",
            "properties": [
              {
                "name": "footer",
                "type": "IFooterModel"
              },
              {
                "name": "header",
                "type": "IHeaderModel"
              },
              {
                "name": "menu",
                "type": "IMenuModel[]"
              }
            ],
            "methods": []
          },
          {
            "name": "IFooterModel",
            "properties": [
              {
                "name": "bgWhite",
                "type": "boolean"
              },
              {
                "name": "bottomTextLeft",
                "type": "any[]"
              },
              {
                "name": "bottomTextRigh",
                "type": "any[]"
              },
              {
                "name": "isVigilaLogoBottom",
                "type": "boolean"
              },
              {
                "name": "socialNetBottomRight",
                "type": "ISocialNetBottomRightModel[]"
              },
              {
                "name": "topLinks",
                "type": "ITopLinksModel"
              },
              {
                "name": "topText",
                "type": "ITopTextModel[]"
              }
            ],
            "methods": []
          },
          {
            "name": "IHeaderItemModel",
            "properties": [
              {
                "name": "dropdownList",
                "type": "Array<BcHeaderNavItem>"
              },
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "isDropdown",
                "type": "boolean"
              },
              {
                "name": "itemType",
                "type": "string"
              },
              {
                "name": "reverse",
                "type": "boolean"
              },
              {
                "name": "route",
                "type": "string"
              },
              {
                "name": "subText",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              },
              {
                "name": "userAvatar",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IHeaderItemOptionModel",
            "properties": [
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "nit",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              },
              {
                "name": "url",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IHeaderModel",
            "properties": [
              {
                "name": "familyLogo",
                "type": "string"
              },
              {
                "name": "fixed",
                "type": "boolean"
              },
              {
                "name": "items",
                "type": "IHeaderItemModel[]"
              },
              {
                "name": "logoName",
                "type": "string"
              },
              {
                "name": "menuInteraction",
                "type": "boolean"
              }
            ],
            "methods": []
          },
          {
            "name": "ILinksModel",
            "properties": [
              {
                "name": "isSelf",
                "type": "boolean"
              },
              {
                "name": "link",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IMenuModel",
            "properties": [
              {
                "name": "iconName",
                "type": "string"
              },
              {
                "name": "identifier",
                "type": "string"
              },
              {
                "name": "path",
                "type": "string"
              },
              {
                "name": "section",
                "type": "ISectionModel[]"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IOptionModel",
            "properties": [
              {
                "name": "path",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ISectionModel",
            "properties": [
              {
                "name": "options",
                "type": "IOptionModel[]"
              },
              {
                "name": "title",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ISocialNetBottomRightModel",
            "properties": [
              {
                "name": "isSelf",
                "type": "boolean"
              },
              {
                "name": "link",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ITopLinksModel",
            "properties": [
              {
                "name": "alignContent",
                "type": "\"flex-end\" | \"flex-start\" | \"center\""
              },
              {
                "name": "links",
                "type": "Array<literal type>"
              }
            ],
            "methods": []
          },
          {
            "name": "ITopTextModel",
            "properties": [
              {
                "name": "texts",
                "type": "Array<literal type>"
              },
              {
                "name": "title",
                "type": "literal type"
              }
            ],
            "methods": []
          }
        ],
        "injectables": [
          {
            "name": "DashBoardMapper",
            "properties": [],
            "methods": [
              {
                "name": "fromMap",
                "args": [
                  {
                    "name": "obj",
                    "type": "any"
                  }
                ],
                "returnType": "IDashBoardModel"
              }
            ]
          },
          {
            "name": "DashboardService",
            "properties": [],
            "methods": []
          },
          {
            "name": "GetDashBoardUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [],
                "returnType": "Observable<IDashboardModel>"
              }
            ]
          },
          {
            "name": "GetMenuUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [],
                "returnType": "Observable<IMenuModel[]>"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "DashBoardGateway",
            "properties": [],
            "methods": [
              {
                "name": "getStructureMenu",
                "args": [],
                "returnType": "Observable<IDashboardModel>"
              }
            ],
            "inputsClass": [],
            "outputsClass": []
          },
          {
            "name": "MenuGateway",
            "properties": [],
            "methods": [
              {
                "name": "getMenu",
                "args": [],
                "returnType": "Observable<IMenuModel[]>"
              }
            ],
            "inputsClass": [],
            "outputsClass": []
          }
        ],
        "components": [
          {
            "name": "DashboardPageComponent",
            "selector": "bc-dashboard-page",
            "styles": [],
            "inputsClass": [
              {
                "name": "infrastructure",
                "description": "<p>Estructura del menu</p>\n",
                "type": "DashBoardGateway"
              },
              {
                "name": "lougoutClicked",
                "description": "<p>Funcion cuando se presiona logout</p>\n",
                "type": "function"
              }
            ],
            "outputsClass": [
              {
                "name": "changeDashboard",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite, cuando\nhay un cambio en el Dashboard</p>\n",
                "type": "any"
              }
            ],
            "methodsClass": [
              {
                "name": "onLogout",
                "args": [
                  {
                    "name": "event",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "FooterViewComponent",
            "selector": "bc-footer-view",
            "styles": [],
            "inputsClass": [
              {
                "name": "bgWhite",
                "defaultValue": "false",
                "description": "<p>Cambia el background a blanco o gris</p>\n"
              },
              {
                "name": "bottomTextLeft",
                "defaultValue": "[]",
                "description": "<p>Textos de la izquierda del footer</p>\n",
                "type": "Array<string>"
              },
              {
                "name": "bottomTextRigh",
                "defaultValue": "[]",
                "description": "<p>Textos de la derecha del footer</p>\n",
                "type": "Array<string>"
              },
              {
                "name": "isBancoLogoBottom",
                "defaultValue": "true",
                "description": "<p>Muestra el logo de Bancolombia horizontal</p>\n"
              },
              {
                "name": "isVigilaLogoBottom",
                "defaultValue": "true",
                "description": "<p>Muestra el logo de vigilia</p>\n"
              },
              {
                "name": "socialNetBottomRight",
                "defaultValue": "[{ name: '', link: '', isSelf: false }]",
                "description": "<p>Lista de iconos del footer</p>\n",
                "type": "ISocialNetBottomRightModel[]"
              },
              {
                "name": "topLinks",
                "description": "<p>Links del header</p>\n",
                "type": "ITopLinksModel"
              },
              {
                "name": "topText",
                "description": "<p>Textos superiores del footer</p>\n",
                "type": "ITopTextModel[]"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "rawdescription": ""
          },
          {
            "name": "HeaderViewComponent",
            "selector": "bc-header-view",
            "styles": [],
            "inputsClass": [
              {
                "name": "headerModel",
                "description": "<p>Configuracion del Header</p>\n",
                "type": "IHeaderModel"
              }
            ],
            "outputsClass": [
              {
                "name": "changeDropdown",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite cuando\ncambia el dropdown</p>\n",
                "type": "any"
              },
              {
                "name": "logout",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite cuando\nse cierra la sesion</p>\n",
                "type": "any"
              }
            ],
            "methodsClass": [
              {
                "name": "onLogout",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "MenuViewComponent",
            "selector": "bc-menu-view",
            "styles": [],
            "inputsClass": [
              {
                "name": "footer",
                "description": "<p>Configuracion del Footer</p>\n",
                "type": "IFooterModel"
              },
              {
                "name": "lougoutClicked",
                "description": "<p>callback del logout</p>\n",
                "type": "function"
              },
              {
                "name": "menu",
                "description": "<p>Lista de items del menu</p>\n",
                "type": "IMenuModel[]"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "rawdescription": ""
          }
        ],
        "modules": [
          {
            "name": "DashboardModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "DashboardPageComponent"
                  },
                  {
                    "name": "FooterViewComponent"
                  },
                  {
                    "name": "HeaderViewComponent"
                  },
                  {
                    "name": "MenuViewComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": []
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DashboardPageComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          }
        ],
        "routes": [],
        "version": "1.0.0"
      }
    ]
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Autenticaci\u00f3n ",
      "Tiempo de sesi\u00f3n"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Autenticaci\u00f3n "
    ],
    "documentation": {},
    "implementations": [
      {
        "pipes": [],
        "directives": [],
        "interfaces": [
          {
            "name": "IAuthenticationRequest",
            "properties": [
              {
                "name": "password",
                "type": "string"
              },
              {
                "name": "user",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "Iidentifications",
            "properties": [
              {
                "name": "numId",
                "type": "number"
              },
              {
                "name": "typeId",
                "type": "any"
              }
            ],
            "methods": []
          },
          {
            "name": "IReturn",
            "properties": [
              {
                "name": "identifications",
                "type": "Iidentifications[]"
              },
              {
                "name": "pass",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ISessionInfoFooter",
            "properties": [
              {
                "name": "ip",
                "type": "string"
              },
              {
                "name": "lastDate",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ITopLinks",
            "properties": [
              {
                "name": "alignContent",
                "type": "\"flex-end\" | \"flex-start\" | \"center\""
              },
              {
                "name": "links",
                "type": "Array<literal type>"
              }
            ],
            "methods": []
          }
        ],
        "injectables": [
          {
            "name": "AuthenticationMapper",
            "properties": [],
            "methods": [
              {
                "name": "fromMap",
                "args": [
                  {
                    "name": "obj",
                    "type": "any"
                  }
                ],
                "returnType": "IAuthenticationRequest"
              }
            ]
          },
          {
            "name": "AuthenticationService",
            "properties": [],
            "methods": []
          },
          {
            "name": "GetAuthenticationUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [
                  {
                    "name": "user",
                    "type": "string"
                  }
                ],
                "returnType": "Observable<IAuthenticationRequest>"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "AuthenticationRequestGateway",
            "properties": [],
            "methods": [
              {
                "name": "getByUser",
                "args": [
                  {
                    "name": "user",
                    "type": "string"
                  }
                ],
                "returnType": "Observable<IAuthenticationRequest>"
              },
              {
                "name": "saveNew",
                "args": [
                  {
                    "name": "authRequest",
                    "type": "IAuthenticationRequest"
                  }
                ],
                "returnType": "Observable<void>"
              }
            ],
            "inputsClass": [],
            "outputsClass": []
          }
        ],
        "components": [
          {
            "name": "AuthenticationComponent",
            "selector": "bc-authentication",
            "styles": [],
            "inputsClass": [
              {
                "name": "btn-back",
                "defaultValue": "false",
                "description": "<p>Mostrar o no el boton de atras</p>\n",
                "type": "boolean"
              },
              {
                "name": "btn-forgot-password",
                "defaultValue": "false",
                "description": "<p>Muestra la accion de recordar clave</p>\n",
                "type": "boolean"
              },
              {
                "name": "business-channel",
                "defaultValue": "'pymes'",
                "description": "<p>Nombre del canal en minisculas, pymes o iversiones</p>\n",
                "type": "\"pymes\" | \"inversiones\""
              },
              {
                "name": "captcha",
                "defaultValue": "false",
                "description": "<p>Muestra o no el captcha</p>\n",
                "type": "boolean"
              },
              {
                "name": "input-token",
                "defaultValue": "false",
                "description": "<p>si es true pone input-token,\nflaso pone input tipo password</p>\n",
                "type": "boolean"
              },
              {
                "name": "num-inputs",
                "defaultValue": "3",
                "description": "<p>numero de inputs para el input-token</p>\n",
                "type": "number"
              },
              {
                "name": "optionsTopFooter",
                "defaultValue": "{\r\n    alignContent: 'flex-end',\r\n    links: [],\r\n  }",
                "description": "<p>Configuracion de los links del footer</p>\n",
                "type": "ITopLinks"
              },
              {
                "name": "select-stage1",
                "defaultValue": "[]",
                "description": "<p>Lista para llenar los selects, obligatorio</p>\n",
                "type": "literal type"
              },
              {
                "name": "select-stage2",
                "defaultValue": "[]",
                "description": "<p>Lista para llenar los selects, no obligatorio</p>\n",
                "type": "literal type"
              },
              {
                "name": "session-info-footer",
                "defaultValue": "{ip: '' , lastDate:''}",
                "description": "<p>Es la informaci\u00f3n de la sesion que va en el footer,\nIt is the information of the session that goes in the footer</p>\n",
                "type": "ISessionInfoFooter"
              },
              {
                "name": "state-token",
                "defaultValue": "'default'",
                "description": "<p>Es para setear un estado manualmente al input-token</p>\n",
                "type": "\"disabled\" | \"error\" | \"default\""
              },
              {
                "name": "subtitle",
                "defaultValue": "''",
                "description": "<p>Subtitulo del card</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "changeValue",
                "defaultValue": "new EventEmitter<IReturn>()",
                "description": "<p>Devuelve todos los datos ingresados</p>\n",
                "type": "EventEmitter<IReturn>"
              },
              {
                "name": "methodCallout",
                "defaultValue": "new EventEmitter<string>()",
                "description": "<p>Callback del metodo llamado</p>\n",
                "type": "EventEmitter<string>"
              }
            ],
            "methodsClass": [
              {
                "name": "backf2",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "buildInputs",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "captchaValidate",
                "args": [
                  {
                    "name": "res",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "error",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "final",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "forgotPassword",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "incorrectData",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onChangeValue",
                "args": [
                  {
                    "name": "val",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onValidToken",
                "args": [
                  {
                    "name": "isValid",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setUpReturn",
                "args": [],
                "optional": false,
                "returnType": "any",
                "typeParameters": []
              },
              {
                "name": "showChangeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          }
        ],
        "modules": [
          {
            "name": "AuthenticationModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "AuthenticationComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": []
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "AuthenticationComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          }
        ],
        "routes": [],
        "version": "1.0.0"
      }
    ]
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Autenticaci\u00f3n "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Seguridad",
      "Clave din\u00e1mica"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Seguridad",
      "Clave din\u00e1mica"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Transferencias/pagos ",
      "Programaciones"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos ",
      "Programaciones"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Transferencias/pagos "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Solicitud de productos"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Desembolsos"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Consultas "
    ],
    "documentation": {},
    "implementations": [
      {
        "pipes": [],
        "directives": [],
        "interfaces": [
          {
            "name": "IDashboardConfigModel",
            "properties": [
              {
                "name": "customerName",
                "type": "string"
              },
              {
                "name": "otherServicesHeading",
                "type": "string"
              },
              {
                "name": "productsHeading",
                "type": "string"
              },
              {
                "name": "shortcutConfig",
                "type": "IShortcutOptionConfigModel[]"
              },
              {
                "name": "toDoHeading",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IMainConsolidatedConfigModel",
            "properties": [
              {
                "name": "productName",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IProductModel",
            "properties": [
              {
                "name": "currentBalance",
                "type": "number"
              },
              {
                "name": "currentBalanceDisplay",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              },
              {
                "name": "number",
                "type": "string"
              },
              {
                "name": "type",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IProductTypeModel",
            "properties": [
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "name",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IShortcutOptionConfigModel",
            "properties": [
              {
                "name": "action",
                "type": "function"
              },
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "title",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "LayoutWidgetConfiguration",
            "properties": [
              {
                "name": "idTag",
                "type": "string"
              },
              {
                "name": "title",
                "type": "string"
              },
              {
                "name": "userIdTag",
                "type": "string"
              }
            ],
            "methods": []
          }
        ],
        "injectables": [
          {
            "name": "GetProductsByTypeUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [
                  {
                    "name": "productType",
                    "type": "string"
                  }
                ],
                "returnType": "Observable<IProductModel[]>"
              }
            ]
          },
          {
            "name": "GetProductsTypeUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [],
                "returnType": "Observable<IProductTypeModel[]>"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "ProductGateway",
            "properties": [],
            "methods": [
              {
                "name": "getProductsByType",
                "args": [
                  {
                    "name": "type",
                    "type": "string"
                  }
                ],
                "returnType": "Observable<IProductModel[]>"
              },
              {
                "name": "getProductsType",
                "args": [],
                "returnType": "Observable<IProductTypeModel[]>"
              }
            ],
            "inputsClass": [],
            "outputsClass": []
          }
        ],
        "components": [
          {
            "name": "DashboardComponent",
            "selector": "bc-dashboard",
            "styles": [],
            "inputsClass": [
              {
                "name": "config",
                "description": "<p>Configuracion general del Dashboard</p>\n",
                "type": "IDashboardConfigModel"
              },
              {
                "name": "infrastructure",
                "description": "<p>Servicio</p>\n",
                "type": "ProductGateway"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "getColumnSize",
                "args": [],
                "optional": false,
                "returnType": "number",
                "typeParameters": []
              },
              {
                "name": "goTo",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "MainConsolidatedComponent",
            "selector": "bc-main-consolidated",
            "styles": [],
            "inputsClass": [
              {
                "name": "config",
                "type": "IMainConsolidatedConfigModel"
              },
              {
                "name": "infrastructure",
                "description": "<p>Servicio de producto</p>\n",
                "type": "ProductGateway"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "output",
                "args": [
                  {
                    "name": "index",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "ProductsTypeViewModelComponent",
            "selector": "bc-products-type-view-model",
            "styles": [],
            "inputsClass": [
              {
                "name": "config",
                "description": "<p>Configuracion basica del dashboard</p>\n",
                "type": "IDashboardConfigModel"
              },
              {
                "name": "infrastructure",
                "description": "<p>Servicio</p>\n",
                "type": "ProductGateway"
              },
              {
                "name": "templateVisualization",
                "defaultValue": "'simple'",
                "description": "<p>Forma del template</p>\n",
                "type": "\"full\" | \"simple\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "getColumnSize",
                "args": [],
                "optional": false,
                "returnType": "number",
                "typeParameters": []
              },
              {
                "name": "goTo",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "output",
                "args": [
                  {
                    "name": "index",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "ProductsViewModelComponent",
            "selector": "bc-products-view-model",
            "styles": [],
            "inputsClass": [
              {
                "name": "product",
                "description": "<p>Configuracion del producto</p>\n",
                "type": "IProductModel"
              },
              {
                "name": "templateVisualization",
                "defaultValue": "'simple'",
                "description": "<p>Forma del template</p>\n",
                "type": "\"full\" | \"simple\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "rawdescription": ""
          }
        ],
        "modules": [
          {
            "name": "ConsolidatedBalancesModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": []
              },
              {
                "type": "imports",
                "elements": [
                  {
                    "name": "PagesModule"
                  }
                ]
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DashboardComponent"
                  },
                  {
                    "name": "MainConsolidatedComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          },
          {
            "name": "PagesModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "DashboardComponent"
                  },
                  {
                    "name": "MainConsolidatedComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": [
                  {
                    "name": "ViewModelsModule"
                  }
                ]
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DashboardComponent"
                  },
                  {
                    "name": "MainConsolidatedComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          },
          {
            "name": "ViewModelsModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "ProductsTypeViewModelComponent"
                  },
                  {
                    "name": "ProductsViewModelComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": []
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "ProductsTypeViewModelComponent"
                  },
                  {
                    "name": "ProductsViewModelComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          }
        ],
        "routes": [],
        "version": "1.0.0"
      }
    ]
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Consultas "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Consultas "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Consultas "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Inscripciones "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Inscripciones "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Inscripciones "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Web",
      "Inscripciones "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Inscripciones "
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Ajustes/ayudas"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Ajustes/ayudas"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Ajustes/ayudas"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Ajustes/ayudas"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Mobile",
      "Desembolsos"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": [
      {
        "pipes": [],
        "directives": [],
        "interfaces": [
          {
            "name": "BcTableActionAndOptionMenu",
            "properties": [
              {
                "name": "action",
                "type": "function"
              },
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IActionModel",
            "properties": [
              {
                "name": "link",
                "type": "string"
              },
              {
                "name": "showLink",
                "type": "boolean"
              }
            ],
            "methods": []
          },
          {
            "name": "IChangePageModel",
            "properties": [
              {
                "name": "nextPage",
                "type": "boolean"
              },
              {
                "name": "perPages",
                "type": "number"
              },
              {
                "name": "previousPage",
                "type": "boolean"
              }
            ],
            "methods": []
          },
          {
            "name": "IColumnModel",
            "properties": [
              {
                "name": "color",
                "type": "string"
              },
              {
                "name": "itemType",
                "type": "string"
              },
              {
                "name": "value",
                "type": "any"
              }
            ],
            "methods": []
          },
          {
            "name": "IDetailModel",
            "properties": [
              {
                "name": "table",
                "type": "ITableModel"
              },
              {
                "name": "title",
                "type": "string"
              },
              {
                "name": "visibleTable",
                "type": "boolean"
              }
            ],
            "methods": []
          },
          {
            "name": "IOptionModel",
            "properties": [
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "IRowModel",
            "properties": [
              {
                "name": "action",
                "type": "IActionModel"
              },
              {
                "name": "columns",
                "type": "Array<IColumnModel>"
              }
            ],
            "methods": []
          },
          {
            "name": "ITableBodyModel",
            "properties": [
              {
                "name": "rows",
                "type": "Array<IRowModel>"
              }
            ],
            "methods": []
          },
          {
            "name": "ITableHeadModel",
            "properties": [
              {
                "name": "itemType",
                "type": "string"
              },
              {
                "name": "value",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "ITableModel",
            "properties": [
              {
                "name": "actionButton",
                "type": "Array<BcTableActionAndOptionMenu>"
              },
              {
                "name": "optionMenu",
                "type": "Array<BcTableActionAndOptionMenu>"
              },
              {
                "name": "paginatorFooter",
                "type": "boolean"
              },
              {
                "name": "paginatorHeader",
                "type": "boolean"
              },
              {
                "name": "perPages",
                "type": "number"
              },
              {
                "name": "perPagesList",
                "type": "Array<number>"
              },
              {
                "name": "showActionButtons",
                "type": "boolean"
              },
              {
                "name": "showDropdown",
                "type": "boolean"
              },
              {
                "name": "tableBody",
                "type": "ITableBodyModel"
              },
              {
                "name": "tableHead",
                "type": "Array<ITableHeadModel>"
              },
              {
                "name": "title",
                "type": "string"
              }
            ],
            "methods": []
          },
          {
            "name": "TableConfiguration",
            "properties": [],
            "methods": []
          }
        ],
        "injectables": [
          {
            "name": "DetailMapper",
            "properties": [],
            "methods": [
              {
                "name": "fromMap",
                "args": [
                  {
                    "name": "obj",
                    "type": "any"
                  }
                ],
                "returnType": "IDetailModel"
              }
            ]
          },
          {
            "name": "DetailService",
            "properties": [],
            "methods": [
              {
                "name": "getAll",
                "args": [],
                "returnType": "Observable<IDetailModel>"
              },
              {
                "name": "getAll",
                "args": [],
                "returnType": "Observable<IDetailModel>",
                "inheritance": {
                  "file": "DetailGateway"
                }
              }
            ],
            "extends": "DetailGateway"
          },
          {
            "name": "GetDetailsUseCase",
            "properties": [],
            "methods": [
              {
                "name": "invoke",
                "args": [],
                "returnType": "Observable<IDetailModel>"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "DetailGateway",
            "properties": [],
            "methods": [
              {
                "name": "getAll",
                "args": [],
                "returnType": "Observable<IDetailModel>"
              }
            ],
            "inputsClass": [],
            "outputsClass": []
          }
        ],
        "components": [
          {
            "name": "DetailMovementsComponent",
            "selector": "bc-detail-movements",
            "styles": [],
            "inputsClass": [
              {
                "name": "infrastructure",
                "description": "<p>Driven adapter </p>\n",
                "type": "DetailGateway"
              }
            ],
            "outputsClass": [
              {
                "name": "changePage",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite cuando\ncambia la pagina </p>\n",
                "type": "any"
              }
            ],
            "methodsClass": [
              {
                "name": "onChanges",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onChangeTable",
                "args": [
                  {
                    "name": "event",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "DropdownComponent",
            "selector": "bc-dropdown",
            "styles": [],
            "inputsClass": [
              {
                "name": "componentId",
                "description": "<p>id del componente</p>\n",
                "type": "string"
              },
              {
                "name": "perPages",
                "description": "<p>Numero de paginas</p>\n",
                "type": "number"
              },
              {
                "name": "perPagesList",
                "defaultValue": "[]",
                "description": "<p>Lista de todas las paginas</p>\n",
                "type": "Array<number>"
              }
            ],
            "outputsClass": [
              {
                "name": "changePerPages",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite cuando\nse cambia de pagina</p>\n",
                "type": "any"
              }
            ],
            "methodsClass": [
              {
                "name": "changePerPage",
                "args": [
                  {
                    "name": "perPage",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          },
          {
            "name": "PageHeaderComponent",
            "selector": "bc-page-header",
            "styles": [],
            "inputsClass": [
              {
                "name": "title",
                "description": "<p>Titulo del pageHeader</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "rawdescription": ""
          },
          {
            "name": "TableComponent",
            "selector": "bc-table",
            "styles": [],
            "inputsClass": [
              {
                "name": "infoTable",
                "description": "<p>Objeto de configuracion de la tabla</p>\n",
                "type": "ITableModel"
              }
            ],
            "outputsClass": [
              {
                "name": "changeTable",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento que se emite cuando ocurre \nun cambio en la tabla</p>\n",
                "type": "any"
              }
            ],
            "methodsClass": [
              {
                "name": "clickRoute",
                "args": [
                  {
                    "name": "link",
                    "type": "string"
                  },
                  {
                    "name": "columns",
                    "type": "Array<IColumnModel>"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "showHiddenCheckbox",
                "args": [
                  {
                    "name": "infoTable",
                    "type": "ITableModel"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": []
              },
              {
                "name": "showHiddenOptions",
                "args": [
                  {
                    "name": "infoTable",
                    "type": "ITableModel"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": []
              }
            ],
            "rawdescription": ""
          }
        ],
        "modules": [
          {
            "name": "DetailMovementsWidgetModule",
            "children": [
              {
                "type": "providers",
                "elements": [
                  {
                    "name": "DetailMapper"
                  }
                ]
              },
              {
                "type": "declarations",
                "elements": []
              },
              {
                "type": "imports",
                "elements": [
                  {
                    "name": "PagesModule"
                  }
                ]
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DetailMovementsComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          },
          {
            "name": "PagesModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "DetailMovementsComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": [
                  {
                    "name": "ViewModelsModule"
                  }
                ]
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DetailMovementsComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          },
          {
            "name": "ViewModelsModule",
            "children": [
              {
                "type": "providers",
                "elements": []
              },
              {
                "type": "declarations",
                "elements": [
                  {
                    "name": "DropdownComponent"
                  },
                  {
                    "name": "PageHeaderComponent"
                  },
                  {
                    "name": "TableComponent"
                  }
                ]
              },
              {
                "type": "imports",
                "elements": []
              },
              {
                "type": "exports",
                "elements": [
                  {
                    "name": "DropdownComponent"
                  },
                  {
                    "name": "PageHeaderComponent"
                  },
                  {
                    "name": "TableComponent"
                  }
                ]
              },
              {
                "type": "bootstrap",
                "elements": []
              },
              {
                "type": "classes",
                "elements": []
              }
            ]
          }
        ],
        "routes": [],
        "version": "1.0.0"
      }
    ]
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "imagen": [],
    "status": "",
    "tags": [
      "Web"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "nameComponent": "Avatar",
    "description": "Los avatares son componentes circulares que normalmente enmascaran una imagen o icono. Se usa para representar a una usuario",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcAvatarDirective",
            "type": "directive",
            "description": "<p>El avatar define una colecci\u00f3n de estilos el cual permite asignar un tama\u00f1o y una imagen\nque hay en la colecci\u00f3n de tama\u00f1os los cuales pueden ser puffy(Grande) o small(peque\u00f1o).</p>\n",
            "selector": "[bc-avatar]",
            "inputsClass": [
              {
                "name": "class",
                "defaultValue": "null"
              },
              {
                "name": "id",
                "defaultValue": "this.helper.getId(this)"
              },
              {
                "name": "sizeAvatar",
                "defaultValue": "SizeAvatar.default",
                "description": "<p>El sizeAvatar es el tama\u00f1o que se le puede asignar, los cuales pueden ser puffy o small.</p>\n",
                "type": "SizeAvatar"
              }
            ],
            "outputsClass": [],
            "methodsClass": []
          }
        ],
        "examples": [
          {
            "description": "Avatar grande",
            "code": {
              "html": "\n        <img bc-avatar sizeAvatar ='puffy' src=\"assets/face.png\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Avatar de tama\u00f1o por defecto",
            "code": {
              "html": "\n        <img bc-avatar src=\"assets/face.png\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Avatar peque\u00f1o",
            "code": {
              "html": "\n        <img bc-avatar sizeAvatar ='small' src=\"assets/face.png\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Avatar sin ilustraci\u00f3n grande",
            "code": {
              "html": "\n        <img bc-avatar sizeAvatar ='puffy' src=\"\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Avatar sin ilustraci\u00f3n por defecto",
            "code": {
              "html": "\n        <img bc-avatar src=\"\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Avatar sin ilustraci\u00f3n peque\u00f1o",
            "code": {
              "html": "\n        <img bc-avatar sizeAvatar ='small' src=\"\" alt=\"\">\n        ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [],
        "examples": [
          {
            "description": "Avatar grande",
            "code": {
              "html": "\n        <img alt=\"avatar-puffy\" bc-avatar class=\"bc-avatar bc-avatar-puffy\" sizeavatar=\"puffy\" src=\"assets/images/profile.png\" >\n        ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Avatar por defecto",
            "code": {
              "html": "\n        <img alt=\"\" src=\"\" class=\"bc-avatar\" src=\"assets/images/profile.png\">\n        ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Avatar peque\u00f1o",
            "code": {
              "html": "\n        <img alt=\"\" src=\"\" typeavatar=\"Small\" class=\"bc-avatar avatar-small\">\n        ",
              "script": "",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": []
      },
      {
        "name": "BcAvatar",
        "description": "<p>BcAvatar es un atomo que visualiza una imagen de perfil. Por defecto, este \u00e1tomo se visualiza en redondo y tama\u00f1o default.</p>",
        "parameters": [
          {
            "name": "image",
            "type": "ImageProvider<dynamic>",
            "required": true,
            "description": "<p>Tipo de im\u00e1gen a visualizar.</p>"
          },
          {
            "name": "initImage",
            "type": "IconData",
            "required": false,
            "description": "<p>Icono de error cuando no se puede cargar la imagen, por defecto renderiza persona.</p>"
          },
          {
            "name": "size",
            "type": "BcSizeType",
            "required": false,
            "description": "<p>Determina el tama\u00f1o del widget; Default: Normal, Puffy: Grande y Small: Peque\u00f1o.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Avatar Puffy",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcAvatar(\n                  image: AssetImage('assets/images/pic.jpg'),\n                  size: BcSizeType.Puffy,\n                ),"
              }
            ]
          },
          {
            "description": "Avatar Default",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcAvatar(\n                  image: AssetImage('assets/images/pic.jpg'),\n                ),"
              }
            ]
          },
          {
            "description": "Avatar Small",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcAvatar(\n                  image: Image.asset('assets/images/pic.jpg').image,\n                  size: BcSizeType.Small,\n                ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Alert",
    "description": "Las notificaciones tipo toast son se\u00f1ales visuales destinadas a atraer la atenci\u00f3n de los usuarios hacia un contenido en particular o un elemento de la interfaz de usuario que es de naturaleza din\u00e1mica.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcAlertComponent",
            "selector": "bc-alert",
            "inputsClass": [
              {
                "name": "dismissible",
                "defaultValue": "false",
                "description": "<p>Si la alerta es est\u00e1tica, indica si se puede descartar o cerrar.</p>\n",
                "type": "boolean"
              },
              {
                "name": "id",
                "defaultValue": "this.helper.getId(this)",
                "description": "<p>Id del componente.</p>\n",
                "type": "string"
              },
              {
                "name": "inline",
                "defaultValue": "false",
                "description": "<p>Indica si la alerta es est\u00e1tica o inline.\nSi la alert es est\u00e1tica significa que aparecer\u00e1 como un cuadro de \ndi\u00e1logo (popup) en la parte superior de la ventana; por el contrario si no\nlo es, aparecer\u00e1 insertada en el documento.</p>\n",
                "type": "boolean"
              },
              {
                "name": "links",
                "defaultValue": "[]",
                "description": "<p>Links en la alerta, solo se pintan los 2 primeros items del arreglo.</p>\n",
                "type": "Array<LinkAlert>"
              },
              {
                "name": "text",
                "defaultValue": "''",
                "description": "<p>Texto de la alerta.</p>\n"
              },
              {
                "name": "title",
                "defaultValue": "''",
                "description": "<p>T\u00edtulo de la alerta.</p>\n"
              },
              {
                "name": "type",
                "defaultValue": "'inactive'",
                "description": "<p>Tipo de alerta [ &quot;error&quot; | &quot;success&quot; | &quot;info&quot; | &quot;warning&quot; | &quot;inactive&quot; ].</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "onclose",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Se ejecuta cuando la alerta se cierra, aplica solo para alertas inline.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "cancelIt",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cancelar alerta</p>\n"
              },
              {
                "name": "closeByTimeout",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cerrar alerta seg\u00fan timeout</p>\n"
              },
              {
                "name": "closeIt",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cerrar alerta</p>\n"
              },
              {
                "name": "onInjectInputs",
                "args": [
                  {
                    "name": "inputs",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Atributos de la alerta</p>\n"
              },
              {
                "name": "setIconByType",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Validar icono seg\u00fan tipo de alerta</p>\n"
              },
              {
                "name": "close",
                "args": [
                  {
                    "name": "output",
                    "type": "any",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcDialog"
                }
              },
              {
                "name": "dismiss",
                "args": [
                  {
                    "name": "output",
                    "type": "any",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcDialog"
                }
              },
              {
                "name": "onInjectInputs",
                "args": [
                  {
                    "name": "inputs",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  117
                ],
                "inheritance": {
                  "file": "BcDialog"
                }
              }
            ],
            "description": "<p>Importa las alertas con los dise\u00f1os de Bancolombia S.A.\nLas alertas corresponde a un cuadro de di\u00e1logo que disponibiliza\ninformaci\u00f3n de manera flotante o fija.</p>\n",
            "rawdescription": "Importa las alertas con los dise\u00f1os de Bancolombia S.A.\nLas alertas corresponde a un cuadro de di\u00e1logo que disponibiliza\ninformaci\u00f3n de manera flotante o fija.",
            "type": "component",
            "extends": "BcDialog"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Alerta de \u00c9xito y cierre autom\u00e1tico a los 10 segundos",
            "code": {
              "html": "No aplica",
              "script": "\n        import { BcDialogService } from '@bancolombia/design-system-web/bc-services/bc-dialog-service/bc-dialog-service.service';\n\n        constructor(private dialogService: BcDialogService) {}\n\n        open(): void {\n          const dialogRef = this.dialogService.open(BcAlertsComponent, {\n            id: 'MyAlertId',\n            type: 'success',\n            text: 'Esta es una alerta de confirmaci\u00f3n.',\n            timeout: 10000,\n          });\n\n          dialogRef.onResult().subscribe(\n            (closed) => {},\n            (dismissed) => {},\n            () => {}\n          );\n        }",
              "language": "ts"
            }
          },
          {
            "description": "Alerta de Error con elemento de referencia",
            "code": {
              "html": "No aplica",
              "script": "\n        import { BcDialogService } from '@bancolombia/design-system-web/bc-services/bc-dialog-service/bc-dialog-service.service';\n\n        constructor(private dialogService: BcDialogService) {}\n\n        open(): void {\n          const dialogRef = this.dialogService.open(BcAlertsComponent, {\n            id: 'MyAlertId',\n            type: 'error',\n            text: 'Esta es una alerta de error.',\n            elementRef: 'IdElementRef',\n          });\n\n          dialogRef.onResult().subscribe(\n            (closed) => {},\n            (dismissed) => {},\n            () => {}\n          );\n        }",
              "language": "ts"
            }
          },
          {
            "description": "Alerta de Error insertada antes del elemento de referencia",
            "code": {
              "html": "No aplica",
              "script": "\n        import { BcDialogService } from '@bancolombia/design-system-web/bc-services/bc-dialog-service/bc-dialog-service.service';\n\n        constructor(private dialogService: BcDialogService) {}\n\n        open(): void {\n          const dialogRef = this.dialogService.open(BcAlertsComponent, {\n            id: 'MyAlertId',\n            type: 'error',\n            text: 'Esta es una alerta de error.',\n            elementRef: 'IdElementRef',\n            insertBefore: true\n          });\n\n          dialogRef.onResult().subscribe(\n            (closed) => {},\n            (dismissed) => {},\n            () => {}\n          );\n        }",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "accessibility",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura la accesibilidad del bot\u00f3n de cierre de la alerta.</p>\n"
          },
          {
            "name": "close",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Cierre de la ventana de alerta, verifica si la ventana est\u00e1 activa y la cierra.</p>\n"
          },
          {
            "name": "getCloseButton",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Obtiene el bot\u00f3n de cierre de la alerta mediante querySelector.</p>\n"
          },
          {
            "name": "hideAlertAfterCloseAnimation",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Oculta la alerta despu\u00e9s de cerrar la animaci\u00f3n. Valida el evento y elimina las clases BC_ALERT_CLOSING y  BC_ALERT_INLINE</p>\n"
          },
          {
            "name": "listeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra el evento click al bot\u00f3n de cierre de la alerta.</p>\n"
          },
          {
            "name": "onClose",
            "args": [
              {
                "name": "fn",
                "type": "Function",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "open",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abre la ventana de alerta y la mantiene activa durante el tiempo timeOut. </p>\n"
          },
          {
            "name": "setTimeOut",
            "args": [
              {
                "name": "time",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura el tiempo en el que se mantiene la ventana de alerta abierta, adem\u00e1s\nvalida que ese tiempo no se sale del rango establecido por los l\u00edmites MIN_TIME_DELAY y MAX_TIME_DELAY.</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Alerta Informativo",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-info bc-alert-fixed\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">idea</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        \n        myAlert.setId('myAlertId');\n        \n        myAlert.onClose(() => {\n          \n        });\n        myAlert.setUp();\n\n        \n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta error con cierre autom\u00e1tico a los 10 segundos",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-error bc-alert-fixed\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">circle-info</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        \n        myAlert.setId('myAlertId');\n        \n        myAlert.onClose(() => {\n          \n        });\n        \n        myAlert.setTimeOut(10000);\n        myAlert.setUp();\n        \n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta de \u00c9xito",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-success bc-alert-fixed\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">ok</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        myAlert.setId('myAlertId');\n        myAlert.onClose(() => {\n        });\n        myAlert.setUp();\n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta de advertencia",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-warning bc-alert-fixed\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">hand</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n\t\t\t  </div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        myAlert.setId('myAlertId');\n        myAlert.onClose(() => {\n        });\n        myAlert.setUp();\n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta inactivo",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-inactive bc-alert-fixed\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">circle-info</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        myAlert.setId('myAlertId');\n        myAlert.onClose(() => {\n        });\n        myAlert.setUp();\n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta informativo inline (notificaci\u00f3n)",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-info bc-alert-inline\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">idea</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        myAlert.setId('myAlertId');\n        myAlert.onClose(() => {\n        });\n        myAlert.setUp();\n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          },
          {
            "description": "Alerta informativo inline (notificaci\u00f3n) con opci\u00f3n de cerrado",
            "code": {
              "html": "\n        <div role=\"alert\" class=\"bc-alert bc-alert-info bc-alert-inline bc-alert-dismissible\" id=\"myAlertId\">\n  \t\t\t\t<div class=\"bc-alert-status\">\n  \t\t\t\t\t<em class=\"bc-icon\">idea</em>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-body\">\n  \t\t\t\t\t<h5 class=\"title\">Title</h5>\n  \t\t\t\t\t<p class=\"text\">Mensaje de alerta</p>\n  \t\t\t\t\t<ul>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link1</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t\t<li>\n  \t\t\t\t\t\t\t<a href=\"#\">link2</a>\n  \t\t\t\t\t\t</li>\n  \t\t\t\t\t</ul>\n  \t\t\t\t</div>\n  \t\t\t\t<div class=\"bc-alert-close\">\n  \t\t\t\t\t<button aria-pressed=\"false\" class=\"bc-close\" role=\"button\" tabindex=\"0\">\n  \t\t\t\t\t\t<em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n  \t\t\t\t\t</button>\n  \t\t\t\t</div>\n  \t\t\t</div>\n        ",
              "script": "\n        const myAlert = new BcAlertBehavior();\n        myAlert.setId('myAlertId');\n        myAlert.onClose(() => {\n          \n        });\n        myAlert.setUp();\n        function openAlert() {\n          myAlert.open();\n        }",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcAlertCloseButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcAlertElements",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "onCloseFunction",
            "type": "Function",
            "optional": false,
            "description": ""
          },
          {
            "name": "timeOut",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcAlertNotify",
        "description": "<p>BcAlertNotify son mensajes que comunican informaci\u00f3n al usuario.</p>",
        "parameters": [
          {
            "name": "context",
            "type": "BuildContext",
            "required": true,
            "description": "<p>Contexto de la aplicaci\u00f3n donde se desplegar\u00e1.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "showAlert",
            "args": {
              "names": [
                "model",
                "firstLnk",
                "secondLnk",
                "onClosed"
              ],
              "types": [
                "BcAlertNotifyModel",
                "BcLnk",
                "BcLnk",
                "VoidCallback"
              ]
            }
          }
        ],
        "examples": [
          {
            "description": "Alerta de Error",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertNotifyModel model = BcAlertNotifyModel(\n      title:\n          'Error. No se puede conectar a la plataforma. No tiene tiempo de espera',\n      type: BcAlertType.Error,\n    );"
              }
            ]
          },
          {
            "description": "Alerta de Success",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertNotifyModel model = BcAlertNotifyModel(\n      title:\n          '\u00a1\u00c9xito! Esta es una notificaci\u00f3n positiva. No tiene tiempo de espera',\n      text: 'Esto es una alerta',\n      type: BcAlertType.Success,\n    );"
              }
            ]
          },
          {
            "description": "Alerta de Informaci\u00f3n",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertNotifyModel model = BcAlertNotifyModel(\n      text: 'Todos los servidores ahora funcionan. Tiempo de espera 5 seg',\n      type: BcAlertType.Info,\n      time: BcTimeAlert.FiveSeconds,\n    );"
              }
            ]
          },
          {
            "description": "Alerta de Advertencia",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertNotifyModel model = BcAlertNotifyModel(\n      text:\n          'Advertencia. La carga de esta p\u00e1gina lleva demasiado tiempo. No tiene tiempo de espera',\n      type: BcAlertType.Alert,\n    );\n    BcAlertNotify(context).showAlert(model);"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Button",
    "description": "Los botones expresan qu\u00e9 acci\u00f3n ocurrir\u00e1 cuando el usuario haga clic o los toque. Los botones se usan para inicializar una acci\u00f3n.",
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcButtonDirective",
            "type": "directive",
            "description": "<p>Importa la directiva de botones con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "selector": "[bc-button]",
            "inputsClass": [
              {
                "name": "class",
                "defaultValue": "''",
                "description": "<p>Par\u00e1metro para denotar la clase de bot\u00f3n.</p>\n"
              },
              {
                "name": "sizeButton",
                "description": "<p>Par\u00e1metro para denotar el tama\u00f1o de bot\u00f3n.</p>\n",
                "type": "\"default\" | \"small\" | \"puffy\""
              },
              {
                "name": "typeButton",
                "description": "<p>Par\u00e1metro para denotar el tipo de bot\u00f3n.</p>\n",
                "type": "\"primary\" | \"secondary\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "setAccesibility",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar Accesibilidad al componente.</p>\n"
              },
              {
                "name": "setSize",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo para configurar el tama\u00f1o del bot\u00f3n.</p>\n"
              },
              {
                "name": "setStyles",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar los estilos del bot\u00f3n.</p>\n"
              }
            ]
          },
          {
            "name": "BcButtonIconDirective",
            "type": "directive",
            "description": "<p>Importa la directiva de botones con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "selector": "[bc-button-icon]",
            "inputsClass": [
              {
                "name": "class",
                "defaultValue": "''",
                "description": "<p>Este atributo nos configura el tipo de bot\u00f3n mediante su clase.</p>\n"
              },
              {
                "name": "disabled",
                "defaultValue": "false",
                "description": "<p>Este atributo nos indica si el bot\u00f3n est\u00e1 habilitado o deshabilitado.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "setAccesibility",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar la accesibilidad del componente.</p>\n"
              },
              {
                "name": "setStatus",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar estado del bot\u00f3n icono.</p>\n"
              }
            ]
          },
          {
            "name": "BcFabButtonDirective",
            "type": "directive",
            "description": "<p>Importa la directiva de botones con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "selector": "[bc-fab-button]",
            "inputsClass": [
              {
                "name": "class",
                "defaultValue": "''"
              },
              {
                "name": "typeButton",
                "description": "<p>Par\u00e1metro para denotar el tipo de bot\u00f3n.</p>\n",
                "type": "\"primary\" | \"secondary\" | \"mini\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "setAccesibility",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para indicar la accesibilidad del componente.</p>\n"
              },
              {
                "name": "setStyle",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar los estilos del bot\u00f3n.</p>\n"
              }
            ]
          }
        ],
        "examples": [
          {
            "description": "Bot\u00f3n Primario Puffy",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"puffy\">Primario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Primario Puffy Deshabilitado",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"puffy\" disabled>Deshabilitado</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Primario Default",
            "code": {
              "html": "\n        <button bc-button>Primario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Primario Default Deshabilitado",
            "code": {
              "html": "\n        <button bc-button disabled>Deshabilitado</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Primario Small",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"small\">Primario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Primario Small Deshabilitado",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"small\" disabled>Deshabilitado</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secundario Puffy",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"puffy\" typeButton=\"secondary\">Secundario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secundario Puffy Deshabilitado",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"puffy\" typeButton=\"secondary\" disabled>Deshabilitado</button>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secudario Default",
            "code": {
              "html": "\n        <button bc-button class=\"btn-def\" typeButton=\"secondary\">Secundario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secundario Default Deshabilitado",
            "code": {
              "html": "\n        <button bc-button class=\"btn-def\" typeButton=\"secondary\" disabled>Deshabilitado</button>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secundario Small",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"small\" typeButton=\"secondary\">Secundario</button>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Secundario Small Deshabilitado",
            "code": {
              "html": "\n        <button bc-button sizeButton=\"small\" typeButton=\"secondary\" disabled>Deshabilitado</button>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos Puffy",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\">\n          <bc-icon size=\"md\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"icono\">heart</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos Puffy Deshabilitado",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\" disabled>\n          <bc-icon size=\"lg\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"icono\">heart</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos por Defecto",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\">\n          <bc-icon size=\"md\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"icono\">icono</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos por Defecto Deshabilitado",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\" disabled>\n          <bc-icon size=\"md\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"icono\">heart</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos Small",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\">\n          <bc-icon size=\"st\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"icono\">heart</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n con \u00cdconos Small Deshabilitado",
            "code": {
              "html": "\n        <button bc-button-icon aria-label=\"Boton\" disabled>\n          <bc-icon size=\"st\" [style.color]=\"'#00448d'\" aria-hidden=\"true\" aria-label=\"prueba\">heart</bc-icon>\n        </button>        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Primary",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"primary\" aria-label=\"Boton\">\n          <bc-icon size=\"xm\" aria-hidden=\"true\" aria-label=\"QR-scan\">QR-scan</bc-icon>\n        </button>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Primary Deshabilitado",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"primary\" aria-label=\"Boton\" disabled>\n          <bc-icon size=\"xm\" aria-hidden=\"true\" aria-label=\"QR-scan\">QR-scan</bc-icon>\n        </button>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Secondary",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"secondary\" aria-label=\"Boton\">\n          <bc-icon size=\"xm\" aria-hidden=\"true\" aria-label=\"search\">search</bc-icon>\n        </button>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Secondary Deshabilitado",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"secondary\" aria-label=\"Boton\" disabled>\n          <bc-icon size=\"xm\" aria-hidden=\"true\" aria-label=\"search\">search</bc-icon>\n        </button>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Mini",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"mini\" aria-label=\"Boton\">\n          <bc-icon size=\"xs\" aria-hidden=\"true\" aria-label=\"like\">like</bc-icon>\n        </button>\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n Flotante Mini Deshabilitado",
            "code": {
              "html": "\n        <button bc-fab-button typeButton=\"mini\" aria-label=\"Boton\" disabled>\n          <bc-icon size=\"xs\" aria-hidden=\"true\" aria-label=\"like\">like</bc-icon>\n        </button>\n      ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "name": "BcBtn",
        "description": "<p>BcBtn representa un bot\u00f3n de uso normal que activa una acci\u00f3n en la interfaz de usuario, los tipos de bot\u00f3n son: primario, secundario y fantasma. Por defecto, todos los tipos se visualizan en tama\u00f1o Default y habilitados.</p>",
        "parameters": [
          {
            "name": "onPressed",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>M\u00e9todo callback invocado cuando cambia la acci\u00f3n del bot\u00f3n.</p>"
          },
          {
            "name": "buttonType",
            "type": "BcButtonType",
            "required": true,
            "description": "<p>Determina el tipo de bot\u00f3n a visualizar: Primary: primario, Secondary: secundario y Ghost: fantasma.</p>"
          },
          {
            "name": "text",
            "type": "String",
            "required": true,
            "description": "<p>Define el nombre del bot\u00f3n para enfatizar la acci\u00f3n de este.</p>"
          },
          {
            "name": "icon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Define un icono al bot\u00f3n para enfatizar la acci\u00f3n de este.</p>"
          },
          {
            "name": "enabled",
            "type": "bool?",
            "required": false,
            "description": "<p>Determina el estado del widget: true: Habilitado y false: Deshabilitado.</p>"
          },
          {
            "name": "sizeType",
            "type": "BcSizeType",
            "required": false,
            "description": "<p>Determina el tama\u00f1o del widget: Default: Normal, Puffy: Grande y Small: Peque\u00f1o.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Boton Primario Activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('activeBtnPrimary'),\n              buttonType: BcButtonType.Primary,\n              text: 'activo',\n              icon: BcFunctionalIcons.USER,\n              onPressed: _incrementCounter,\n            ),"
              }
            ]
          },
          {
            "description": "Boton Primario Inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('inactiveBtnPrimary'),\n              buttonType: BcButtonType.Primary,\n              text: 'inactivo',\n              icon: BcFunctionalIcons.USER,\n              onPressed: _incrementCounter,\n              enabled: false,\n            ),"
              }
            ]
          },
          {
            "description": "Boton Secundario Activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('activeBtnSecondary'),\n              buttonType: BcButtonType.Secondary,\n              text: 'activo',\n              onPressed: _incrementCounter,\n            ),"
              }
            ]
          },
          {
            "description": "Boton Secundario Inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('inactiveBtnSecondary'),\n              buttonType: BcButtonType.Secondary,\n              text: 'inactivo',\n              onPressed: _incrementCounter,\n              enabled: false,\n            ),"
              }
            ]
          },
          {
            "description": "Boton Ghost Activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('activeBtnGhost'),\n              buttonType: BcButtonType.Ghost,\n              text: 'activo',\n              icon: BcFunctionalIcons.USER,\n              onPressed: _incrementCounter,\n            ),"
              }
            ]
          },
          {
            "description": "Boton Ghost Inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBtn(\n              key: const Key('inactiveBtnGhost'),\n              buttonType: BcButtonType.Ghost,\n              text: 'inactivo',\n              icon: BcFunctionalIcons.USER,\n              onPressed: _incrementCounter,\n              enabled: false,\n            )"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcButtonsFooter",
        "description": "<p>BcButtonsFooter corresponden a un par de botones opcionales \u00fabicados en la parte inferior de la pantalla, proporcionando opciones de configuralabeles de acci\u00f3n.</p>",
        "parameters": [
          {
            "name": "backgroundColor",
            "type": "Color?",
            "required": false,
            "description": "<p>Entrada de colo que llevar\u00e1 el contenedor.</p>"
          },
          {
            "name": "primaryButtonText",
            "type": "String?",
            "required": false,
            "description": "<p>Texto que llevar\u00e1 el bot\u00f3n primario.</p>"
          },
          {
            "name": "secondaryButtonText",
            "type": "String?",
            "required": false,
            "description": "<p>Texto que llevar\u00e1 el bot\u00f3n secundario.</p>"
          },
          {
            "name": "onPrimaryButtonPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Acci\u00f3n a realizar cuando se presione el bot\u00f3n primario.</p>"
          },
          {
            "name": "onSecondaryButtonPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Acci\u00f3n a realizar cuando se presione el bot\u00f3n secundario.</p>"
          },
          {
            "name": "primaryButtonEnable",
            "type": "bool",
            "required": false,
            "description": "<p>Booleano como entrada para indicar si se encuentra habilitado en bot\u00f3n primario.</p>"
          },
          {
            "name": "secondaryButtonVisible",
            "type": "bool",
            "required": false,
            "description": "<p>Booleano utilizado para indicar si el bot\u00f3n secundario se encontrar\u00e1 visible.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcButtonsFooter corresponden a un par de botones opcionales \u00fabicados en la parte inferior de la pantalla, proporcionando opciones de configuralabeles de acci\u00f3n.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n BcButtonsFooterArguments(\n   primaryButtonEnable: true,\n   secondaryButtonVisible: true,\n   primaryButtonText: \"labelPrimary\",\n   secondaryButtonText: \"labelSecondary\",\n   onSecondaryButtonPressed: _cancelProcess,\n   onPrimaryButtonPressed: _sendProcess\n ),\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcButtonGroupComponent",
            "selector": "bc-button-group",
            "inputsClass": [
              {
                "name": "buttonId",
                "defaultValue": "this.helper.getId(this)",
                "description": "<p>Id del elemento.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Name del elemento.</p>\n"
              },
              {
                "name": "value",
                "defaultValue": "''",
                "description": "<p>valor del elemento.</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "changeState",
                "defaultValue": "new EventEmitter<any>()",
                "description": "<p>Muestra opci\u00f3n seleccionada.</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [],
            "description": "<p>Importa el componente de Checks con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa el componente de Checks con los dise\u00f1os de Bancolombia S.A.",
            "type": "component"
          },
          {
            "name": "BcButtonGroupContainerComponent",
            "selector": "bc-button-group-container",
            "inputsClass": [
              {
                "name": "groupName",
                "description": "<p>Esta entrada permite indicar el nombre del grupo de botones, puede tener cualquier valor de tipo string</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "onchange",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Esta salida emite el id del bot\u00f3n seleccionado.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "setNameForChildrens",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Importa el button group con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa el button group con los dise\u00f1os de Bancolombia S.A.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Bot\u00f3n de Grupo Doble",
            "code": {
              "html": "\n        <bc-button-group-container (onchange)=\"showSelected($event)\" groupName=\"buttonGroupDemo\">\n          <bc-button-group buttonId=\"prueba1\" value=\"valorPrueba1\"></bc-button-group>\n          <bc-button-group buttonId=\"prueba2\" value=\"valorPrueba2\"></bc-button-group>\n        </bc-button-group-container>\n        ",
              "script": "\n        showSelected(event: any) {\n          this.selected = event;\n      }\n                ",
              "language": "ts"
            }
          },
          {
            "description": "Bot\u00f3n de Grupo Triple",
            "code": {
              "html": "\n        <bc-button-group-container (onchange)=\"showSelected($event)\" groupName=\"buttonGroupDemo\">\n          <bc-button-group buttonId=\"prueba1\" value=\"valorPrueba1\"></bc-button-group>\n          <bc-button-group buttonId=\"prueba2\" value=\"valorPrueba2\"></bc-button-group>\n          <bc-button-group buttonId=\"prueba3\" value=\"valorPrueba3\"></bc-button-group>\n        </bc-button-group-container>\n        ",
              "script": "\n        showSelected(event: any) {\n          this.selected = event;\n      }\n                ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "selectElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona los botones y despu\u00e9s los agrupa.</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Doble",
            "code": {
              "html": "\n        <div class=\"bc-button-group-container\">\n            <div class=\"bc-button-group\"><input id=\"button1\" type=\"radio\" name=\"radioButton\" value=\"1\" /><label for=\"button1\">Saldos tiempo real</label></div>\n            <div class=\"bc-button-group\"><input id=\"button2\" type=\"radio\" name=\"radioButton\" value=\"2\" /><label for=\"button2\">Saldos tiempo real</label></div>\n        </div>\n",
              "script": "BcBtnGroupBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Triple",
            "code": {
              "html": "\n        <div class=\"bc-container\">\n        <div class=\"bc-button-group-container\">\n            <div class=\"bc-button-group\"><input id=\"button1\" type=\"radio\" name=\"radioButton\" value=\"1\" /><label for=\"button1\">Saldos tiempo real</label></div>\n            <div class=\"bc-button-group\"><input id=\"button2\" type=\"radio\" name=\"radioButton\" value=\"2\" /><label for=\"button2\">Saldos tiempo real</label></div>\n            <div class=\"bc-button-group\"><input id=\"button3\" type=\"radio\" name=\"radioButton\" value=\"3\" /><label for=\"button3\">Saldos tiempo real</label></div>\n        </div>\n    </div>\n",
              "script": "BcBtnGroupBehavior.setUpAll();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "buttons",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "buttonsState",
            "defaultValue": "[]",
            "type": "IBtnGroup[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "changeState",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "isMultiple",
            "type": "boolean",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcBtnGroup",
        "description": "<p>BcBtnGroup es un \u00e1tomo que agrupa una serie de botones en una sola l\u00ednea.</p>",
        "parameters": [
          {
            "name": "data",
            "type": "BcBtnGroupModel",
            "required": true,
            "description": "<p>Modelo de los datos primitivos que recibe el widget.</p>"
          },
          {
            "name": "onChange",
            "type": "ValueChanged<int>",
            "required": true,
            "description": "<p>Elemento para configurar la acci\u00f3n de los botones, el cual nos retorna el index del boton presionado.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Boton Activo Doble",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcBtnGroup(\n          data: BcBtnGroupModel(\n            activeIndex: 0,\n            labels: ['CAMARA', 'IMAGEN'],\n          ),"
              }
            ]
          },
          {
            "description": " Boton Activo Triple",
            "codes": [
              {
                "language": "dart",
                "example": "\n        const SizedBox(height: 20),\n        BcBtnGroup(\n          data: BcBtnGroupModel(\n            labels: ['INICIO', 'CAMARA', 'IMAGEN'],\n            activeIndex: 1,\n          ),"
              }
            ]
          },
          {
            "description": "Boton por defecto Doble",
            "codes": [
              {
                "language": "dart",
                "example": "\n        const SizedBox(height: 20),\n        BcBtnGroup(\n          data: BcBtnGroupModel(\n            labels: ['CAMARA', 'IMAGEN'],\n          ),"
              }
            ]
          },
          {
            "description": " Boton por defecto Triple",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcBtnGroup(\n          data: BcBtnGroupModel(\n            labels: ['INICIO', 'CAMARA', 'IMAGEN'],\n          ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcBottomNavigationBar",
        "description": "<p>BcBottomNavigationBar proporciona un men\u00fa de navegacci\u00f3n con acciones en la parte inferior de la pantalla.</p>",
        "parameters": [
          {
            "name": "items",
            "type": "List<BcBottomNavigationBarItem>",
            "required": true,
            "description": "<p>Lista de items BcBottomNavigationBarItem, que llevar\u00e1 el men\u00fa.</p>"
          },
          {
            "name": "onTap",
            "type": "ValueChanged<int>?",
            "required": false,
            "description": "<p>Par\u00e1metro que entrega el valor entero del index cuando se realiza tap en alguna de las opciones del men\u00fa.</p>"
          },
          {
            "name": "currentIndex",
            "type": "int",
            "required": false,
            "description": "<p>Par\u00e1metro para indicar el index actual donde se requiere iniciar seleccionado el men\u00fa.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": " Bottom con n\u00famero m\u00e1ximo de items 5",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcBottomNavigationBar(\n        currentIndex: 0,\n        onTap: (value) => {},\n        items: [\n          BcBottomNavigationBarItem(\n            title: 'Mis productos',\n            icon: BcFunctionalIcons.DATA,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Mover dinero',\n            icon: BcFunctionalIcons.CURRENCY_EXCHANGE,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Facturas y recargas',\n            icon: BcFunctionalIcons.DOCUMENTS,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Perfil',\n            icon: BcFunctionalIcons.USER,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Directions',\n            icon: BcFunctionalIcons.DIRECTIONS,\n          ),\n        ],\n      );"
              }
            ]
          },
          {
            "description": " Bottom con 4 items",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcBottomNavigationBar(\n        currentIndex: 0,\n        onTap: (value) => {},\n        items: [\n          BcBottomNavigationBarItem(\n            title: 'Componentes',\n            icon: BcFunctionalIcons.DATA,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Informaci\u00f3n',\n            icon: BcFunctionalIcons.DATA,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Mis metas',\n            icon: BcFunctionalIcons.HOME,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Facturas y recargas',\n            icon: BcFunctionalIcons.MONEY_EXCHANGE,\n          ),\n        ],\n      );"
              }
            ]
          },
          {
            "description": " Bottom con 3 items",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcBottomNavigationBar(\n        currentIndex: 0,\n        onTap: (value) => {},\n        items: [\n          BcBottomNavigationBarItem(\n            title: 'Componentes',\n            icon: BcFunctionalIcons.DATA,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Informaci\u00f3n',\n            icon: BcFunctionalIcons.HAND,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Mis metas',\n            icon: BcFunctionalIcons.HOME,\n          ),\n        ],\n      );"
              }
            ]
          },
          {
            "description": " Bottom con n\u00famero minimo de items 2",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcBottomNavigationBar(\n        currentIndex: 0,\n        onTap: (value) => {},\n        items: [\n          BcBottomNavigationBarItem(\n            title: 'Componentes',\n            icon: BcFunctionalIcons.DATA,\n          ),\n          BcBottomNavigationBarItem(\n            title: 'Informaci\u00f3n',\n            icon: BcFunctionalIcons.HOME,\n          ),\n        ],\n      );"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Checkbox",
    "description": "Los checkbox se usan cuando hay una lista de opciones y el usuario puede seleccionar m\u00faltiples opciones, incluidas todas o ninguna. Tambi\u00e9n para presentar una lista que contiene sub-selecciones",
    "status": "",
    "images": {
      "preview": "components/Checkbox/preview.png"
    },
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcCheckBoxGroupComponent",
            "selector": "bc-checkbox-group",
            "inputsClass": [
              {
                "name": "enabled",
                "defaultValue": "true",
                "description": "<p>Indica si el checkbox esta habilitado</p>\n"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "changeValue",
                "defaultValue": "new EventEmitter<any>()",
                "type": "EventEmitter"
              },
              {
                "name": "onDisabled",
                "defaultValue": "new EventEmitter<boolean>()",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          },
          {
            "name": "BcCheckboxComponent",
            "selector": "bc-checkbox",
            "inputsClass": [
              {
                "name": "enabled",
                "defaultValue": "true",
                "description": "<p>Indica si el checkbox esta habilitado.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "''",
                "description": "<p>Id del elemento.</p>\n"
              },
              {
                "name": "indeterminate",
                "defaultValue": "false",
                "description": "<p>Define el componente como indeterminado.</p>\n"
              },
              {
                "name": "isChecked",
                "defaultValue": "false",
                "description": "<p>Indica si el checkbox esta en estado check.</p>\n"
              },
              {
                "name": "label",
                "defaultValue": "''",
                "description": "<p>Texto del checkbox que aparece a la derecha del mismo.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Nombre del checkbox.</p>\n"
              },
              {
                "name": "value",
                "defaultValue": "''",
                "description": "<p>Valor del checkbox.</p>\n"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "changeState",
                "defaultValue": "new EventEmitter<boolean>()",
                "description": "<p>Valor cada vez que cambia el checkbox.</p>\n",
                "type": "EventEmitter<boolean>"
              },
              {
                "name": "changeStateForParent",
                "defaultValue": "new EventEmitter<any>()",
                "description": "<p>Valor seleccionado.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "keyEvent",
                "args": [
                  {
                    "name": "event",
                    "type": "KeyboardEvent"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Metodo para accesibilidad.</p>\n"
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "toggle",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Metodo que cambia el estado del checkbox y emite si esta seleccionado.</p>\n"
              },
              {
                "name": "toogleDisabled",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Importa el componente de Checks con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa el componente de Checks con los dise\u00f1os de Bancolombia S.A.",
            "type": "component",
            "extends": "BcGeneralInputComponent",
            "accessors": {
              "isCheckBoxChecked": {
                "name": "isCheckBoxChecked",
                "getSignature": {
                  "name": "isCheckBoxChecked",
                  "type": "",
                  "returnType": "",
                  "line": 140
                }
              }
            }
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": " default",
            "code": {
              "html": "\n        <bc-checkbox-group (change)=\"onChangeCheckBox($event)\" [formControl]=\"checkBoxGroup\" >\n        <bc-checkbox class=\"bc-my-4 bc-mx-4\" (changeState)=\"state=$event\" [value]=\"'1'\"></bc-checkbox>\n        <bc-checkbox class=\"bc-my-4 bc-mx-4\" (changeState)=\"state=$event\" [isChecked]=\"true\" [value]=\"'2'\"></bc-checkbox>\n        <bc-checkbox class=\"bc-my-4 bc-mx-4\" (changeState)=\"state=$event\" [indeterminate]=\"true\" [value]=\"'3'\"></bc-checkbox>\n      </bc-checkbox-group>",
              "script": "\n        checkBoxGroup = new FormControl();\n        onChangeCheckBox(e){\n    \n        }\n        ",
              "language": "ts"
            }
          },
          {
            "description": "Con Label",
            "code": {
              "html": "\n                <bc-checkbox class=\"col-6 offset-5\" (changeState)=\"state=$event\" label=\"Label\"></bc-checkbox>\n                <bc-checkbox class=\"col-6 offset-5\" (changeState)=\"state=$event\" label=\"Label\" [isChecked]=\"true\"></bc-checkbox>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "disabled",
            "code": {
              "html": "\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\" [isChecked]=\"true\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\" [indeterminate]=\"true\"></bc-checkbox>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "black default",
            "code": {
              "html": "\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [isChecked]=\"true\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [indeterminate]=\"true\"></bc-checkbox>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "black disabled",
            "code": {
              "html": "\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\" [isChecked]=\"true\"></bc-checkbox>\n                <bc-checkbox class=\"col-4 offset-5\" (changeState)=\"state=$event\" [enabled]=\"false\" [indeterminate]=\"true\"></bc-checkbox>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "black con Label",
            "code": {
              "html": "\n                <bc-checkbox class=\"col-6 offset-5\" (changeState)=\"state=$event\" label=\"Label\"></bc-checkbox>\n                <bc-checkbox class=\"col-6 offset-5\" (changeState)=\"state=$event\" label=\"Label\" [isChecked]=\"true\"></bc-checkbox>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "name": "BcCheckBox",
        "description": "<p>Los checkbox se usan cuando hay una lista de opciones y el usuario puede seleccionar m\u00faltiples opciones, incluidas todas o ninguna</p>",
        "parameters": [
          {
            "name": "value",
            "type": "bool?",
            "required": true,
            "description": "<p>Hace referencia si la casilla de verifiacion esta marcada. S\u00f3lo puede ser null si tristate es verdadero.</p>"
          },
          {
            "name": "onChanged",
            "type": "ValueChanged<bool?>?",
            "required": true,
            "description": "<p>Se llama cuando el valor de la casilla de verificaci\u00f3n debe cambiar. Se puede establecer en nulo para deshabilitar la casilla de verificaci\u00f3n.</p>"
          },
          {
            "name": "child",
            "type": "Widget?",
            "required": false,
            "description": "<p>Define el contenedor del restante de del checkbox.</p>"
          },
          {
            "name": "tristate",
            "type": "bool",
            "required": false,
            "description": "<p>Hace referencia a los 3 estados posibles del checkbox, es falso por defecto.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Checkbox tri-estado habilitado inicialmente no check",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: _valueCheck1,\n                  tristate: true,\n                  onChanged: (value) {\n                    setState(() {\n                      _valueCheck1 = value;\n                      _onChanged(_valueCheck1);\n                    });\n                  },\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox tri-estado habilitado inicialmente check",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: _valueCheck,\n                  tristate: true,\n                  onChanged: (value) {\n                    setState(() {\n                      _valueCheck = value;\n                      _onChanged(_valueCheck);\n                    });\n                  },\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox tri-estado habilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: _isChecked,\n                  tristate: true,\n                  onChanged: (value) {\n                    setState(() {\n                      _isChecked = value;\n                      if (_isChecked == false) {\n                      } else if (_isChecked == null) {\n                        _counter--;\n                      } else {\n                        _onChanged(_isChecked);\n                      }\n                    });\n                  },\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox deshabilitado inicialmente no chek",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: false,\n                  onChanged: null,\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox deshabilitado inicialmente check",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: true,\n                  onChanged: null,\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox tri-estado deshabilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  onChanged: null,\n                  value: null,\n                  tristate: true,\n                ),"
              }
            ]
          },
          {
            "description": "Checkbox habilitado con titulo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCheckBox(\n                  value: _blockCheck,\n                  onChanged: (bool? v) {\n                    setState(() {\n                      _blockCheck = v;\n                      _onChanged(this._blockCheck);\n                    });\n                  },\n                  child: BcText.labelText(\n                    label: 'Label',\n                  ),\n                ),\n                BcCheckBox(\n                  value: false,\n                  onChanged: null,\n                  child: BcText.labelText(\n                    label: 'Label',\n                  ),\n                ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcCircleLoading",
        "description": "<p>BcCircleLoading es un componente circular que simula la carga de elementos.</p>",
        "parameters": [
          {
            "name": "isDarkTheme",
            "type": "bool",
            "required": true,
            "description": "<p>Indica el tema de colores para pintar el loading.</p>"
          },
          {
            "name": "currentProgress",
            "type": "int",
            "required": true,
            "description": "<p>Representa el progreso que lleva el circulo de carga.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcCircleLoading es un componente circular que simula la carga de elementos.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n BcCircleLoading(\n   isDarkTheme: true,\n   currentProgress: 50,\n );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcDatePickerWheel",
        "description": "<p>BcDatePickerWheel consiste en un carrusel de selecci\u00f3n de fecha.</p>",
        "parameters": [
          {
            "name": "message",
            "type": "String",
            "required": true,
            "description": "<p>Mensaje que enfatizar\u00e1 la acci\u00f3n del widget.</p>"
          },
          {
            "name": "buttonLabel",
            "type": "String",
            "required": false,
            "description": "<p>Label que enfatizar\u00e1 la acci\u00f3n del bot\u00f3n.</p>"
          },
          {
            "name": "maxDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>Fecha maxima a visualizar en el widget.</p>"
          },
          {
            "name": "currentDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>Fecha que se desea visualizar en el widget.</p>"
          },
          {
            "name": "onSelectedDate",
            "type": "ValueChanged<DateTime>",
            "required": true,
            "description": "<p>Metodo callback, ejecutado cuando se selecciona una fecha.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcDatePickerWheel consiste en un carrusel de selecci\u00f3n de fecha.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\nBcDatePickerWheel(\n   message: *texto*,\n   onSelectedDate: (dateTime){},\n   maxDate: DateTime.now(),\n   currentDate: DateTime.now()\n);\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcDotsIndicator",
        "description": "<p>BcDotsIndicator representa puntos indicadores de uso normal en paginadores y vistas de paginas al pie de las mismas para indicar la ubicaci\u00f3n en la que se encuentra</p>",
        "parameters": [
          {
            "name": "controller",
            "type": "PageController",
            "required": true,
            "description": "<p>Controlador de paginas donde se encuentra instanciado para detectar un cambio de pagina y ser mostrado.</p>"
          },
          {
            "name": "itemCount",
            "type": "int",
            "required": true,
            "description": "<p>N\u00famero entero para determinar el n\u00famero de indicadores.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcDotsIndicator representa puntos indicadores de uso normal en paginadores y vistas de paginas al pie de las mismas para indicar la ubicaci\u00f3n en la que se encuentra</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\nBcDotsIndicator(\n  controller: _pageController,\n  itemCount: 5,\n  key: Key('dotsIndicator'),\n)\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcError",
        "description": "<p>BcError es una pagina que presenta un mensaje de error al usuario.</p>",
        "parameters": [
          {
            "name": "model",
            "type": "BcErrorModel",
            "required": true,
            "description": "<p>Modelo de datos para pasar los parametros de informaci\u00f3n al componente.</p>"
          },
          {
            "name": "onContinuePressed",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>Funci\u00f3n callback para llamado al momento del usuario seleccionar bot\u00f3n continuar.</p>"
          },
          {
            "name": "onSecondButtonPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n callback para llamado al momento del usuario seleccionar bot\u00f3n secundario.</p>"
          },
          {
            "name": "onCancelPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n callback para llamado al momento del usuario seleccionar bot\u00f3n cancelar.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcError es una pagina que presenta un mensaje de error al usuario.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n  BcError(\n    model: BcErrorModel(\n      title: \"titleText\",\n      message: \"messageText\",\n      code: \"codeTxt\",\n      buttonTitle: \"firstBtnText\",\n    ),\n    onContinuePressed: () {*action*},\n    onCancelPressed: () {*action*},\n  );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcFabBtn",
        "description": "<p>BcFabBtn representa un bot\u00f3n flotante con la implementaci\u00f3n de un icono que activa una acci\u00f3n en la interfaz de usuario, los tipos de bot\u00f3n son: primario, secundario-blanc, semi-transparente y c\u00f3digo QR. Por defecto, todos los tipos se visualizan habilitados.</p>",
        "parameters": [
          {
            "name": "onPressedAction",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>M\u00e9todo callback, ejecutado al presionar o clickear el componente.</p>"
          },
          {
            "name": "buttonType",
            "type": "BcFabBtnType",
            "required": true,
            "description": "<p>Define el tipo de bot\u00f3n; Primary: Primario, Secondary: Secundario o Blanco, Ghost: Semi-Transparente y QR.</p>"
          },
          {
            "name": "icon",
            "type": "IconData",
            "required": true,
            "description": "<p>Define un icono al bot\u00f3n para enfatizar la acci\u00f3n de este.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Determina el estado del widget: true: Habilitado y false: Deshabilitado.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Fab bot\u00f3n primario activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('activeBtnPrimary'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.Primary,\n                  icon: BcFunctionalIcons.SEARCH,\n                ),"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n primario inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('inactiveBtnPrimary'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.Primary,\n                  icon: BcFunctionalIcons.SEARCH,\n                  enabled: false,\n                )"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n secundario activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('activeBtnSecondary'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.Secondary,\n                  icon: BcFunctionalIcons.QR_SCAN,\n                ),"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n secundario inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('inactiveBtnSecondary'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.Secondary,\n                  icon: BcFunctionalIcons.QR_SCAN,\n                  enabled: false,\n                )"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n fantasma activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                    BcFabBtn(\n                      key: const Key('activeBtnSemiGhost'),\n                      onPressedAction: _incrementCounter,\n                      buttonType: BcFabBtnType.SemiGhost,\n                      icon: BcFunctionalIcons.SEARCH,\n                    ),"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n fantasma inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                    BcFabBtn(\n                      key: const Key('inactiveBtnSemiGhost'),\n                      onPressedAction: _incrementCounter,\n                      buttonType: BcFabBtnType.SemiGhost,\n                      icon: BcFunctionalIcons.SEARCH,\n                      enabled: false,\n                    )"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n QR activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('activeBtnQR'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.QR,\n                  icon: BcFunctionalIcons.QR_SCAN,\n                ),"
              }
            ]
          },
          {
            "description": "Fab bot\u00f3n QR inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcFabBtn(\n                  key: const Key('inactiveBtnQR'),\n                  onPressedAction: _incrementCounter,\n                  buttonType: BcFabBtnType.QR,\n                  icon: BcFunctionalIcons.QR_SCAN,\n                  enabled: false,\n                )"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcHourSelect",
        "description": "<p>BcHourSelect es un men\u00fa desplegable que presenta una lista de opciones que se pueden usar para seleccionar o filtrar el contenido existente</p>",
        "parameters": [
          {
            "name": "onTimeChanged",
            "type": "ValueChanged<DateTime>?",
            "required": false,
            "description": "<p>M\u00e9todo callback invocado cuando cambia el tiempo.</p>"
          },
          {
            "name": "timeController",
            "type": "TextEditingController",
            "required": true,
            "description": "<p>Controlador de input para la hora.</p>"
          },
          {
            "name": "labelText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de descripcion animado al momento de insertar una opcion de la lista desplegable.</p>"
          },
          {
            "name": "helpText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de ayuda que se muestra debajo del underline.</p>"
          },
          {
            "name": "hintText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de ayuda que se muestra en la entrada de texto no editable.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera para habilitar o deshabilitar el men\u00fa desplegable.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Selector de Hora",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcHourSelect(\n            timeController: TextEditingController(),\n            labelText: 'Hour',\n            hintText: 'HintText',\n            helpText: 'hh : mm',\n          ),"
              }
            ]
          },
          {
            "description": "Selector de Hora Deshabilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcHourSelect(\n            timeController: TextEditingController(),\n            enabled: false,\n            labelText: 'Hour',\n            hintText: 'HintText',\n            helpText: 'hh : mm',\n          ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Iconography",
    "description": "Los \u00edconos de nuestra marca combinan trazos s\u00f3lidos con el contraste entre acabados angulares y redondos, derivados del isotipo. Los iconos del sistema simbolizan acciones",
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcIconComponent",
            "host": {},
            "selector": "bc-icon[aria-label]",
            "inputsClass": [
              {
                "name": "aria-label",
                "description": "<p>aria-label.</p>\n",
                "type": "string"
              },
              {
                "name": "class",
                "description": "<p>Clase del \u00edcono</p>\n",
                "type": "string"
              },
              {
                "name": "name",
                "description": "<p>Nombre del recurso visual a usar, puede ser un \u00edcono o una imagen svg.</p>\n",
                "type": "string"
              },
              {
                "name": "size",
                "description": "<p>Tama\u00f1o del \u00edcono.</p>\n",
                "type": "\"xs\" | \"sm\" | \"st\" | \"md\" | \"lg\" | \"lx\""
              },
              {
                "name": "width",
                "defaultValue": "'100px'",
                "description": "<p>Tama\u00f1o en pixeles del recurso. Por defecto son 100px</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "buildIcon",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "buildImage",
                "args": [
                  {
                    "name": "typeIcon",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "setSize",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Configura el tama\u00f1o a usar para los \u00edconos, por defecto se establece en SM</p>\n"
              },
              {
                "name": "validateIcon",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Iconos del showcase</p>\n",
            "rawdescription": "Iconos del showcase",
            "type": "component"
          },
          {
            "name": "BcIconComponent",
            "host": {},
            "selector": "bc-icon[aria-label]",
            "inputsClass": [
              {
                "name": "aria-label",
                "description": "<p>aria-label.</p>\n",
                "type": "string"
              },
              {
                "name": "class",
                "description": "<p>Clase del \u00edcono</p>\n",
                "type": "string"
              },
              {
                "name": "name",
                "description": "<p>Nombre del recurso visual a usar, puede ser un \u00edcono o una imagen svg.</p>\n",
                "type": "string"
              },
              {
                "name": "size",
                "description": "<p>Tama\u00f1o del \u00edcono.</p>\n",
                "type": "\"xs\" | \"sm\" | \"st\" | \"md\" | \"lg\" | \"lx\""
              },
              {
                "name": "width",
                "defaultValue": "'100px'",
                "description": "<p>Tama\u00f1o en pixeles del recurso. Por defecto son 100px</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "buildIcon",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "buildImage",
                "args": [
                  {
                    "name": "typeIcon",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "setSize",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Configura el tama\u00f1o a usar para los \u00edconos, por defecto se establece en SM</p>\n"
              },
              {
                "name": "validateIcon",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Iconos del showcase</p>\n",
            "rawdescription": "Iconos del showcase",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Cualquier \u00edcono",
            "code": {
              "html": " \n            <bc-icon  name=\"iconName\" height=\"30px\" aria-hidden=\"true\" aria-label=\"prueba\"></bc-icon>                ",
              "script": "\n            ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      }
    ]
  },
  {
    "nameComponent": "Label",
    "description": "Los botones tipo etiqueta permiten que los usuarios realizar acciones r\u00e1pidas, tambien se pueden usar como un m\u00e9todo para filtrar datos,",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcFilterLabelComponent",
            "selector": "bc-filter-label",
            "inputsClass": [
              {
                "name": "dismissible",
                "defaultValue": "false",
                "description": "<p>Propiedad para validar si se incluye icono de cerrar/cancelar.</p>\n"
              },
              {
                "name": "icon",
                "defaultValue": "''",
                "description": "<p>Icono del label.</p>\n"
              },
              {
                "name": "status",
                "description": "<p>Propiedad de estado que indica si est\u00e1 seleccionado o deshabilitado.</p>\n",
                "type": "\"disabled\" | \"selected\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente label</p>\n",
            "rawdescription": "Componente label",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Estructura",
            "code": {
              "html": "\nDefault:\n<bc-filter-label icon=\"calendar-alt\" [dismissible]=\"true\">Item 1</bc-filter-label>\n\nLabel sin icono de cancelar selecci\u00f3n:\n<bc-filter-label icon=\"heart\" [dismissible]=\"false\">Item 2</bc-filter-label>\n\nLabel sin icono de acci\u00f3n:\n<bc-filter-label [dismissible]=\"true\">Item 3</bc-filter-label>\n\nLabel seleccionado como filtro:\n<bc-filter-label icon=\"calendar-alt\" [dismissible]=\"true\" [status]=\"selected\">Item 4</bc-filter-label>\n\nLabel deshabiltado:\n<bc-filter-label icon=\"calendar-alt\" [dismissible]=\"true\" [status]=\"disabled\">Item 5</bc-filter-label>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcLinkDirective",
            "type": "directive",
            "description": "<p>Componente links se usa para indicar un v\u00ednculo a diferentes vistas.</p>\n",
            "selector": "[bc-link]",
            "inputsClass": [
              {
                "name": "class",
                "defaultValue": "''",
                "description": "<p>Clase del link.</p>\n"
              },
              {
                "name": "typeLink",
                "defaultValue": "'default'",
                "description": "<p>Estilo de link.</p>\n",
                "type": "\"default\" | \"gray\" | \"white\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "getStyles",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Obtener estilos por defecto</p>\n"
              },
              {
                "name": "setAccesibility",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Metodo para lo de accesibilidad</p>\n"
              }
            ]
          }
        ],
        "examples": [
          {
            "description": "Estructura",
            "code": {
              "html": "\n  <a bc-link href=\"components/bc-button\" class=\"bc-col-12\">Botones</a>\n  <a bc-link typeLink='gray' href=\"components/bc-button\" class=\"bc-col-12\"> Botones</a>\n  <a bc-link href=\"#Botones\"> Botones\n    <bc-icon size=\"sm\" height=\"30px\" aria-hidden=\"true\" aria-label=\"prueba\">insert-coin</bc-icon>\n  </a>              ",
              "script": "\n            ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcLoading",
        "description": "<p>BcLoading representa un modal de informaci\u00f3n mientras se ejecutan procesos   internos de una tarea.</p>",
        "parameters": [
          {
            "name": "context",
            "type": "BuildContext",
            "required": true,
            "description": "<p>Se utiliza para identificar el contexto donde se debe renderizar el elemento.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "showLoading",
            "args": {
              "names": [
                "message"
              ],
              "types": [
                "String"
              ]
            }
          },
          {
            "returnType": "void",
            "name": "hideLoading",
            "args": {
              "names": [],
              "types": []
            }
          },
          {
            "returnType": "bool",
            "name": "isLoading",
            "args": {
              "names": [],
              "types": []
            }
          }
        ],
        "examples": [
          {
            "description": "<p>BcLoading representa un modal de informaci\u00f3n mientras se ejecutan procesos   internos de una tarea.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\nBcLoading _loading = BcLoading(context);\n_loading.showLoading(message: \"Lorem ipsum dolor sit amet\");\n_loading.hideLoading();\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Loader",
    "description": "El Loader es un elemento visual que informa al usuario que se est\u00e1 realizando un proceso dentro del sistema. El loader da feedback al usuario indicando que el sistema se encuentra activo y est\u00e1 procesando, validando o cargando informaci\u00f3n.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcLoaderComponent",
            "selector": "bc-loader",
            "inputsClass": [
              {
                "name": "colorLoader",
                "defaultValue": "'default'",
                "description": "<p>Color del elemento.</p>\n"
              },
              {
                "name": "sizeLoader",
                "defaultValue": "'sm'",
                "description": "<p>Tama\u00f1o del componente.</p>\n"
              },
              {
                "name": "speedLoader",
                "defaultValue": "'0.5'",
                "description": "<p>Velocidad.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente estilo cargando</p>\n",
            "rawdescription": "Componente estilo cargando",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Estructura",
            "code": {
              "html": "\n      <bc-loader speedLoader='0.5' sizeLoader='xl'></bc-loader>\n      <bc-loader speedLoader='0.5' sizeLoader='lg'></bc-loader>\n      <bc-loader speedLoader='0.5' sizeLoader='md'></bc-loader>\n      <bc-loader speedLoader='0.5'></bc-loader>\n      <bc-loader speedLoader='0.5' sizeLoader='xs'></bc-loader>\n  ",
              "script": "slidersValue: number = 2;\nlet speed = 4 /this.slidersValue",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "Preloader",
    "description": "El Preloader es un elemento visual que indica al usuario el proceso de carga de un grupo de datos en pantalla, comunicando de esta manera que el sistema se encuentra activo y no est\u00e1 congelado o presenta alg\u00fan fallo. Adem\u00e1s, el uso de estos elementos contribuye a la satisfacci\u00f3n de los usuarios generando una percepci\u00f3n de tiempo menor en los tiempos de carga.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcPreloaderComponent",
            "selector": "bc-preloader",
            "inputsClass": [
              {
                "name": "height",
                "description": "<p>Alto en p\u00edxeles(px) del preloader.</p>\n",
                "type": "string"
              },
              {
                "name": "type",
                "description": "<p>Tipo de preloader.</p>\n",
                "type": "\"circle\" | \"square\" | \"line\""
              },
              {
                "name": "width",
                "description": "<p>Ancho en p\u00edxeles(px) del preloader.</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente preloader - sirve para precargar con un estilo tipo lazy load. </p>\n",
            "rawdescription": "Componente preloader - sirve para precargar con un estilo tipo lazy load. ",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Estructura",
            "code": {
              "html": "\nDefault (100px):\n\nCircle:\n<bc-preloader type=\"circle\"></bc-preloader>\n\nSquare:\n<bc-preloader type=\"square\"></bc-preloader>\n\nLine:\n<bc-preloader type=\"line\"></bc-preloader>\n\n\n\nEdit Sizes:\n\nCircle:\n<bc-preloader type=\"circle\" width=\"150\" height=\"150\"></bc-preloader>\n\nSquare:\n<bc-preloader type=\"square\" width=\"150\" height=\"150\"></bc-preloader>\n\nLine:\n<bc-preloader type=\"line\" width=\"150\" height=\"15\"></bc-preloader>\n",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "ProgressBar",
    "description": "El progress bar proporciona informaci\u00f3n importante para el usuario indic\u00e1ndole el estado de un proceso, ya sea cuando desear cargar un documento, o tener informaci\u00f3n de lo que ha pagado de su cr\u00e9ditos, entre otros.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcProgressBarComponent",
            "selector": "bc-progress-bar",
            "inputsClass": [
              {
                "name": "caption",
                "description": "<p>Texto que se muestra en el caption\nde la barra de progreso circular.</p>\n",
                "type": "string"
              },
              {
                "name": "circular",
                "defaultValue": "false",
                "description": "<p>Indica si la barra de progreso se muestra de forma\ncircular o lineal.\ntrue | false.</p>\n"
              },
              {
                "name": "color",
                "defaultValue": "''",
                "description": "<p>Color del progress bar.</p>\n",
                "type": "\"green\" | \"orange\" | \"blue\" | \"purple\" | \"pink\" | \"\""
              },
              {
                "name": "months",
                "description": "<p>N\u00famero de meses.</p>\n",
                "type": "number"
              },
              {
                "name": "percent",
                "defaultValue": "1",
                "description": "<p>Porcentaje de la barra de progreso.</p>\n"
              },
              {
                "name": "showInfo",
                "defaultValue": "false",
                "description": "<p>Muestra u oculta la informacion de la barra de progreso.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "updatePercent",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo que actualiza la barra de progreso circular.</p>\n",
                "modifierKind": [
                  112
                ]
              }
            ],
            "description": "<p>Componente barra de progreso.\nLa barra de progreso indica el estado actual\nde lo que se est\u00e1 procesando.</p>\n",
            "rawdescription": "Componente barra de progreso.\nLa barra de progreso indica el estado actual\nde lo que se est\u00e1 procesando.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Barra de progreso (Sin Informaci\u00f3n)",
            "code": {
              "html": "<bc-progress-bar [percent]=\"slidersValue\"></bc-progress-bar>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Barra de progreso (Con Informaci\u00f3n)",
            "code": {
              "html": "<bc-progress-bar [showInfo]=\"true\" [percent]=\"slidersValue\" [months]=\"12\" [caption]=\"'60 d\u00edas'\"></bc-progress-bar>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Barra de progreso (Circular)",
            "code": {
              "html": "<bc-progress-bar [circular]=\"true\" [percent]=\"slidersValue\" [months]=\"12\" [caption]=\"'60 d\u00edas restantes'\"></bc-progress-bar>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]",
      {
        "name": "BcRadioGroup",
        "description": "<p>El BcRadioGroup es una molecula que agrupa una serie de radio buttons en una sola l\u00ednea.</p>",
        "parameters": [
          {
            "name": "associatedValue",
            "type": "dynamic",
            "required": true,
            "description": "<p>Elemento tipo enum para configurar los elementos que se van a agrupar.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Booleano para indicar si se encuentra habilitado el radio group, por defecto es true.</p>"
          },
          {
            "name": "direction",
            "type": "String",
            "required": false,
            "description": "<p>Elemento para configurar la direccion que tendra el BcRadioGroup, por default es horizontal que alinea los radio button en una fila.</p>"
          },
          {
            "name": "valueButton",
            "type": "int?",
            "required": false,
            "description": "<p>Variable entera que indica el valor del radio group, indicando el que se encuentra seleccionado.</p>"
          },
          {
            "name": "onChange",
            "type": "ValueChanged<int?>",
            "required": true,
            "description": "<p>Elemento para configurar la accion del radio button, el cual nos retorna el index del radio button seleccionado.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>El BcRadioGroup es una molecula que agrupa una serie de radio buttons en una sola l\u00ednea.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n BcRadioGroup(\n    associatedValue: _value,\n    direction: true,\n    onChange: _onChange,\n ),\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Radio",
    "description": "Los radio buttons se usan cuando una lista de dos o m\u00e1s opciones son mutuamente excluyentes, lo que significa que el usuario debe seleccionar solo una opci\u00f3n.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcRadioComponent",
            "selector": "bc-radio",
            "inputsClass": [
              {
                "name": "enabled",
                "defaultValue": "true",
                "description": "<p>Indica si el elemento esta habilitado.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "''",
                "description": "<p>Id del elemento.</p>\n"
              },
              {
                "name": "isChecked",
                "defaultValue": "false",
                "description": "<p>Indica si el elemento esta seleccionado.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Nombre del elemento radio.</p>\n"
              },
              {
                "name": "value",
                "defaultValue": "''",
                "description": "<p>Valor del elemento.</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "changeStateForParent",
                "defaultValue": "new EventEmitter<any>()",
                "description": "<p>Valor seleccionado.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "keyEvent",
                "args": [
                  {
                    "name": "event",
                    "type": "KeyboardEvent"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo para accesibilidad.</p>\n"
              },
              {
                "name": "toggle",
                "args": [
                  {
                    "name": "event",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cambia el estado al seleccionar elemento.</p>\n"
              },
              {
                "name": "toogleDisabled",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Componente Radio Button</p>\n",
            "rawdescription": "Componente Radio Button",
            "type": "component",
            "accessors": {
              "isRadioChecked": {
                "name": "isRadioChecked",
                "getSignature": {
                  "name": "isRadioChecked",
                  "type": "",
                  "returnType": "",
                  "line": 104
                }
              }
            }
          },
          {
            "name": "BcRadioGroupComponent",
            "selector": "bc-radio-group",
            "inputsClass": [
              {
                "name": "disabled",
                "defaultValue": "false"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "changeValue",
                "defaultValue": "new EventEmitter<any>()",
                "type": "EventEmitter"
              },
              {
                "name": "onDisabled",
                "defaultValue": "new EventEmitter<boolean>()",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "getIsDisabled",
                "args": [],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn value=\"1\">Default 1</bc-radio-btn>\n        <bc-radio-btn value=\"2\">Default 2</bc-radio-btn>\n        </bc-radio-button-group>",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          },
          {
            "description": "Disabled",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn  name=\"white-disabled\" value=\"1\" [enabled]=\"false\"></bc-radio-btn>\n        <bc-radio-btn name=\"white-disabled\" value=\"2\" [enabled]=\"false\" [isChecked]=\"true\"></bc-radio-btn>\n        </bc-radio-button-group>",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          },
          {
            "description": "Con Label",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn  name=\"white-label\" value=\"1\" label=\"Label\"></bc-radio-btn>\n        <bc-radio-btn  name=\"white-label\" value=\"2\" label=\"Label\" [isChecked]=\"true\"></bc-radio-btn>\n        </bc-radio-button-group>",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          },
          {
            "description": "Black Default",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn  name=\"black-default\" value=\"1\"></bc-radio-btn>\n        <bc-radio-btn  name=\"black-default\" value=\"2\" [isChecked]=\"true\"></bc-radio-btn>\n        </bc-radio-button-group>",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          },
          {
            "description": "Black Disabled",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn  name=\"black-disabled\" value=\"1\" [enabled]=\"false\"></bc-radio-btn>\n        <bc-radio-btn  name=\"black-disabled\" value=\"1\" [enabled]=\"false\" [isChecked]=\"true\"></bc-radio-btn>\n        </bc-radio-button-group>\n        ",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          },
          {
            "description": "Black con Label",
            "code": {
              "html": "\n        <bc-radio-button-group (onChange)=\"yourFunction($event)\">\n        <bc-radio-btn  name=\"black-label\" value=\"1\" label=\"Label\" [themeDark]=\"true\"></bc-radio-btn>\n        <bc-radio-btn  name=\"black-label\" value=\"2\" label=\"Label\" [isChecked]=\"true\" [themeDark]=\"true\"></bc-radio-btn>\n        </bc-radio-button-group>",
              "script": "yourFunction($event){Code Here...}",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "Slider",
    "description": "El slider permite seleccionar un rango dentro de una barra, se usa para parametrizar configuraciones tales como atributos (filtros, volumen, brillo).",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcSliderComponent",
            "selector": "bc-slider",
            "inputsClass": [
              {
                "name": "disabled",
                "defaultValue": "false",
                "description": "<p>Indica el estado del slider por defecto esta habilitado.</p>\n",
                "type": "boolean"
              },
              {
                "name": "max",
                "defaultValue": "SLIDER_N100",
                "description": "<p>Valor m\u00e1ximo que puede tomar en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "min",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor minimo que puede tomar en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "referenceValue",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor de referencia que puede tomar en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "value",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor del rango que se inicializa en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "outputValue",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Indica el valor de salida seleccionado en el slider.</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "getOutputValue",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Metodo obtener valor del slider.</p>\n"
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Deshabilita por medio de esta funci\u00f3n el slider media c\u00f3digo.</p>\n"
              },
              {
                "name": "updateValue",
                "args": [
                  {
                    "name": "valueOutput",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente Slider</p>\n",
            "rawdescription": "Componente Slider",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          },
          {
            "name": "BcSliderDoubleComponent",
            "selector": "bc-slider-double",
            "inputsClass": [
              {
                "name": "disabled",
                "defaultValue": "false",
                "description": "<p>Indica el valor del slider seleccionado en el lado derecho.</p>\n",
                "type": "boolean"
              },
              {
                "name": "max",
                "defaultValue": "SLIDER_N100",
                "description": "<p>Valor m\u00e1ximo que puede tomar en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "min",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor m\u00ednimo que puede tomar en el slider.</p>\n",
                "type": "number"
              },
              {
                "name": "referenceValue",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor de referencia.</p>\n",
                "type": "number"
              },
              {
                "name": "valueLeft",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor del rango que se inicializa en el slider izquierdo.</p>\n",
                "type": "number"
              },
              {
                "name": "valueRight",
                "defaultValue": "SLIDER_0",
                "description": "<p>Valor del rango que se inicializa en el slider derecho.</p>\n",
                "type": "number"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "outputValueLeft",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Indica el valor del slider seleccionado en el lado izquierda.</p>\n",
                "type": "EventEmitter"
              },
              {
                "name": "outputValueRight",
                "defaultValue": "new EventEmitter<number>()",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "getOutputValueLeft",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo obtener valor del slider en el lado izquierdo.</p>\n"
              },
              {
                "name": "getOutputValueRight",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo obtener valor del slider en el lado derecho.</p>\n"
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Deshabilita por medio de esta funci\u00f3n el slider media c\u00f3digo.</p>\n"
              },
              {
                "name": "updateValue",
                "args": [
                  {
                    "name": "valueOutput",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Actualiza el valor del slider doble.</p>\n"
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente slider</p>\n",
            "rawdescription": "Componente slider",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Single horizontal Slider",
            "code": {
              "html": "\n        <div class=\"container\">\n          <input type=\"range\" class=\"bc-slider\"\n            role=\"slider\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=value\n            [value]=value [min]=min [max]=max (click)=\"this.getOutputValue()\">\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Double horizontal Slider",
            "code": {
              "html": "\n          <div class=\"bc-slider-double-container\">\n            <input type=\"range\" role=\"slider\"\n              aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"control izquierdo\"\n              [min]=min [max]=max [value]=valueLeft (click)=\"this.getOutputValueLeft()\"\n              class=\"bc-slider-dual input-left\">\n            <input type=\"range\" role=\"slider\"\n              aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"control derecho\"\n              [min]=min [max]=max [value]=valueRight (click)=\"this.getOutputValueRight()\"\n              class=\"bc-slider-dual input-right\">\n            <div class=\"slider\">\n              <div class=\"track\"></div>\n              <div class=\"range\"></div>\n              <div class=\"thumb left\"></div>\n              <div class=\"thumb right\"></div>\n            </div>\n          </div>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "setValue",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "updateInput",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Obtiene los param\u00e9tros de rango del slider para calcular el tama\u00f1o de los pasos</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Single horizontal Slider",
            "code": {
              "html": "\n          <div class=\"bc-row\">\n            <div class=\"bc-col-12\">\n              <div class=\"bc-slider-thumb\">\n              </div>\n              <input class=\"bc-slider\" role=\"range\" step=\"1\" aria-valuenow=\"0\"\n                aria-orientation=\"slider\" aria-valuemin=\"0\" aria-valuemax=\"100\" type=\"range\" min=\"0\" max=\"100\" value=\"0\" />\n            </div>\n          </div>",
              "script": "<script>\n BcSliderBehavior.setUpAll();\n </script>",
              "language": "js"
            }
          },
          {
            "description": "Double horizontal Slider",
            "code": {
              "html": "\n          <div class=\"bc-row\">\n            <div class=\"bc-col-12\">\n              <div class=\"bc-slider-double-container\">\n                <input class=\"bc-slider-dual input-left\" type=\"range\" min=\"0\" max=\"100\" value=\"25\" />\n                <input class=\"bc-slider-dual input-right\" type=\"range\" min=\"0\" max=\"100\" value=\"75\" />\n                      <div class=\"slider\">\n                    <div class=\"track\"></div>\n                  <div class=\"range\"></div>\n                  <div class=\"thumb left\"></div>\n                  <div class=\"thumb right\"></div>\n\n                </div>\n              </div>\n            </div>\n          </div>",
              "script": "<script>\n BcSliderDoubleBehavior.setUpAll();\n </script>",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcSlider",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputFunction",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "thumb",
            "type": "Element",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BCSlider",
        "description": "<p>BCSlider representa los dos tipos de deslizadores Default   -->  Un control deslizante, rango entre cero y un valor m\u00e1ximo. Double    -->  Dos controles deslizantes, rango variable entre  un valor minimo y  un m\u00e1ximo.</p>",
        "parameters": [
          {
            "name": "slideType",
            "type": "BcSlideType",
            "required": true,
            "description": "<p>Determina los dos tipos: Default, Double.</p>"
          },
          {
            "name": "valueMax",
            "type": "double",
            "required": true,
            "description": "<p>Rango m\u00e1ximo de valores.</p>"
          },
          {
            "name": "minimumDivision",
            "type": "double",
            "required": true,
            "description": "<p>Define la altura de la im\u00e1gen para el tipo Vertical.</p>"
          },
          {
            "name": "onDragStart",
            "type": "ValueChanged<double?>?",
            "required": false,
            "description": "<p>M\u00e9todo para obtener el valor m\u00e1ximo del slider double.</p>"
          },
          {
            "name": "onDragEnd",
            "type": "ValueChanged<double?>?",
            "required": false,
            "description": "<p>M\u00e9todo para obtener el valor minimo del slider double.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Slider por defecto",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BCSlider(\n          key: Key('slideDefault'),\n          slideType: BcSlideType.Default,\n          valueMax: 12,\n          minimumDivision: 2,\n          onDragEnd: _valorRange,\n        ),"
              }
            ]
          },
          {
            "description": "Slider doble",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BCSlider(\n            key: Key('slideDouble'),\n            slideType: BcSlideType.Double,\n            valueMax: 600,\n            minimumDivision: 1,\n            onDragStart: _valor,\n            onDragEnd: _lowervalor),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Stepper",
    "description": "Los steppers o progress trackers muestran el progreso a trav\u00e9s de una secuencia de pasos l\u00f3gicos y numerados. Esto con el fin de prevenir frustraciones de los usuarios en una tarea compleja.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcStepperComponent",
            "selector": "bc-stepper",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.helper.getId(this)",
                "description": "<p>Indica el id para el comportamiento del componente.</p>\n",
                "type": "string"
              },
              {
                "name": "direction",
                "defaultValue": "'horizontal'",
                "description": "<p>String que indicar\u00e1 la direcci\u00f3n horizontal o vertical del Stepper.</p>\n",
                "type": "\"horizontal\" | \"vertical\""
              },
              {
                "name": "enabled",
                "defaultValue": "true",
                "description": "<p>Habilita o deshabilita el componente.</p>\n",
                "type": "boolean"
              },
              {
                "name": "indexPosition",
                "defaultValue": "0",
                "description": "<p>Indica la posici\u00f3n inicial del paso en el componente, por defecto es el paso 1. </p>\n",
                "type": "number"
              },
              {
                "name": "steps",
                "description": "<p>Arreglo de pasos que contendr\u00e1 nuestro Stepper.</p>\n",
                "type": "string[]"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "valueOutput",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Salida del valor actual del componente.</p>\n",
                "type": "EventEmitter<number>"
              }
            ],
            "methodsClass": [
              {
                "name": "back",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que se encarga de retroceder el Stepper.</p>\n"
              },
              {
                "name": "next",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que se encarga de avanzar el Stepper.</p>\n"
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Habilita o deshabilita el stepper\ntrue | false por defecto es false.</p>\n"
              },
              {
                "name": "setvalueOutput",
                "args": [
                  {
                    "name": "param",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Valores a salir.</p>\n"
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n            <bc-stepper #stepper1\n              [steps]=\"stepsArray\"\n              [direction] = \"direction\"\n              [indexPosition] = \"indexPosition\">\n            </bc-stepper>\n            ",
              "script": "\n          let stepsArray: string = ['Step name long text', 'Formulario Inicial', 'Formulario Final', 'Step Name Long Text'];\n          let direction: string = \"horizontal\"\n          let indexPosition = 1 (Par\u00e1metro opcional)\n          ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addClickEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra el evento click que va permitir avanzar de paso.</p>\n"
          },
          {
            "name": "back",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se regresa un paso del stepper.</p>\n"
          },
          {
            "name": "click",
            "args": [
              {
                "name": "index",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Activar el paso de la posici\u00f3n index.</p>\n"
          },
          {
            "name": "createBulletSteps",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getCurrentState",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "getElement",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selector de los elementos del stepper.</p>\n"
          },
          {
            "name": "next",
            "args": [
              {
                "name": "index",
                "type": "number",
                "defaultValue": "this.currentStep"
              },
              {
                "name": "notify",
                "type": "",
                "defaultValue": "true"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Permite avanzar al siguiente paso del stepper, para lo cual valid\u00e1 la horientaci\u00f3n y el progreso.</p>\n"
          },
          {
            "name": "progressHorizontal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Muestra la barra de progreso horizontal.</p>\n"
          },
          {
            "name": "progressVertical",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Muestra la barra de progreso vertical.</p>\n"
          },
          {
            "name": "setBulletStatus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setCurrentStep",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setDirection",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Define la direcci\u00f3n del stepper, si es vertical u horizontal de acuerdo al atributo STEPPER_VERTICAL.</p>\n"
          },
          {
            "name": "setIndexStatus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Establece el estado del stepper de acuerdo al paso actual activo.</p>\n"
          },
          {
            "name": "setInitIndexPosition",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Define la posici\u00f3n inicial del stepper.</p>\n"
          },
          {
            "name": "setInitState",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Inicializa el stepper.</p>\n"
          },
          {
            "name": "setLabels",
            "args": [
              {
                "name": "labels",
                "type": "string[]"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el array de labels de cada paso del stepper.</p>\n"
          },
          {
            "name": "setNumStep",
            "args": [
              {
                "name": "numSteps",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Define el n\u00famero de pasos del stepper.</p>\n"
          },
          {
            "name": "setProgressHorizontal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Progreso de la barra horizontal.</p>\n"
          },
          {
            "name": "setProgressVertical",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Progreso de la barra vertical.</p>\n"
          },
          {
            "name": "setValue",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Permite avanzar o retroceder un paso seg\u00fan el valor de value con respecto a la posici\u00f3n actual.</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n              <div style=\"width: 100%; margin-bottom: 100px;\" id=\"stepper\" class=\"bc-stepper-vertical\">\n                <div class=\"bc-stepper-track\"></div>\n              </div>\n              <div>\n                <button class=\"bc-fab-button\" onclick=\"steppers[0].back()\">\n                  <i class=\"bc-icon\">minus</i>\n                </button>\n                <button class=\"bc-fab-button\" onclick=\"steppers[0].next()\">\n                  <i class=\"bc-icon\">plus</i>\n              </button>\n              ",
              "script": "\n              const bcStepperBehavior = new BcStepperBehavior();\n              bcStepperBehavior.setId('stepper');\n              stepsArray = ['Paso Inicial', 'Paso Datos', 'Paso Pagos', 'Paso Final'];\n              indexPosition = 3;\n              bcStepperBehavior.setLabels(stepsArray);\n              bcStepperBehavior.setUp();\n              bcStepperBehavior.setInitIndexPosition(indexPosition);\n              function next() {\n                  bcStepperBehavior.next();\n              }\n\n              function back() {\n                  bcStepperBehavior.back();\n              }\n              ",
              "language": "js"
            }
          },
          {
            "description": "Default",
            "code": {
              "html": "\n            <div style=\"width: 100%; margin-bottom: 100px;\" id=\"stepper\" class=\"bc-stepper-horizontal\">\n              <div class=\"bc-stepper-track\"></div>\n            </div>\n            <br><br><br>\n            <button class=\"bc-fab-btn-icon\" onclick=\"back()\">\n                <i class=\"bc-icon\">minus</i>\n            </button>\n            <button class=\"bc-fab-btn-icon\" onclick=\"next()\">\n                <i class=\"bc-icon\">plus</i>\n            </button>\n            ",
              "script": "\n            const bcStepperBehavior = new BcStepperBehavior();\n            bcStepperBehavior.setId('stepper');\n            stepsArray = ['Paso Inicial', 'Paso Datos', 'Paso Pagos', 'Paso Revisi\u00f3n', 'Paso Final'];\n            bcStepperBehavior.setLabels(stepsArray);\n            bcStepperBehavior.setUp();\n            function next() {\n                bcStepperBehavior.next();\n            }\n\n            function back() {\n                bcStepperBehavior.back();\n            }\n            ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "backButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "currentStep",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "direction",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "height",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "isHorizontal",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "labels",
            "defaultValue": "[]",
            "type": "string[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "maxStep",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "nextButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "numSteps",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputFunction",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "progressBulletArray",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "progressStepArray",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "progressTrack",
            "type": "HTMLDivElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "status",
            "defaultValue": "[]",
            "type": "string[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "width",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcSwitchComponent",
            "selector": "bc-switch",
            "inputsClass": [
              {
                "name": "disabled",
                "defaultValue": "false",
                "description": "<p>Indica si el elemento esta deshabilitado.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "isChecked",
                "defaultValue": "false",
                "description": "<p>Indica si el elemento esta seleccionado.</p>\n"
              },
              {
                "name": "required",
                "defaultValue": "false",
                "description": "<p>Indica si el elemento es requerido.</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "changeState",
                "defaultValue": "new EventEmitter<boolean>()",
                "description": "<p>Valor del elemento seleccionado.</p>\n",
                "type": "EventEmitter<boolean>"
              }
            ],
            "methodsClass": [
              {
                "name": "keyEvent",
                "args": [
                  {
                    "name": "event",
                    "type": "KeyboardEvent"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Metodo para accesibilidad.</p>\n"
              },
              {
                "name": "toggle",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cambio de estado del elemento.</p>\n"
              }
            ],
            "description": "<p>componente Switch</p>\n",
            "rawdescription": "componente Switch",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "General",
            "code": {
              "html": "\n            <bc-switch class=\"col-12\" (changeState)=\"state=$event\" [id]=\"'myOwnID'\" [disabled]=disabledState\n            [required]=requiredState [isChecked]=checkedState>\n            Label\n            </bc-switch>\n            ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "Tag",
    "description": "Los tags permiten a los usuarios identificar el estado de un componente. Los tags deben tener una relaci\u00f3n clara del estado del componente con respecto al contenido de un dato, un grupo o un componente.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcTagDirective",
            "type": "directive",
            "description": "<p>Importa la directiva de tag con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "selector": "[bc-tag]",
            "inputsClass": [
              {
                "name": "bc-tag",
                "description": "<p>Par\u00e1metro para denotar el tipo de tag.</p>\n",
                "type": "\"error\" | \"alert\" | \"success\" | \"info\""
              },
              {
                "name": "class",
                "defaultValue": "''",
                "description": "<p>Par\u00e1metro para denotar la clase del tag.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "setStyles",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>M\u00e9todo utilizado para configurar los estilos del tag.</p>\n"
              }
            ]
          }
        ],
        "examples": [
          {
            "description": "Error",
            "code": {
              "html": "<label bc-tag=\"error\">Error</label>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Success",
            "code": {
              "html": "<label bc-tag=\"success\">Success</label>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Alert",
            "code": {
              "html": "<label bc-tag=\"alert\">Alert</label>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Info",
            "code": {
              "html": "<label bc-tag=\"info\">Info</label>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "Accordion",
    "description": "Se usa para agrupar datos, informaci\u00f3n y/o diferentes componentes donde se requiera tener la opci\u00f3n de ocultar o mostrar.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcAccordionComponent",
            "selector": "bc-accordion",
            "inputsClass": [
              {
                "name": "active",
                "defaultValue": "false",
                "description": "<p>Permite configurar el comportamiento de la alerta para que est\u00e1 se muestre expandida desde su carga en el DOM\nes de tipo booleana y por defecto es false.</p>\n"
              },
              {
                "name": "type",
                "defaultValue": "'basic'",
                "description": "<p>Tipo de acorde\u00f3n [ basic(default) | info | advance | column | minimal | minimal-unbordered]\nDefine la esctructura que va a tener el acorde\u00f3n, por defecto es b\u00e1sica (basic).</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.</p>\n",
            "rawdescription": "Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.",
            "type": "component"
          },
          {
            "name": "BcAccordionContentComponent",
            "selector": "bc-accordion-content",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.</p>\n",
            "rawdescription": "Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.",
            "type": "component"
          },
          {
            "name": "BcAccordionGroupComponent",
            "selector": "bc-accordions-group",
            "inputsClass": [
              {
                "name": "multiple",
                "defaultValue": "false",
                "description": "<p>Define el comportamiento de evento expandir de la acorde\u00f3n\nSi es multiple, solo se podr\u00e1 expandir una acorde\u00f3n a la vez\nes decir, al expandir una se cierra la que estaba activa</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "select",
                "defaultValue": "new EventEmitter<number>()",
                "type": "EventEmitter<number>"
              }
            ],
            "methodsClass": [],
            "description": "<p>Importa el Acorde\u00f3n para contener elementos</p>\n",
            "rawdescription": "Importa el Acorde\u00f3n para contener elementos",
            "type": "component"
          },
          {
            "name": "BcAccordionHeaderComponent",
            "selector": "bc-accordion-header",
            "inputsClass": [
              {
                "name": "actionsIcon",
                "defaultValue": "[]",
                "description": "<p>Icono de las acciones a la derecha, se muestran si la variable tiene algun valor diferente de [] (vacio),\nrecibe un array de strings con los nombres de los iconos funcionales a mostrar.</p>\n",
                "type": "Array<string>"
              },
              {
                "name": "columns",
                "defaultValue": "[]",
                "description": "<p>Valores de las columnas a la derecha, se muestran si la variable tiene algun valor diferente de [] (vacio),\nrecibe un array de tipo AccordionColumn con los valores que el usuario desee mostrar, m\u00e1ximo son 3 columnas (recomendado).</p>\n",
                "type": "Array<AccordionColumn>"
              },
              {
                "name": "label",
                "defaultValue": "''",
                "description": "<p>Label a la parte derecha, es opcional y recibe cualquier valor string.</p>\n"
              },
              {
                "name": "leftIcon",
                "defaultValue": "''",
                "description": "<p>Icono a la izquierda, es de tipo funcional y va al lado izquierdo la acorde\u00f3n.</p>\n"
              },
              {
                "name": "subtitle",
                "defaultValue": "''",
                "description": "<p>Subt\u00edtulo, es opcional y puede tener cualquier valor string.</p>\n"
              },
              {
                "name": "subtitleIcon",
                "defaultValue": "''",
                "description": "<p>Icono al lado del subt\u00edtulo, es de tipo funcional y va a la derecha del subt\u00edtulo.</p>\n"
              },
              {
                "name": "title",
                "defaultValue": "'T\u00edtulo secci\u00f3n'",
                "description": "<p>T\u00edtulo principal, es obligatorio y puede tener cualquier valor string.</p>\n"
              },
              {
                "name": "titleIcon",
                "defaultValue": "''",
                "description": "<p>Icono al lado del t\u00edtulo, es de tipo funcional y va a la derecha del t\u00edtulo.</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "actionSelected",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Evento cuando se selecciona una acci\u00f3n, se ejecuta cuando se ha hecho clic en alg\u00fan icono de acci\u00f3n\ny retorna el nombre del icono al cual se le hizo clic.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "selectAction",
                "args": [
                  {
                    "name": "action",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Retorna el nombre del icono de la acci\u00f3n clickeada</p>\n"
              }
            ],
            "description": "<p>Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.</p>\n",
            "rawdescription": "Importa el acorde\u00f3n para contener info\nEl acorde\u00f3n colapsa desde un contenedor principal para de esta manera\nmostrar informaci\u00f3n interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Acorde\u00f3n s\u00faper basico",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion>\n            <bc-accordion-header\n              leftIcon=\"idea\"\n              title=\"Acorde\u00f3n super b\u00e1sico\"\n              subtitle=\"Subt\u00edtulo\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene iconos y borde superior e inferior que muestran el ancho del componente.\n              Normalmente se usa para agrupar en \u00e9l informaci\u00f3n textual como p\u00e1rrafos descriptivos.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Acorde\u00f3n s\u00faper b\u00e1sica sin borde",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion type='minimal-unbordered'>\n            <bc-accordion-header\n              leftIcon=\"idea\"\n              title=\"Acorde\u00f3n super b\u00e1sico\"\n              subtitle=\"Subt\u00edtulo\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene iconos y borde superior e inferior que muestran el ancho del componente.\n              Normalmente se usa para agrupar en \u00e9l informaci\u00f3n textual como p\u00e1rrafos descriptivos.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Acorde\u00f3n b\u00e1sica",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion>\n            <bc-accordion-header\n              leftIcon=\"idea\"\n              title=\"Acorde\u00f3n b\u00e1sico\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales para un acorde\u00f3n: T\u00edtulo e iconos.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n\n        <bc-accordions-group>\n          <bc-accordion>\n            <bc-accordion-header title=\"Acorde\u00f3n b\u00e1sico\"></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales para un acorde\u00f3n: T\u00edtulo e iconos.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Acorde\u00f3n informativo",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion>\n            <bc-accordion-header\n              leftIcon=\"idea\"\n              title=\"Acorde\u00f3n informativo\"\n              titleIcon=\"info\"\n              label=\"Label\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales para un acorde\u00f3n, adem\u00e1s de un texto\n              complementario a la derecha y un icono informativo ideal para\n              tooltips.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Acorde\u00f3n con columnas",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion type=\"column\">\n            <bc-accordion-header\n              title=\"Cuenta X\"\n              [columns]=\"columns\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales, adem\u00e1s de columnas alineadas al lado\n              derecho.\n            </bc-accordion-content>\n          </bc-accordion>\n          <bc-accordion type=\"column\">\n            <bc-accordion-header\n              title=\"Cuenta X\"\n              [columns]=\"columns\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales, adem\u00e1s de columnas alineadas al lado\n              derecho.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "\n        import { AccordionColumn } from '@bancolombia/design-system-web/bc-accordion';\n\n        columns: Array<AccordionColumn> = [\n          { value: 'Visa Platinum', alignLeft: true },\n          { value: 'COP $56.386.788,12', exchange: 'USD 3.000' },\n          { value: '$ 123.456,90'},\n        ];",
              "language": "ts"
            }
          },
          {
            "description": "Acorde\u00f3n avazando",
            "code": {
              "html": "\n        <bc-accordions-group>\n          <bc-accordion>\n            <bc-accordion-header\n              leftIcon=\"idea\"\n              title=\"Acorde\u00f3n avazando\"\n              titleIcon=\"info\"\n              subtitle=\"Subt\u00edtulo\"\n              subtitleIcon=\"info\"\n              [actionsIcon]=\"actionsIcon\"\n              (actionSelected)=\"myAction($event)\"\n            ></bc-accordion-header>\n            <bc-accordion-content>\n              Tiene los elementos esenciales y se le adiciona un subt\u00edtulo y m\u00e1s\n              opciones de iconos para acciones relacionadas al componente.\n            </bc-accordion-content>\n          </bc-accordion>\n        </bc-accordions-group>\n        ",
              "script": "\n          actionsIcon = ['edit', 'erase', 'comment-alt'];\n          myAction(action: string): void {\n            alert('Acci\u00f3n clickeada: ' + action);\n          }\n        ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addExpandEvent",
            "args": [
              {
                "name": "accordion",
                "type": "Element"
              },
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Permite expandir el conetido de la acorde\u00f3n agregando la clase &#39;active&#39;\ny removiendo las clase &#39;active&#39; de las dem\u00e1s acordeones para asi abrir una a la vez</p>\n"
          },
          {
            "name": "getAccordions",
            "args": [],
            "optional": false,
            "returnType": "Element[]",
            "typeParameters": [],
            "description": "<p>Se obtienen las acordeones dentro el grupo</p>\n"
          },
          {
            "name": "getAccordionsGroup",
            "args": [],
            "optional": false,
            "returnType": "Element[]",
            "typeParameters": [],
            "description": "<p>Se obtienen todos los grupos de acordeones es en DOM</p>\n"
          },
          {
            "name": "getHeader",
            "args": [
              {
                "name": "accordion",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "Element",
            "typeParameters": [],
            "description": "<p>Se obtiene el elemento header de la acorde\u00f3n</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Acorde\u00f3n s\u00faper b\u00e1sica",
            "code": {
              "html": "\n        <div class=\"bc-accordions-group\">\n\t\t\t\t\t<div class=\"bc-accordion bc-accordion-minimal\">\n\t\t\t\t\t\t<div class=\"bc-accordion-header\">\n\t\t\t\t\t\t\t<div class=\"bc-accordion-header-left\">\n\t\t\t\t\t\t\t\t<em class=\"bc-icon bc-sm\">idea</em>\n\t\t\t\t\t\t\t\t<div class=\"bc-accordion-text-container\">\n                  <h6 class=\"bc-accordion-title\">T\u00edtulo de secci\u00f3n</h6>\n                  <p class=\"bc-accordion-subtitle\">Subt\u00edtulo</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bc-accordion-header-right\">\n\t\t\t\t\t\t\t\t<em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bc-accordion-content\">\n\t\t\t\t\t\t\t<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n\t\t\t\t\t\t\t\tminus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n\t\t\t\t\t\t\t\tesse consequuntur amet fugiat cumque alias quibusdam.</p>\n\t\t\t\t\t\t</div>\n            <div class=\"bc-accordion-content bc-border-top\">\n\t\t\t\t\t\t\t<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n\t\t\t\t\t\t\t\tminus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n\t\t\t\t\t\t\t\tesse consequuntur amet fugiat cumque alias quibusdam.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        ",
              "script": " <script>\n  BcAccordionBehavior.setUpAll();\n </script>",
              "language": "js"
            }
          },
          {
            "description": "Acorde\u00f3n s\u00faper b\u00e1sica sin border",
            "code": {
              "html": "\n        <div class=\"bc-accordions-group\">\n          <div class=\"bc-accordion bc-accordion-minimal-unbordered\">\n            <div class=\"bc-accordion-header\">\n              <div class=\"bc-accordion-header-left\">\n                <em class=\"bc-icon bc-sm\">idea</em>\n                <div class=\"bc-accordion-text-container\">\n                  <h6 class=\"bc-accordion-title\">T\u00edtulo de secci\u00f3n</h6>\n                </div>\n              </div>\n              <div class=\"bc-accordion-header-right\">\n                <em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-accordion-content\">\n              <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n                minus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n                esse consequuntur amet fugiat cumque alias quibusdam.</p>\n            </div>\n          </div>\n        </div>\n          ",
              "script": "<script>\n    BcAccordionBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          },
          {
            "description": "Acorde\u00f3n b\u00e1sica",
            "code": {
              "html": "\n        <div class=\"bc-accordions-group\">\n          <div class=\"bc-accordion bc-accordion-basic\">\n            <div class=\"bc-accordion-header\">\n              <div class=\"bc-accordion-header-left\">\n                <em class=\"bc-icon bc-sm\">idea</em>\n                <div class=\"bc-accordion-text-container\">\n                  <h6 class=\"bc-accordion-title\">T\u00edtulo de secci\u00f3n</h6>\n                </div>\n              </div>\n              <div class=\"bc-accordion-header-right\">\n                <em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-accordion-content\">\n              <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n                minus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n                esse consequuntur amet fugiat cumque alias quibusdam.</p>\n            </div>\n          </div>\n        </div>\n          ",
              "script": "<script>\n    BcAccordionBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          },
          {
            "description": "Acorde\u00f3n informativo",
            "code": {
              "html": "\n        <div class=\"bc-accordions-group\">\n          <div class=\"bc-accordion bc-accordion-info\">\n            <div class=\"bc-accordion-header\">\n              <div class=\"bc-accordion-header-left\">\n                <em class=\"bc-icon bc-sm\">idea</em>\n                <div class=\"bc-accordion-text-container\">\n                  <h6 class=\"bc-accordion-title\">T\u00edtulo de secci\u00f3n <em class=\"bc-icon bc-sm\">info</em>\n                  </h6>\n                  </p>\n                </div>\n              </div>\n              <div class=\"bc-accordion-header-right\">\n                <p class=\"bc-accordion-label\">Label</p>\n                <em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-accordion-content\">\n              <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n                minus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n                esse consequuntur amet fugiat cumque alias quibusdam.</p>\n            </div>\n          </div>\n        </div>\n          ",
              "script": "<script>\n    BcAccordionBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          },
          {
            "description": "Acorde\u00f3n con columnas",
            "code": {
              "html": "\n        <div class=\"bc-accordion bc-accordion-column\">\n\t\t\t\t\t<div class=\"bc-accordion-header\">\n\t\t\t\t\t\t<div class=\"bc-accordion-header-left\">\n\t\t\t\t\t\t\t<div class=\"bc-accordion-text-container\">\n\t\t\t\t\t\t\t\t<h6 class=\"bc-accordion-title\">Cuenta 2</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bc-accordion-header-right\">\n\t\t\t\t\t\t\t<div class=\"bc-accordion-columns-container\">\n\t\t\t\t\t\t\t\t<h6 class=\"bc-accordion-column bc-align-left\">Visa Platinum</h6>\n\t\t\t\t\t\t\t\t<h6 class=\"bc-accordion-column\">\n\t\t\t\t\t\t\t\t\tCOP $56.386.788,12\n\t\t\t\t\t\t\t\t\t<span class=\"bc-accordion-column-exchange\">USD $400.12</span>\n\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t<h6 class=\"bc-accordion-column\">$ 123.456,90</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bc-accordion-content\">\n\t\t\t\t\t\t<p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n\t\t\t\t\t\t\tminus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n\t\t\t\t\t\t\tesse consequuntur amet fugiat cumque alias quibusdam.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n          ",
              "script": "<script>\n    BcAccordionBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          },
          {
            "description": "Acorde\u00f3n avanzada",
            "code": {
              "html": "\n        <div class=\"bc-accordions-group\">\n          <div class=\"bc-accordion bc-accordion-advance\">\n            <div class=\"bc-accordion-header\">\n              <div class=\"bc-accordion-header-left\">\n                <em class=\"bc-icon bc-sm\">idea</em>\n                <div class=\"bc-accordion-text-container\">\n                  <h6 class=\"bc-accordion-title\">T\u00edtulo de secci\u00f3n</h6>\n                  <p class=\"bc-accordion-subtitle\">Subt\u00edtulo <em class=\"bc-icon bc-sm\">info</em></p>\n                </div>\n              </div>\n              <div class=\"bc-accordion-header-right\">\n                <div class=\"bc-accordion-action-container\">\n                  <em class=\"bc-icon bc-sm\">erase</em>\n                  <em class=\"bc-icon bc-sm\">edit</em>\n                </div>\n                <em class=\"bc-icon bc-sm bc-toggle-button\">arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-accordion-content\">\n              <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Obcaecati excepturi praesentium\n                minus aspernatur quasi, quae velit eligendi minima est eaque asperiores incidunt atque\n                esse consequuntur amet fugiat cumque alias quibusdam.</p>\n            </div>\n          </div>\n        </div>\n          ",
              "script": "<script>\n    BcAccordionBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "activeFunction",
            "type": "function",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "headerList",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          }
        ]
      },
      {
        "name": "BcAcordeon",
        "description": "<p>El BcAcordeon se usa para mostrar informaci\u00f3n en diferentes grupos, de forma ordenada.</p>",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "required": true,
            "description": "<p>Hace referencia al titulo del acordeon.</p>"
          },
          {
            "name": "children",
            "type": "List<Widget>",
            "required": true,
            "description": "<p>widget que tendr\u00e1 el contenido despleganle.</p>"
          },
          {
            "name": "initiallyExpanded",
            "type": "bool",
            "required": false,
            "description": "<p>Hace referencia si inicia desplegado.</p>"
          },
          {
            "name": "icon",
            "type": "IconData",
            "required": false,
            "description": "<p>Hace referencia al icono de la izquierda de tipo Brand.</p>"
          },
          {
            "name": "enableIcon",
            "type": "bool",
            "required": false,
            "description": "<p>Determina la visibilidad del icono de la izquierda.</p>"
          },
          {
            "name": "onTap",
            "type": "ValueChanged<bool?>?",
            "required": false,
            "description": "<p>Entrega el valor referente si se encuentra expandido o no el acorde\u00f3n.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Acordeon con Icono",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcAcordeon(\n            title: 'Sin Icono ',\n            children: <Widget>[\n              Container(\n                height: 40,\n              )\n            ],\n          ),"
              }
            ]
          },
          {
            "description": "Acordeon solo Titulo",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcAcordeon(\n            title: 'Link',\n            enableIcon: true,\n            initiallyExpanded: true,\n            children: <Widget>[\n              Container(\n                height: 60,\n              )\n            ],\n          ),"
              }
            ]
          },
          {
            "description": "Acordeon inicialmente Expandido",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcAcordeon(\n            title: 'Link',\n            enableIcon: true,\n            children: <Widget>[\n              Container(\n                height: 40,\n              )\n            ],\n          ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcBiometricBtn",
        "description": "<p>BCBiometric representa un boton, usado para permitirle al usuario validaci\u00f3n de autenticaci\u00f3n local Huella y FaceID.</p>",
        "parameters": [
          {
            "name": "onLoginAction",
            "type": "Function(BcBiometricsType?)",
            "required": true,
            "description": "<p>Define la acci\u00f3n a realizar cuando la autenticaci\u00f3n biometrica local es exitosa.</p>"
          },
          {
            "name": "onLockedAction",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>Define la acci\u00f3n a realizar cuando la autenticaci\u00f3n se ha bloqueado.</p>"
          },
          {
            "name": "onNotEnrolledAction",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Define la acci\u00f3n a realizar cuando la autenticaci\u00f3n biometrica no se encuentra enrrolada.</p>"
          },
          {
            "name": "onFailedLoginAction",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Define la acci\u00f3n a realizar cuando la autenticaci\u00f3n falla.</p>"
          },
          {
            "name": "fingerPrintMessage",
            "type": "String",
            "required": true,
            "description": "<p>Mensaje en string que se presentar\u00e1 en el bot\u00f3n fingerId.</p>"
          },
          {
            "name": "faceIdMessage",
            "type": "String",
            "required": true,
            "description": "<p>Mensaje en string que se presentar\u00e1 en el bot\u00f3n faceID.</p>"
          },
          {
            "name": "enrollMessage",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje en string que se presentar\u00e1 en el momento de enrrolar biometr\u00eda.</p>"
          },
          {
            "name": "localizedReason",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje en string que se presentar\u00e1 en el momento de pedir ingreso biometrico.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "tapAction",
            "args": {
              "names": [],
              "types": []
            }
          }
        ],
        "examples": [
          {
            "description": " Boton Biometrico",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcBiometricBtn(\n              fingerPrintMessage: 'Ingresa con huella',\n              faceIdMessage: 'Ingresa con Face ID',\n              enrollMessage: 'Configura tu biometria',\n              onLoginAction: (biometricsType) {\n                Navigator.of(context).pop();\n              },\n              onLockedAction: _showLocked,\n              onFailedLoginAction: _showLocked,\n              onNotEnrolledAction: _showLocked,\n            )"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Calendar",
    "description": "El calendario permite la selecci\u00f3n y navegaci\u00f3n de fechas, puede presentarse de manera individual (Fecha \u00fanica) o como un rango de fechas. Normalmente son presentados al accionar el campo de texto correspondiente, sin embargo es posible su uso en modales, pantalla completa (Mobile) o embebidos en un contexto espec\u00edfico (Dashboard).",
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcCalendarComponent",
            "selector": "bc-input-date",
            "inputsClass": [
              {
                "name": "calendarType",
                "description": "<p>Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.</p>\n",
                "type": "string"
              },
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Esta entrada nos identifica el calendario en el DOM.</p>\n"
              },
              {
                "name": "fastButtons",
                "defaultValue": "[]",
                "description": "<p>Esta entrada es un arreglo que nos indica el rango de d\u00edas, meses o a\u00f1os para el calendario.</p>\n",
                "type": ""
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "updateValue",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Esta salida permite obtener el valor del componente.</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "dispatchValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que muestra el valor del componente.</p>\n"
              },
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Importa el componete de calendario con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa el componete de calendario con los dise\u00f1os de Bancolombia S.A.",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Calendario Simple",
            "code": {
              "html": "\n        <bc-form-field inputType=\"date\" [formControl]=\"dateSelector\">\n          <em>calendar</em>\n          <input bc-input typeInput=\"input-default-left\" id=\"idInput1\" type=\"date\" value=\"\" required/>\n          <em>arrow2-down</em>\n          <label for=\"idInput1\">Simple Date Picker</label>\n          <span>Selecciona una fecha del calendario</span>\n        </bc-form-field>\n        ",
              "script": "dateSelector = new FormControl();",
              "language": "ts"
            }
          },
          {
            "description": "Calendario Split",
            "code": {
              "html": "\n        <bc-form-field inputType=\"date\" calendarType=\"split\" [formControl]=\"dateSelector\">\n          <em>calendar</em>\n          <input bc-input typeInput=\"input-default-left\" id=\"idInput2\" type=\"date\" value=\"\" required/>\n          <em>arrow2-down</em>\n          <label for=\"idInput2\">Split Date Picker</label>\n          <span>Selecciona una fecha del calendario</span>\n        </bc-form-field>\n        ",
              "script": "dateSelector = new FormControl();",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcCardDirective",
            "type": "directive",
            "description": "<p>Importa los cards con los dise\u00f1os de Bancolombia S.A para mostrar una vista previa del contenido al que se vincular.</p>\n",
            "selector": "[bc-card]",
            "inputsClass": [
              {
                "name": "backgroundColor",
                "description": "<p>Color de la card.</p>\n",
                "type": "\"default\" | \"warning\" | \"info\" | \"error\" | \"success\""
              },
              {
                "name": "class",
                "defaultValue": "''",
                "description": "<p>Indica la clase de card.</p>\n"
              },
              {
                "name": "typeCard",
                "description": "<p>Tipo de card.</p>\n",
                "type": "\"default\" | \"image\" | \"rounded\" | \"rounded-header\" | \"rounded-horizontal\" | \"rounded-header-horizontal\" | \"horizontal\" | \"header-horizontal\" | \"header\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "setCardColor",
                "args": [],
                "optional": false,
                "returnType": "any",
                "typeParameters": [],
                "description": "<p>Setea el tipo de card</p>\n"
              },
              {
                "name": "setTypeCard",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Setea el tipo de card</p>\n"
              }
            ]
          }
        ],
        "examples": [
          {
            "description": "Tarjeta normal(small)",
            "code": {
              "html": "\n      <div bc-card>\n        <div class=\"bc-card-body\">\n          <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n          <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n          <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n        </div>\n      </div>  ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta normal ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info bc-align-right\">\n              <p>Saldo disponible</p>\n              <p class=\"bc-card-balance\">$457.000</p>\n              <p class=\"bc-card-balance\">USD 127</p>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n        </div>  ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta normal(small) con estado ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6\"></div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <div class=\"bc-card-status bc-card-status-error\">\n                    <p>Bloqueada</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>  ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta normal con estado ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6 bc-align-left\">\n                  <div class=\"bc-card-status bc-card-status-success\">\n                    <p>Exitosa</p>\n                  </div>\n                </div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <p>Saldo disponible</p>\n                  <p class=\"bc-card-balance\">$457.000</p>\n                  <p class=\"bc-card-balance\">USD 127</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n        </div> ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta seleccionable(small) ",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n          </div>\n          <div class=\"bc-card-action\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">arrow2-right</em>\n          </div>\n        </div> ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta seleccionable ",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info bc-align-right\">\n              <p>Saldo disponible</p>\n              <p class=\"bc-card-balance\">$457.000</p>\n              <p class=\"bc-card-balance\">USD 127</p>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n          <div class=\"bc-card-action\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">arrow2-right</em>\n          </div>\n        </div> ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta seleccionable(small) con estado",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6 bc-align-left\"></div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <div class=\"bc-card-status bc-card-status-info\">\n                    <p>Informativo</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"bc-card-action\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">arrow2-right</em>\n          </div>\n        </div> ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta seleccionable con estado",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6 bc-align-left\">\n                  <div class=\"bc-card-status bc-card-status-warning\">\n                    <p>Mensaje alerta</p>\n                  </div>\n                </div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <p>Saldo disponible</p>\n                  <p class=\"bc-card-balance\">$457.000</p>\n                  <p class=\"bc-card-balance\">USD 127</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6\"><a>Pagar</a></div>\n                <div class=\"bc-col-6\"><a>Ver detalle</a></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"bc-card-action\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">arrow2-right</em>\n          </div>\n        </div> ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta radio-button(small)",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-radio\">\n            <div class=\"bc-radio-group\">\n              <label class=\"bc-radio-label\">\n                <input role=\"radio\" tabindex=\"0\" type=\"radio\" id=\"\" name=\"default\" value=\"1\" aria-checked=\"false\" />\n                <span class=\"bc-radio\"></span>\n              </label>\n            </div>\n          </div>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta radio-button",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-radio\">\n            <div class=\"bc-radio-group\">\n              <label class=\"bc-radio-label\">\n                <input role=\"radio\" tabindex=\"0\" type=\"radio\" id=\"\" name=\"default\" value=\"1\" aria-checked=\"false\" />\n                <span class=\"bc-radio\"></span>\n              </label>\n            </div>\n          </div>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info bc-align-right\">\n              <p>Saldo disponible</p>\n              <p class=\"bc-card-balance\">$457.000</p>\n              <p class=\"bc-card-balance\">USD 127</p>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta radio-button(small) con estado",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-radio\">\n            <div class=\"bc-radio-group\">\n              <label class=\"bc-radio-label\">\n                <input role=\"radio\" tabindex=\"0\" type=\"radio\" id=\"\" name=\"default\" value=\"1\" aria-checked=\"false\" />\n                <span class=\"bc-radio\"></span>\n              </label>\n            </div>\n          </div>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6 bc-align-left\"></div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <div class=\"bc-card-status bc-card-status-success\">\n                    <p>Exitosa</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta radio-button con estado",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-radio\">\n            <div class=\"bc-radio-group\">\n              <label class=\"bc-radio-label\">\n                <input role=\"radio\" tabindex=\"0\" type=\"radio\" id=\"\" name=\"default\" value=\"1\" aria-checked=\"false\" />\n                <span class=\"bc-radio\"></span>\n              </label>\n            </div>\n          </div>\n          <div class=\"bc-card-body\">\n            <h6 class=\"bc-card-title bc-align-left\">Cuenta Bancolombia 001</h6>\n            <p class=\"bc-card-subtitle bc-align-left\">Ahorros</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">020-342566-23</p>\n            <div class=\"bc-card-info\">\n              <div class=\"bc-row\">\n                <div class=\"bc-col-6 bc-align-left\">\n                  <div class=\"bc-card-status bc-card-status-warning\">\n                    <p>Suspendida</p>\n                  </div>\n                </div>\n                <div class=\"bc-col-6 bc-align-right\">\n                  <p>Saldo disponible</p>\n                  <p class=\"bc-card-balance\">$457.000</p>\n                  <p class=\"bc-card-balance\">USD 127</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"bc-card-link bc-align-center\">\n              <a>Ver detalle y movimientos</a>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos round barra ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-icon\">\n            <div class=\"bc-card-icon-highlight\">\n              <div class=\"bc-card-icon-round\">\n                <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n              </div>\n            </div>\n          </div>\n          <div class=\"bc-card-body\">\n            <p class=\"bc-card-subtitle bc-align-left\">Saldo Disponible</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">$ 457.024,00</p>\n            <div class=\"bc-progress-container\" data-background=\"false\">\n              <progress value=\"50\" max=\"100\"></progress>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos icono sencillo barra ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-icon\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n          </div>\n          <div class=\"bc-card-body\">\n            <p class=\"bc-card-subtitle bc-align-left\">Saldo Disponible</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">$ 457.024,00</p>\n            <div class=\"bc-progress-container\" data-background=\"false\">\n              <progress value=\"50\" max=\"100\"></progress>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos(gris) seleccionable  ",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-icon\">\n            <div class=\"bc-card-icon-highlight\">\n              <div class=\"bc-card-icon-round\">\n                <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n              </div>\n            </div>\n          </div>\n          <div class=\"bc-card-body bc-align-left\">\n            <p class=\"bc-card-subtitle\">Nombre bolsillo</p>\n            <p class=\"bc-card-subtitle-number\">$ 2.457.024,00</p>\n            <p class=\"bc-card-small-text\">/$ 18.000.000,00</p>\n          </div>\n          <div class=\"bc-card-reveal\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">secondary-menu</em>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos(amarillo) seleccionable  ",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-icon\">\n            <div class=\"bc-card-icon-round bc-card-icon-round-primary\">\n              <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n            </div>\n          </div>\n          <div class=\"bc-card-body bc-align-left\">\n            <p class=\"bc-card-subtitle\">Nombre bolsillo</p>\n            <p class=\"bc-card-subtitle-number\">$ 2.457.024,00</p>\n            <p class=\"bc-card-small-text\">/$ 18.000.000,00</p>\n          </div>\n          <div class=\"bc-card-reveal\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">arrow2-right</em>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos radio  ",
            "code": {
              "html": "\n        <div bc-card class=\"bc-card-select\">\n          <div class=\"bc-card-radio\">\n            <div class=\"bc-radio-group\">\n              <label class=\"bc-radio-label\">\n                <input role=\"radio\" tabindex=\"0\" type=\"radio\" id=\"\" name=\"default\" value=\"1\" aria-checked=\"false\" />\n                <span class=\"bc-radio\"></span>\n              </label>\n            </div>\n          </div>\n          <div class=\"bc-card-body bc-align-left\">\n            <p class=\"bc-card-subtitle\">Nombre bolsillo</p>\n            <p class=\"bc-card-subtitle-number\">$ 2.457.024,00</p>\n            <p class=\"bc-card-small-text\">/$ 18.000.000,00</p>\n          </div>\n          <div class=\"bc-card-icon\">\n            <div class=\"bc-card-icon-round bc-card-icon-round-primary\">\n              <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta favoritos normal  ",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-body bc-align-left\">\n            <p class=\"bc-card-subtitle\">Nombre bolsillo</p>\n            <p class=\"bc-card-subtitle-number\">$ 2.457.024,00</p>\n            <p class=\"bc-card-small-text\">/$ 18.000.000,00</p>\n          </div>\n          <div class=\"bc-card-icon\">\n            <div class=\"bc-card-icon-round bc-card-icon-round-primary\">\n              <em class=\"bc-icon\" aria-hidden=\"true\">premium</em>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta bolsillos con Avatar 1",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-image-round\">\n            <img\n              src=\"https://images.theconversation.com/files/314111/original/file-20200207-43095-1kj7lht.jpg?ixlib=rb-1.1.0&amp;q=45&amp;auto=format&amp;w=1200&amp;h=1200.0&amp;fit=crop\"\n              alt=\"card-image-circle1\"\n            />\n          </div>\n          <div class=\"bc-card-body\">\n            <p class=\"bc-card-title bc-align-left\">Viaje a Espa\u00f1a</p>\n            <p class=\"bc-card-subtitle-number bc-align-left\">$ 9.457.024,00</p>\n            <div class=\"bc-progress-container\" data-background=\"false\">\n              <progress value=\"50\" max=\"100\"></progress>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta bolsillos con Avatar 2",
            "code": {
              "html": "\n        <div bc-card>\n          <div class=\"bc-card-image-round\">\n            <img\n              src=\"https://images.theconversation.com/files/314111/original/file-20200207-43095-1kj7lht.jpg?ixlib=rb-1.1.0&amp;q=45&amp;auto=format&amp;w=1200&amp;h=1200.0&amp;fit=crop\"\n              alt=\"card-image-circle2\"\n            />\n          </div>\n          <div class=\"bc-card-body bc-align-left\">\n            <p class=\"bc-card-title\">Estudios</p>\n            <p class=\"bc-card-subtitle-number\">Meta: $ 9.257.024,00</p>\n            <div class=\"bc-card-info bc-align-right\">\n              <p class=\"bc-card-balance\">$457.000</p>\n            </div>\n          </div>\n          <div class=\"bc-card-reveal\">\n            <em class=\"bc-icon\" aria-hidden=\"true\">secondary-menu</em>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta normal con Imagen",
            "code": {
              "html": "\n        <div bc-card typeCard=\"image\">\n          <div class=\"bc-card-picture\">\n            <img\n              alt=\"random-image\"\n              src=\"https://www.ateamsystems.com/wp-content/uploads/2017/05/Developers-at-work-1024x569.jpg\"\n            />\n          </div>\n          <div class=\"bc-card-content\">\n            <p class=\"bc-card-subtitle bc-align-left\">Subtitulo</p>\n            <h4 class=\"bc-card-title bc-align-left\">Titulo principal</h4>\n            <p class=\"bc-card-text\">\n              Cuerpo de texto que se puede expandir seg\u00fan sea necesario. Para\n              modificar la foto conviertela en un s\u00edmbolo y arrastrala sobre el\n              frame.\n            </p>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta normal con Imagen y color de fondo",
            "code": {
              "html": "\n        <div bc-card typeCard=\"image\" backgroundColor=\"warning\">\n          <div class=\"bc-card-picture\">\n            <img\n              alt=\"random-image\"\n              src=\"https://www.ateamsystems.com/wp-content/uploads/2017/05/Developers-at-work-1024x569.jpg\"\n            />\n          </div>\n          <div class=\"bc-card-content\">\n            <p class=\"bc-card-subtitle bc-align-left\">Subtitulo</p>\n            <h4 class=\"bc-card-title bc-align-left\">Titulo principal</h4>\n            <p class=\"bc-card-text\">\n              Cuerpo de texto que se puede expandir seg\u00fan sea necesario. Para\n              modificar la foto conviertela en un s\u00edmbolo y arrastrala sobre el\n              frame.\n            </p>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta con Imagen y botones",
            "code": {
              "html": "\n        <div bc-card typeCard=\"image\">\n          <div class=\"bc-card-picture\">\n            <img alt=\"random-image\" src=\"image.jpg\" />\n          </div>\n          <div class=\"bc-card-content\">\n            <p class=\"bc-card-subtitle bc-align-left\">Subtitulo</p>\n            <h4 class=\"bc-card-title bc-align-left\">Titulo principal</h4>\n            <p class=\"bc-card-text\">\n              Cuerpo de texto que se puede expandir seg\u00fan sea necesario. Para\n              modificar la foto conviertela en un s\u00edmbolo y arrastrala sobre el\n              frame.\n            </p>\n            <div class=\"bc-card-row\">\n              <button class=\"bc-button-primary bc-button-small\" aria-label=\"Boton\" sizebutton=\"Small\" role=\"button\" tabindex=\"0\" >\n                PRIMARIO\n              </button>\n              <button class=\"bc-button-secondary bc-button-small\" aria-label=\"Boton\" sizebutton=\"Small\" role=\"button\" tabindex=\"0\" >\n                SECUNDARIO\n              </button>\n            </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta con Imagen, tags, links y botones",
            "code": {
              "html": "\n        <div bc-card typeCard=\"image\">\n          <div class=\"bc-card-picture\"><img alt=\"random-image\" src=\"https://www.ateamsystems.com/wp-content/uploads/2017/05/Developers-at-work-1024x569.jpg\" /></div>\n          <div class=\"bc-card-content\">\n              <p class=\"bc-card-subtitle bc-align-left\">Subtitulo</p>\n              <h4 class=\"bc-card-title bc-align-left\">Titulo principal</h4>\n              <p class=\"bc-card-text\">Cuerpo de texto que se puede expandir seg\u00fan sea necesario. Para modificar la foto conviertela en un s\u00edmbolo y arrastrala sobre el frame.</p><a class=\"bc-card-link\">Link</a>\n              <div class=\"bc-card-tags\">\n                  <div class=\"bc-card-badge bc-card-badge-info\">\n                      <p>Tag informativo</p>\n                  </div>\n              </div>\n              <div class=\"bc-card-row\">\n                <button class=\"bc-button-secondary bc-button-small\" aria-label=\"Boton\" sizebutton=\"Small\" role=\"button\" tabindex=\"0\">SECUNDARIO</button>\n                <button class=\"bc-button-primary bc-button-small\" aria-label=\"Boton\" sizebutton=\"Small\" role=\"button\" tabindex=\"0\">PRIMARIO</button>\n              </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Tarjeta con imagen, bot\u00f3n flotante, tags, links y botones",
            "code": {
              "html": "\n        <div bc-card typeCard=\"image\">\n          <div class=\"bc-card-picture\"><img alt=\"random-image\" src=\"https://www.ateamsystems.com/wp-content/uploads/2017/05/Developers-at-work-1024x569.jpg\" /><a class=\"bc-card-floating-button\"> <em class=\"bc-icon\" aria-hidden=\"true\">add-to-car</em></a></div>\n          <div class=\"bc-card-content\">\n              <p class=\"bc-card-subtitle bc-align-left\">Tecnolog\u00eda</p>\n              <h4 class=\"bc-card-title bc-align-left\">25% En Apple</h4>\n              <p class=\"bc-card-text\">Disfruta 25% de descuento en las tiendas oficiales de Apple. No aplica para computadores de mesa ni portatiles Mac.</p><a class=\"bc-card-link\">Link</a>\n              <div class=\"bc-card-tags\">\n                  <div class=\"bc-card-badge bc-card-badge-warning\">\n                      <p>Tag informativo</p>\n                  </div>\n              </div>\n              <div class=\"bc-card-row\">\n                  <div class=\"bc-card-date\">\n                      <div class=\"bc-card-icon\"><em class=\"bc-icon\" aria-hidden=\"true\">alarm</em></div>\n                      <p class=\"bc-card-text\">Hasta Oct 30</p>\n                  </div>\n                  <div class=\"bc-card-icon\"><em class=\"bc-icon\" aria-hidden=\"true\">secondary-menu</em></div>\n              </div>\n          </div>\n        </div>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "name": "BcCard",
        "description": "<p>BcCard representa los tipos de card: Default   -->  contenedor vacio, Image    -->  Tarjetas de imagen. TopImage  -->  Tarjeta vertica de imagen + Bloque, LeftImage -->  Tarjeta horizontal de imagen a la izquierda + bloque recomendable width/height = 1.54, por ejemplo, width=340, height=220. RightImage -->  Tarjeta horizontal de imagen a la derecha + bloque recomendable width/height = 1.54, por ejemplo, width=340, height=220.</p>",
        "parameters": [
          {
            "name": "cardType",
            "type": "BcCardType?",
            "required": false,
            "description": "<p>Representa tipo de card.</p>"
          },
          {
            "name": "radiusType",
            "type": "BcCardRadius",
            "required": false,
            "description": "<p>Representa el tipo de radio en los bordes del card.</p>"
          },
          {
            "name": "width",
            "type": "double",
            "required": true,
            "description": "<p>Representa el ancho del card.</p>"
          },
          {
            "name": "imageWidth",
            "type": "double?",
            "required": false,
            "description": "<p>Representa el ancho de la imagen del card.</p>"
          },
          {
            "name": "imageHeight",
            "type": "double?",
            "required": false,
            "description": "<p>Representa el alto de la imagen del card.</p>"
          },
          {
            "name": "image",
            "type": "String?",
            "required": false,
            "description": "<p>Representa la imagen que se mostrar\u00e1 en el card.</p>"
          },
          {
            "name": "child",
            "type": "Widget",
            "required": true,
            "description": "<p>Representa el componente hijo del card.</p>"
          },
          {
            "name": "color",
            "type": "Color?",
            "required": false,
            "description": "<p>Representa el color del card.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Card con Imagen Derecha",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.rightImage(\n              width: 340,\n              imageWidth: 170,\n              image: 'assets/images/example.jpg',\n              child: Column(\n                mainAxisSize: MainAxisSize.min,\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  BcText.bodyText(\n                    label:\n                        'Tienes un credito aprobado hasta por \\$100.000.000 que podr\u00edas disfrutar inmediatamente.',\n                  ),\n                  const SizedBox(height: 8),\n                  BcText.smallText(label: 'V\u00e1lido hasta 30 Nov 2020'),\n                  const SizedBox(height: 8),\n                  BcBtn(\n                    onPressed: () {},\n                    buttonType: BcButtonType.Primary,\n                    text: 'LO QUIERO',\n                  ),\n                ],\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Imagen Izquierda",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.leftImage(\n              width: 270,\n              imageWidth: 100,\n              image: 'assets/images/example.jpg',\n              child: Column(\n                mainAxisSize: MainAxisSize.min,\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  BcText.bodyText(\n                    label:\n                        'Tienes un credito aprobado hasta por \\$100.000.000 que podr\u00edas disfrutar inmediatamente.',\n                  ),\n                  const SizedBox(\n                    height: 8,\n                  ),\n                  BcText.smallText(label: 'V\u00e1lido hasta 30 Nov 2020'),\n                  const SizedBox(\n                    height: 8,\n                  ),\n                  BcBtn(\n                    onPressed: () {},\n                    buttonType: BcButtonType.Primary,\n                    sizeType: BcSizeType.Small,\n                    text: 'LO QUIERO',\n                  ),\n                ],\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Imagen Cuadrada",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.image(\n              radiusType: BcCardRadius.Circular,\n              width: 150,\n              image: 'assets/images/example.jpg',\n              child: Center(\n                child: BcText.h6(\n                  label: 'Bienvenido',\n                  styleType: BcStyleType.Default,\n                ),\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Imagen Arriba",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.topImage(\n              width: 150,\n              imageHeight: 70,\n              image: 'assets/images/example.jpg',\n              child: Center(\n                child: BcText.h6(label: 'Bienvenido'),\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.topImage(\n              width: 200,\n              imageHeight: 70,\n              image: 'assets/images/example.jpg',\n              child: Column(\n                mainAxisSize: MainAxisSize.min,\n                children: <Widget>[\n                  Container(\n                    alignment: Alignment.topLeft,\n                    padding: const EdgeInsets.only(top: 9, left: 9),\n                    child: BcText.bodyText(label: 'INVERSIONES'),\n                  ),\n                  Container(\n                    alignment: Alignment.topLeft,\n                    padding: const EdgeInsets.only(top: 4, left: 9, bottom: 4),\n                    child: BcText.h6(\n                        label: 'Ahorra con inversi\u00f3n virtual desde \\$500 mil'),\n                  ),\n                  Container(\n                    alignment: Alignment.topLeft,\n                    padding: const EdgeInsets.only(left: 9, right: 9),\n                    child: BcText.smallText(\n                        label:\n                            'S\u00ed eliges un mayor plazo, mayor ser\u00e1 tu rentabilidad.'),\n                  ),\n                  const Divider(\n                    thickness: 2,\n                  ),\n                  Row(children: <Widget>[\n                    Expanded(\n                      child: Container(\n                        alignment: Alignment.topLeft,\n                        padding: const EdgeInsets.only(left: 9),\n                        child: BcText.bodyText(label: 'Conocer m\u00e1s'),\n                      ),\n                    ),\n                    Container(\n                      padding: const EdgeInsets.all(3),\n                      child: BcIconBtn(\n                        key: const Key('activeIconBtn'),\n                        onPressed: () {},\n                        sizeType: BcSizeType.Small,\n                        icon: BcFunctionalIcons.ARROW2_RIGHT,\n                      ),\n                    ),\n                  ])\n                ],\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.topImage(\n              width: 170,\n              imageHeight: 80,\n              image: BcCardComponent._isDarkTheme\n                  ? 'assets/images/cardBlack.png'\n                  : 'assets/images/card.png',\n              child: Column(\n                children: <Widget>[\n                  Row(\n                      mainAxisAlignment: MainAxisAlignment.end,\n                      children: <Widget>[\n                        BcIconBtn(\n                          key: const Key('activeIconBtn-2'),\n                          onPressed: () {},\n                          sizeType: BcSizeType.Small,\n                          icon: BcFunctionalIcons.PREMIUM,\n                        ),\n                        Container(\n                          child: BcText.smallText(label: 'NFC'),\n                        ),\n                        const SizedBox(width: 5),\n                        Container(\n                          child: BcText.smallText(label: 'QR'),\n                        ),\n                        BcIconBtn(\n                          key: const Key('activeIconBtn-3'),\n                          onPressed: () {},\n                          sizeType: BcSizeType.Small,\n                          icon: BcFunctionalIcons.QR_SCAN,\n                        ),\n                      ]),\n                  const Divider(\n                    thickness: 2,\n                  ),\n                  Column(children: <Widget>[\n                    Container(\n                      alignment: Alignment.topRight,\n                      padding: const EdgeInsets.only(right: 9),\n                      child: BcText.smallText(label: 'Cupo disponible'),\n                    ),\n                    Container(\n                      alignment: Alignment.topRight,\n                      padding: const EdgeInsets.only(right: 9),\n                      child: BcText.h6(label: '\\$ 20.000.000,00'),\n                    ),\n                  ]),\n                ],\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.defaults(\n              width: 230,\n              child: Column(\n                children: <Widget>[\n                  Row(\n                    children: <Widget>[\n                      Container(\n                        padding: const EdgeInsets.only(left: 5),\n                        child: const Icon(BcFunctionalIcons.DESKTOP, size: 32),\n                      ),\n                      const SizedBox(\n                        width: 6,\n                      ),\n                      Container(\n                        alignment: Alignment.topRight,\n                        child: BcText.bodyText(label: 'Mi cuenta casa'),\n                      ),\n                      Expanded(\n                        child: Container(\n                          alignment: Alignment.topRight,\n                          child: BcIconBtn(\n                            key: const Key('activeIconBtn-4'),\n                            onPressed: () {},\n                            sizeType: BcSizeType.Small,\n                            icon: BcFunctionalIcons.SECONDARY_MENU,\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                  Container(\n                    alignment: Alignment.topLeft,\n                    padding: const EdgeInsets.only(left: 44),\n                    child: BcText.smallText(label: 'Ahorros'),\n                  ),\n                  Container(\n                    alignment: Alignment.topLeft,\n                    padding: const EdgeInsets.only(left: 44),\n                    child: BcText.smallText(label: '009-209610-78'),\n                  ),\n                  Container(\n                    alignment: Alignment.topRight,\n                    padding: const EdgeInsets.only(right: 10),\n                    child: BcText.smallText(label: 'Saldo disponible'),\n                  ),\n                  Container(\n                    alignment: Alignment.topRight,\n                    padding: const EdgeInsets.only(right: 10),\n                    child: BcText.h6(label: '\\$ 840.900,90'),\n                  ),\n                  const Divider(\n                    thickness: 2,\n                  ),\n                  BcBtn(\n                    key: const Key('activeBtnGhost'),\n                    buttonType: BcButtonType.Ghost,\n                    text: 'VER DETALLE Y MOVIMIENTOS',\n                    onPressed: () {},\n                    sizeType: BcSizeType.Small,\n                  ),\n                ],\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.defaults(\n              width: 240,\n              child: Column(children: <Widget>[\n                Row(\n                  children: <Widget>[\n                    Expanded(\n                      child: Column(\n                        children: <Widget>[\n                          Container(\n                            alignment: Alignment.topLeft,\n                            padding: const EdgeInsets.only(left: 6),\n                            child: BcText.h3(label: 'SOAT'),\n                          ),\n                          Container(\n                            alignment: Alignment.topLeft,\n                            padding: const EdgeInsets.only(left: 6),\n                            child:\n                                BcText.xSmallText(label: 'Solo con la placa'),\n                          ),\n                        ],\n                      ),\n                    ),\n                    Container(\n                      alignment: Alignment.centerRight,\n                      width: 140,\n                      height: 90,\n                      child: Image.asset(\n                        BcCardComponent._isDarkTheme\n                            ? 'assets/images/carBlack.png'\n                            : 'assets/images/car.png',\n                        fit: BoxFit.cover,\n                      ),\n                    ),\n                  ],\n                ),\n                const Divider(\n                  thickness: 2,\n                ),\n                Row(children: <Widget>[\n                  Expanded(\n                    child: Container(\n                      alignment: Alignment.topLeft,\n                      padding: const EdgeInsets.only(left: 9),\n                      child: BcText.bodyText(label: 'Adqui\u00e9relo aqu\u00ed'),\n                    ),\n                  ),\n                  Container(\n                    padding: const EdgeInsets.only(right: 3),\n                    child: BcIconBtn(\n                      key: const Key('activeIconBtn-5'),\n                      onPressed: () {},\n                      sizeType: BcSizeType.Small,\n                      icon: BcFunctionalIcons.ARROW2_RIGHT,\n                    ),\n                  ),\n                ]),\n              ]),\n            ),"
              }
            ]
          },
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcCard.defaults(\n              width: 240,\n              child: Column(children: <Widget>[\n                Row(\n                  children: <Widget>[\n                    Expanded(\n                      child: Column(\n                        children: <Widget>[\n                          Container(\n                            alignment: Alignment.topLeft,\n                            padding: const EdgeInsets.only(left: 6),\n                            child: BcText.h4(label: 'Solicita turno'),\n                          ),\n                          Container(\n                            alignment: Alignment.topLeft,\n                            padding: const EdgeInsets.only(left: 6),\n                            child: BcText.xSmallText(\n                                label:\n                                    'Busca nuestro pr\u00f3ximo lugar de encuentro'),\n                          ),\n                        ],\n                      ),\n                    ),\n                    Container(\n                      alignment: Alignment.centerRight,\n                      width: 140,\n                      height: 90,\n                      child: Image.asset(\n                        BcCardComponent._isDarkTheme\n                            ? 'assets/images/manBlack.png'\n                            : 'assets/images/man.png',\n                        fit: BoxFit.fill,\n                      ),\n                    ),\n                  ],\n                ),\n                const Divider(\n                  thickness: 2,\n                ),\n                Row(children: <Widget>[\n                  Expanded(\n                    child: Container(\n                      alignment: Alignment.topLeft,\n                      padding: const EdgeInsets.only(left: 9),\n                      child: BcText.bodyText(label: 'Ver m\u00e1s'),\n                    ),\n                  ),\n                  Container(\n                    padding: const EdgeInsets.only(right: 3),\n                    child: BcIconBtn(\n                      key: const Key('activeIconBtn-6'),\n                      onPressed: () {},\n                      sizeType: BcSizeType.Small,\n                      icon: BcFunctionalIcons.ARROW2_RIGHT,\n                    ),\n                  ),\n                ]),\n              ]),\n            ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]"
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcIconBtn",
        "description": "<p>BcIconBtn representa un bot\u00f3n sin fondo con la implementaci\u00f3n de un icono que activa una acci\u00f3n en la interfaz de usuario. Por defecto, todos los tipos se visualiza en tama\u00f1o Default y habilitados.</p>",
        "parameters": [
          {
            "name": "onPressed",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>Se llama cuando cambia la acci\u00f3n del bot\u00f3n.</p>"
          },
          {
            "name": "icon",
            "type": "IconData",
            "required": true,
            "description": "<p>Define un icono al bot\u00f3n para enfatizar la acci\u00f3n de este.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Determina el estado del widget: true (Habilitado</p>"
          },
          {
            "name": "isDark",
            "type": "bool",
            "required": false,
            "description": "<p>Determina si el componente tiene un fondo diferente al por defecto.</p>"
          },
          {
            "name": "sizeType",
            "type": "BcSizeType",
            "required": false,
            "description": "<p>Determina el tama\u00f1o del widget: Default (Normal), Puffy (Grande</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Bot\u00f3n de Icono activo",
            "codes": [
              {
                "language": "dart",
                "example": "\n              BcIconBtn(\n                key: const Key('activeIconBtn'),\n                onPressed: _incrementCounter,\n                icon: BcFunctionalIcons.SEARCH,\n              )"
              }
            ]
          },
          {
            "description": "Bot\u00f3n de Icono inactivo",
            "codes": [
              {
                "language": "dart",
                "example": "\n              BcIconBtn(\n                key: const Key('inactiveIconBtn'),\n                onPressed: _incrementCounter,\n                icon: BcFunctionalIcons.SEARCH,\n                enabled: false,\n              )"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcInputNumberComponent",
            "selector": "bc-input-number",
            "inputsClass": [
              {
                "name": "hint",
                "description": "<p>Esta entrada de tipo string nos permite indicar el hint que tendr\u00eda el contador, este puede venir desde un objeto de configuraci\u00f3n o\ndirectamente en el atributo.</p>\n",
                "type": "string"
              },
              {
                "name": "initValue",
                "description": "<p>Esta entrada de tipo num\u00e9rico nos indica el valor inicial para el contador.</p>\n",
                "type": "number"
              },
              {
                "name": "label",
                "description": "<p>Esta entrada de tipo string nos indica el Label que tendr\u00eda el contador, este puede venir desde un objeto de configuraci\u00f3n o\ndirectamente en el atributo.</p>\n",
                "type": "string"
              },
              {
                "name": "min",
                "defaultValue": "'0'",
                "description": "<p>Esta entrada de tipo string nos indica el valor m\u00ednimo por el cual el contador empezar\u00e1.</p>\n"
              },
              {
                "name": "required",
                "defaultValue": "true",
                "description": "<p>Esta entrada de tipo booleana nos indica si el componente es o no requerido en el contexto del formulario.</p>\n"
              },
              {
                "name": "status",
                "defaultValue": "'default'",
                "description": "<p>Esta entrada de tipo string nos indica el estado del componente, sus valores pueden ser : {&#39;disabled&#39;, &#39;error&#39;, &#39;default&#39;}</p>\n",
                "type": "\"disabled\" | \"error\" | \"default\""
              },
              {
                "name": "step",
                "description": "<p>Esta entrada de tipo num\u00e9rico nos indica cu\u00e1nto tendr\u00eda que aumentar o disminu\u00edr el contador.</p>\n",
                "type": "number"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "updateValue",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Este par\u00e1metro nos indica una salida para el valor actual del selector num\u00e9rico.</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "detectStatusChanges",
                "args": [
                  {
                    "name": "changes",
                    "type": "SimpleChanges",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "dispatchValue",
                "args": [
                  {
                    "name": "value",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "validateErrorStatus",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente input number</p>\n",
            "rawdescription": "Componente input number",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Selector Num\u00e9rico Simple",
            "code": {
              "html": "\n            <bc-input-number\n              [step]=\"1\"\n              [min]=\"0\"\n              [label]=\"objNumberInput.label\"\n              [hint]=\"objNumberInput.hint\"\n              [formControl]=\"inputNumber\">\n            </bc-input-number>            ",
              "script": "\n            objNumberInput = {\n              label: 'Placeholder personalizable',\n              hint: 'Help Text Personalizable',\n            }",
              "language": "ts"
            }
          },
          {
            "description": "Selector Num\u00e9rico Customizado",
            "code": {
              "html": "\n            <bc-input-number\n              [step]=\"15\"\n              [min]=\"45\"\n              [value]=\"45\"\n              [label]=\"objNumberInputCustom.label\"\n              [hint]=\"objNumberInputCustom.hint\"\n              [formControl]=\"inputNumber\">\n            </bc-input-number>\n            ",
              "script": "\n            objNumberInput = {\n              label: 'Placeholder personalizable',\n              hint: 'Help Text Personalizable',\n            }",
              "language": "ts"
            }
          },
          {
            "description": "Selector Num\u00e9rico Deshabilitado",
            "code": {
              "html": "\n            <bc-input-number\n              [step]=\"1\"\n              [min]=\"0\"\n              [label]=\"objNumberInput.label\"\n              [hint]=\"objNumberInput.hint\"\n              [formControl]=\"inputNumber\"\n              status=\"disabled\">\n            </bc-input-number>\n            ",
              "script": "\n            objNumberInput = {\n              label: 'Placeholder personalizable',\n              hint: 'Help Text Personalizable',\n            }",
              "language": "ts"
            }
          },
          {
            "description": "Selector Num\u00e9rico con Error",
            "code": {
              "html": "\n            <bc-input-number\n              [step]=\"1\"\n              [min]=\"0\"\n              [label]=\"objNumberInput.label\"\n              [hint]=\"objNumberInput.hint\"\n              [formControl]=\"inputNumber\"\n              status=\"error\">\n            </bc-input-number>\n            ",
              "script": "\n            objNumberInput = {\n              label: 'Placeholder personalizable',\n              hint: 'Help Text Personalizable',\n            }",
              "language": "ts"
            }
          },
          {
            "description": "Selector Num\u00e9rico bajo un BcFormField",
            "code": {
              "html": "\n          <bc-form-field>\n            <bc-input-number\n              [step]=\"1\"\n              [min]=\"0\"\n              [label]=\"objNumberInput.label\"\n              [hint]=\"objNumberInput.hint\"\n              [formControl]=\"inputNumber\">\n            </bc-input-number>\n          </bc-form-field>\n          ",
              "script": "\n          objNumberInput = {\n            label: 'Placeholder personalizable',\n            hint: 'Help Text Personalizable',\n          }",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addEventListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra el evento click a los botones de incremeto y decremento. Adicionalmente resetea el estado de inputBehavior.</p>\n"
          },
          {
            "name": "emitEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea output con el atributo value de numberInput. Garantiza que value sea entero. </p>\n"
          },
          {
            "name": "getElement",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona los elementos html mediante querySelector</p>\n"
          },
          {
            "name": "setDisabled",
            "args": [
              {
                "name": "isDisabled",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Habilita o deshabilita el numberInput y los botones de incremento y decremento, seg\u00fan el valor del par\u00e1metro isDisabled sea true o false.  </p>\n"
          },
          {
            "name": "setErrorState",
            "args": [
              {
                "name": "isValid",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega o elimina la clase &#39;bc-input-error&#39; del numberInput, seg\u00fan el valor del par\u00e1metro isValid sea true o false.</p>\n"
          },
          {
            "name": "setValue",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna value al atributo value del numberInput casteado como string</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Selector Num\u00e9rico Simple",
            "code": {
              "html": "\n                <div class=\"bc-form-field\">\n                <div class=\"bc-input-number\">\n                  <button class=\"button-decrease\">\n                    <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Disminuir\">minus</em>\n                  </button>\n                  <div class=\"bc-input-number-container\">\n                    <input class=\"bc-input\" id=\"number1\" min=\"0\" type=\"number\" step=\"1\" value=\"value\" required=\"true\" />\n                    <label for=\"number1\">label</label>\n                    <span>hint</span>\n                  </div><button class=\"button-increase\">\n                    <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Aumentar\">plus</em>\n                  </button>\n                </div>\n              </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Selector Num\u00e9rico Customizado",
            "code": {
              "html": "\n                <div class=\"bc-form-field\">\n                <div class=\"bc-input-number\">\n                  <button class=\"button-decrease\">\n                    <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Disminuir\">minus</em>\n                  </button>\n                  <div class=\"bc-input-number-container\">\n                    <input class=\"bc-input\" id=\"number1\" min=\"45\" type=\"number\" step=\"45\" value=\"value\" required=\"true\" />\n                    <label for=\"number1\">label</label>\n                    <span>hint</span>\n                  </div><button class=\"button-increase\">\n                    <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Aumentar\">plus</em>\n                  </button>\n                </div>\n              </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Selector Num\u00e9rico Deshabilitado",
            "code": {
              "html": "\n        <div class=\"bc-form-field\">\n        <div class=\"bc-input-number\" disabled>\n          <button class=\"button-decrease\">\n            <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Disminuir\">minus</em>\n          </button>\n          <div class=\"bc-input-number-container\">\n            <input class=\"bc-input\" id=\"number1\" min=\"45\" type=\"number\" step=\"45\" value=\"value\" required=\"true\" />\n            <label for=\"number1\">label</label>\n            <span>hint</span>\n          </div><button class=\"button-increase\">\n            <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Aumentar\">plus</em>\n          </button>\n        </div>\n      </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Selector Num\u00e9rico con Error",
            "code": {
              "html": "\n        <div class=\"bc-form-field\">\n        <div class=\"bc-input-number\" error>\n          <button class=\"button-decrease\">\n            <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Disminuir\">minus</em>\n          </button>\n          <div class=\"bc-input-number-container\">\n            <input class=\"bc-input\" id=\"number1\" min=\"45\" type=\"number\" step=\"45\" value=\"value\" required=\"true\" />\n            <label for=\"number1\">label</label>\n            <span>hint</span>\n          </div><button class=\"button-increase\">\n            <em class=\"bc-icon\" aria-hidden=\"true\" aria-label=\"Aumentar\">plus</em>\n          </button>\n        </div>\n      </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "buttonDecrease",
            "type": "HTMLButtonElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "buttonIncrease",
            "type": "HTMLButtonElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "inputBehavior",
            "type": "BcInputBehavior",
            "optional": false,
            "description": ""
          },
          {
            "name": "numberInput",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "output",
            "type": "Function",
            "optional": false,
            "description": ""
          },
          {
            "name": "value",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcSelectNumber",
        "description": "<p>BcSelectNumber es un tipo de selector que permite determinar un n\u00famero apartir de dos fab_btn</p>",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera para habilitar o deshabilitar el selector.</p>"
          },
          {
            "name": "labelText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de descripci\u00f3n animado al momento de insertar una opcion de la lista desplegable.</p>"
          },
          {
            "name": "helpText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de ayuda que se muestra debajo del underline.</p>"
          },
          {
            "name": "errorText",
            "type": "String?",
            "required": false,
            "description": "<p>Se activa cuando el valor seleccionado supera el maximo valor.</p>"
          },
          {
            "name": "maximumValue",
            "type": "int",
            "required": true,
            "description": "<p>M\u00e1ximo rango de incremento.</p>"
          },
          {
            "name": "minimumValue",
            "type": "int?",
            "required": false,
            "description": "<p>Minimo valor posible.</p>"
          },
          {
            "name": "inputFocus",
            "type": "FocusNode?",
            "required": false,
            "description": "<p>Determina cual input tiene el foco.</p>"
          },
          {
            "name": "onValueChanged",
            "type": "ValueChanged<int>?",
            "required": false,
            "description": "<p>Permite retornar el valor ingresado.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Selector numerico activo con restriccion",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcSelectNumber(\n            maximumValue: 6,\n            minimumValue: 3,\n            labelText: 'label',\n            errorText: 'el valor no puede ser mayor a 6 ',\n            inputFocus: focusNode1,\n            onValueChanged: _valor,\n            helpText: 'helpertex',\n          ),"
              }
            ]
          },
          {
            "description": "Selector numerico activo sin restriccion",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcSelectNumber(\n            maximumValue: 10,\n            inputFocus: focusNode2,\n            labelText: 'label',\n            helpText: 'helpertex',\n          ),"
              }
            ]
          },
          {
            "description": "Selector numerico inactivo sin restriccion",
            "codes": [
              {
                "language": "dart",
                "example": "\n          BcSelectNumber(\n            enabled: false,\n            maximumValue: 10,\n            inputFocus: focusNode3,\n            labelText: 'label',\n            helpText: 'helpertex',\n          ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": []
  },
  {
    "nameComponent": "InputSelect",
    "description": "El elemento input select, representa un control que permite al usuario elegir entre una o varias opciones, facilitando el proceso de selecci\u00f3n o filtrar el contenido existente.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcInputSelectComponent",
            "selector": "bc-input-select",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Esta entrada permite indicar un id \u00fanico al componente dentro del DOM.</p>\n",
                "type": "string"
              },
              {
                "name": "defaultIndex",
                "description": "<p>Esta entrada de tipo num\u00e9rico nos indica el \u00edndice de la opci\u00f3n por defecto.</p>\n",
                "type": "number"
              },
              {
                "name": "formatType",
                "defaultValue": "'simple'",
                "description": "<p>Esta entrada de tipo string nos indica el tipo de formato de salida de nuestro valor actual, esta puede ser\nde tipo full para devolver el objeto completo o simple para devolver un \u00fanico valor.</p>\n",
                "type": "\"full\" | \"simple\""
              },
              {
                "name": "icon",
                "description": "<p>Esta entrada de tipo string nos permite activar el \u00edcono dentro de nuestras opciones, es importante\ntener en cuenta que la entrada recibe el nombre del \u00edcono.</p>\n",
                "type": "string"
              },
              {
                "name": "initValue",
                "description": "<p>Esta entrada es el arreglo de configuraci\u00f3n de nuestro componente</p>\n"
              },
              {
                "name": "label",
                "description": "<p>Esta entrada de tipo string nos permite indicarle al selector un label descriptivo.</p>\n"
              },
              {
                "name": "multiple",
                "defaultValue": "false",
                "description": "<p>Esta entrada de tipo booleana nos indica si el componente es de entrada m\u00faltiple.</p>\n"
              },
              {
                "name": "name",
                "description": "<p>name del elemento</p>\n",
                "type": ""
              },
              {
                "name": "selected-items-display"
              },
              {
                "name": "span",
                "description": "<p>Esta entrada de tipo string nos permite a\u00f1adirle al selector un span.</p>\n"
              },
              {
                "name": "status",
                "description": "<p>Esta entrada de tipo booleana nos permite indicar si el componente est\u00e1 en estado de error.</p>\n",
                "type": "\"error\" | \"disabled\""
              },
              {
                "name": "values",
                "description": "<p>Esta entrada nos asignar el valor del selector.</p>\n",
                "type": "Array<literal type>"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "valueOutput",
                "defaultValue": "new EventEmitter<string | string[]>()",
                "description": "<p>Salida del valor actual del componente.</p>\n",
                "type": "EventEmitter<string | []>"
              }
            ],
            "methodsClass": [
              {
                "name": "onBlur",
                "args": [
                  {
                    "name": "ev",
                    "type": "Event"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Habilitar y deshabilitar dropdown</p>\n"
              },
              {
                "name": "setInputs",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>setea los input</p>\n"
              },
              {
                "name": "setMultipleState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setvalueOutput",
                "args": [
                  {
                    "name": "param",
                    "type": "string | string[]"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>valores a salir</p>\n"
              },
              {
                "name": "updateState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "validateErrorStatus",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>componente Select</p>\n",
            "rawdescription": "componente Select",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Select Est\u00e1ndar",
            "code": {
              "html": "\n          <bc-input-select componentId=\"bc-select2\" [formatType]=\"formatType\" [values]=\"values\" [status]=\"status\"\n          label=\"T\u00edtulo\" span=\"Validate\" (valueOutput)=\"showSelectedValue($event)\" [formControl]=\"selector\">\n          </bc-input-select>\n            ",
              "script": "\n            showSelectedValue(value: string) {\n            }\n            status;\n            selector = new FormControl();\n            formatType = 'simple';\n            values = [\n              {\n                label: 'Gok\u00fa',\n                value: {\n                  human: true,\n                },\n              },\n              {\n                label: 'Vegeta',\n                value: 'Resplandor Final',\n                icon: 'cloud'\n              },\n              'Krilin',\n            ];\n",
              "language": "ts"
            }
          },
          {
            "description": "Select Deshabilitado",
            "code": {
              "html": "\n          <bc-input-select componentId=\"bc-select1\" [formatType]=\"formatType\" [values]=\"values\" status=\"disabled\" label=\"T\u00edtulo\" span=\"Validate\"\n          (valueOutput)=\"showSelectedValue($event)\"></bc-input-select>\n            ",
              "script": "\n            showSelectedValue(value: string) {\n            }\n            status=(error | disabled);\n            selector = new FormControl();\n            formatType = 'full';\n            values = [\n              {\n                label: 'Gok\u00fa',\n                value: {\n                  human: true,\n                },\n              },\n              {\n                label: 'Vegeta',\n                value: 'Resplandor Final',\n                icon: 'cloud'\n              },\n              'Krilin',\n            ];\n",
              "language": "ts"
            }
          },
          {
            "description": "Select con Error",
            "code": {
              "html": "\n          <bc-input-select componentId=\"bc-select1\" [values]=\"values\" status=\"error\" label=\"T\u00edtulo\" span=\"Validate\"\n          (valueOutput)=\"showSelectedValue($event)\"></bc-input-select>\n            ",
              "script": "\n            showSelectedValue(value: string) {\n            }\n            status=(error | disabled)\n            values = [\n              {\n                label: 'Gok\u00fa',\n                value: {\n                  human: true,\n                },\n              },\n              {\n                label: 'Vegeta',\n                value: 'Resplandor Final',\n                icon: 'cloud'\n              },\n              'Krilin',\n            ];\n",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "configInputCheck",
            "args": [
              {
                "name": "inputInside",
                "type": "any"
              },
              {
                "name": "condition",
                "type": "any"
              },
              {
                "name": "event",
                "type": "any"
              },
              {
                "name": "item",
                "type": "Element"
              },
              {
                "name": "i",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Controla marcado y desmarcado del check en el dropdown m\u00faltiple, dependiendo del estado de  (condition).\nS\u00ed una vez activado el evento el input no est\u00e1 checkeado, se checkea y se actualiza su estado del array activeElements.</p>\n"
          },
          {
            "name": "configSelectedEvent",
            "args": [
              {
                "name": "event",
                "type": "any"
              },
              {
                "name": "i",
                "type": "number"
              },
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura el evento seleccionado (event). Si el dropdown es de tipo m\u00faltiple verifica los \u00edtems checkeados y los activa.\nSi el dropdown es de tipo \u00fanico activa el item directamente del argumento.</p>\n"
          },
          {
            "name": "createActiveIcon",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Crea la etiqueta de texto con \u00e9nfasis <em> con el texto &#39;ok&#39; y la retorna.</p>\n"
          },
          {
            "name": "createItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": ""
          },
          {
            "name": "createItemTypeMultiple",
            "args": [
              {
                "name": "data",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Crea cada item de tipo m\u00faltiple, con su correspondiente label y etiqueta y se le asigna un checkbox que permite la selecci\u00f3n m\u00faltiple</p>\n"
          },
          {
            "name": "createItemTypeSingle",
            "args": [
              {
                "name": "data",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Crea cada \u00edtem de tipo \u00fanico, con su correspondiente icono y etiqueta</p>\n"
          },
          {
            "name": "getCurrentActiveItems",
            "args": [],
            "optional": false,
            "returnType": "any[]",
            "typeParameters": [],
            "description": "<p>Obtiene los \u00edtems activos del dropdown en el array response, \ns\u00ed el dropdown no es de tipo m\u00faltiple solo se obtendr\u00e1 un solo \u00edtem activo</p>\n"
          },
          {
            "name": "getInsideElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Obtiene los elementos tipo input del dropdown</p>\n"
          },
          {
            "name": "getItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Obtiene el array de items seleccionados del dropdown, incluyendo la etiqueta span y los setea en el array itemsConfig.</p>\n"
          },
          {
            "name": "getValueInputSingle",
            "args": [
              {
                "name": "indexItem",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "markItemByIndex",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Marca un \u00edtem del dropdown de acuerdo al indice (index), tambi\u00e9n se activa el evento click para seleccionar dicho \u00edtem.</p>\n"
          },
          {
            "name": "setDefaultIndex",
            "args": [
              {
                "name": "index",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Define el index por default del dropdown seteando defaultIndex con el argumento index.</p>\n"
          },
          {
            "name": "setDefaultValue",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el valor seleccionado por default del dropdown, para ello v\u00e1lida que el argumento value \nno sea indefinido y que existan items cargados en el dropdown. finalmente v\u00e1lida que value sea de tipo string u object y lo selecciona.</p>\n"
          },
          {
            "name": "setDisabled",
            "args": [
              {
                "name": "isDisabled",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el argumento isDisabled al atributo disabled del dropdown, \nsi el componente est\u00e1 activo y isDisabled es true, entonces cierra el dropdown.</p>\n"
          },
          {
            "name": "setDropDownConfiguration",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se encarga de realizar la configuraci\u00f3n para el comportamiento general heredado del Dropdown</p>\n"
          },
          {
            "name": "setEventListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra el evento click al \u00edtem y despu\u00e9s lo configura mediante configSelectedEvent.</p>\n"
          },
          {
            "name": "setFormatOutput",
            "args": [
              {
                "name": "formatType",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el tipo de formato al atributo formatType (puede ser simple o full).</p>\n"
          },
          {
            "name": "setItems",
            "args": [
              {
                "name": "items",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea itemsConfig con el argumento items</p>\n"
          },
          {
            "name": "setMarginTop",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna un margin top de -25 siempre que el elemento HTMLSpanElement exista.</p>\n"
          },
          {
            "name": "setSelectedItemsDisplay",
            "args": [
              {
                "name": "displayInfo",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea selectedItemsDisplay con los items seleccionados, siempre que existan \u00edtems seleccionados</p>\n"
          },
          {
            "name": "setValueInputMultiple",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el valor del \u00edtem activo en el atributo value del input.\nValida los \u00edtems activos en el array (activeElements) y asigna su valor seg\u00fan sea el tipo del dropdown: \u00fanico o m\u00faltiple.</p>\n"
          },
          {
            "name": "setValueInputSingle",
            "args": [
              {
                "name": "indexItem",
                "type": "number",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": [],
            "description": "<p>Setea el valor del \u00edtem activo (indexItem) en el atributo value del input. Aplica solo para dropdown de tipo \u00fanico. </p>\n"
          },
          {
            "name": "addDropdownTriangle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se agrega el triangulo que indica o se\u00f1ala el elemento que ha abierto el dropdown\npara este caso se\u00f1ala el elemento con la clase &quot;bc-dropdown-toggle&quot; que tiene como Id\nel cual est\u00e1 relacionado con el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a los elementos que tienen la clase &quot;bc-dropdown-toggle&quot;\nel cual permite abrir o cerrar el dropdown que tenga relacionado a id del elemento actual</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addWindowEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a window para poder cerrar los dropdowns abiertos</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "clickToggleEvent",
            "args": [
              {
                "name": "event",
                "type": "MouseEvent"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Evento toggle por medio del click del mouse, llama a la funci\u00f3n toggleDropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "closeDropdown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Cerrar el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "configureExtraToggles",
            "args": [
              {
                "name": "clickEvent",
                "type": "function",
                "function": [
                  {
                    "name": "event",
                    "type": "MouseEvent"
                  }
                ]
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "getElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se obtienen los elementos a manipular en el comportamiento</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initAccesibilityConfig",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initConfiguration",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "openDrowndown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abrir dropdown, corrigiendo la posici\u00f3n si es necesario</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setConfig",
            "args": [
              {
                "name": "config",
                "type": "BcDropdownConfig"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setDropdownContentPosition",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna a posici\u00f3n del dropdown-conent dependiendo si est\u00e1 fuera de la pantalla</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setParentWidth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna el ancho del padre (mainClass) a el contenedor del dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setPosition",
            "args": [
              {
                "name": "left",
                "type": "number"
              },
              {
                "name": "right",
                "type": "number"
              },
              {
                "name": "top",
                "type": "number"
              },
              {
                "name": "bottom",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleDropdown",
            "args": [
              {
                "name": "noClose",
                "type": "boolean",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Alterna el estado del dropdown entre abierto y cerrado</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "validateDropdownIsActive",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Se valida si el dropdown tiene la clase &quot;bc-dropdown-active&quot;</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ],
        "examples": [
          {
            "description": "Selector Normal",
            "code": {
              "html": "\n                <div class=\"bc-input-select\" id=\"input-select\" error=\"error\">\n                  <input class=\"bc-input\" aria-label=\"A\" id=\"idSelect\" required=\"\" type=\"text\" value=\"\" />\n                  <em class=\"bc-input-select-toggle\" aria-controls=\"id-content\">arrow2-down</em>\n                  <label for=\"idSelect\">State</label><span>Validate</span>\n                  <ul class=\"bc-input-select-content\" id=\"id-content\"></ul>\n                </div>\n            ",
              "script": "const selectComponent = new BcInputSelectBehavior();\n                selectComponent.setId('input-select');\n                selectComponent.setSelectedItemsDisplay('{0} Guerreros Z Seleccionados');\n                selectComponent.setItems([\n                {\n                label: 'Gok\u00fa',\n                value: {\n                human: true,\n                },\n                icon: 'times',\n                },\n                {\n                label: 'Vegeta',\n                value: 'Resplandor Final',\n                },\n                'Krilin',\n                ]);\n                selectComponent.outputFunction = (data) => {\n                };\n                selectComponent.setUp();",
              "language": "js"
            }
          },
          {
            "description": "Selector con \u00cdcono de Entrada",
            "code": {
              "html": "\n                <div class=\"bc-input-select\" id=\"input-select\" multiple=\"multiple\">\n                  <em>cloud</em><input class=\"bc-input\" aria-label=\"A\" id=\"idSelect2\" required=\"\" type=\"text\" value=\"\" />\n                  <em class=\"bc-input-select-toggle\" aria-controls=\"id-content-2\">arrow2-down</em>\n                  <label for=\"idSelect2\">State</label>\n                  <ul class=\"bc-input-select-content\" id=\"id-content-2\"></ul>\n                </div>\n          ",
              "script": "const selectComponent = new BcInputSelectBehavior();\n                selectComponent.setId('input-select');\n                selectComponent.setSelectedItemsDisplay('{0} Guerreros Z Seleccionados');\n                selectComponent.setItems([\n                {\n                label: 'Gok\u00fa',\n                value: {\n                human: true,\n                },\n                icon: 'times',\n                },\n                {\n                label: 'Vegeta',\n                value: 'Resplandor Final',\n                },\n                'Krilin',\n                ]);\n                selectComponent.outputFunction = (data) => {\n                };\n                selectComponent.setUp();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "activeElements",
            "defaultValue": "{}",
            "type": "literal type",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcInputBehavior",
            "defaultValue": "new BcInputBehavior()",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "defaultIndex",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "formatType",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "input",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "isDisabled",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "isMultiple",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "itemsConfig",
            "type": "any[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputFunction",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "selectedItemsDisplay",
            "defaultValue": "'{0} \u00edtems seleccionados'",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "span",
            "type": "HTMLSpanElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "closeButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "config",
            "defaultValue": "{}",
            "type": "BcDropdownConfig",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownActive",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownContent",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownItems",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "helper",
            "defaultValue": "new BcDropdownHelper()",
            "type": "BcDropdownHelper",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "idContent",
            "type": "string",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButtonEventsAdded",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "topMarginContent",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "triangle",
            "type": "HTMLDivElement",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ]
      },
      {
        "name": "BcSelect",
        "description": "<p>Men\u00fa desplegable presenta una lista de opciones que se pueden usar para seleccionar o filtrar el contenido existente.</p>",
        "parameters": [
          {
            "name": "items",
            "type": "List<BcOptionItemModel>",
            "required": true,
            "description": "<p>Lista de opciones del menu desplegable.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera para habilitar o deshabilitar el men\u00fa desplegable.</p>"
          },
          {
            "name": "inputText",
            "type": "TextEditingController?",
            "required": false,
            "description": "<p>Controlador para manejar el texto insertado en la entrada de texto no editable.</p>"
          },
          {
            "name": "inputFocus",
            "type": "FocusNode?",
            "required": false,
            "description": "<p>Controlador del foco de la entrada de texto no editable.</p>"
          },
          {
            "name": "errorText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de error que se muestra debajo del underline.</p>"
          },
          {
            "name": "helpText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de ayuda que se muestra debajo del underline.</p>"
          },
          {
            "name": "hintText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de ayuda que se muestra en la entrada de texto no editable.</p>"
          },
          {
            "name": "textAlign",
            "type": "TextAlign?",
            "required": false,
            "description": "<p>Alineaci\u00f3n del texto.</p>"
          },
          {
            "name": "labelText",
            "type": "String?",
            "required": false,
            "description": "<p>Mensaje de descripcion animado al momento de insertar una opcion de la lista desplegable.</p>"
          },
          {
            "name": "prefixIcon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Icono que se muestra en la parte izquierda de la entrada de texto no editable.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Selector con opciones por defecto",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSelect(\n              labelText: 'Opciones',\n              hintText: '',\n              helpText: 'Ayuda',\n              inputFocus: focusNode1,\n              inputText: input1,\n              items: [\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 1',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 2',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 3',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 4',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 5',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 6',\n                ),\n              ],\n            ),"
              }
            ]
          },
          {
            "description": "Selector con opciones sin checkbox",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSelect(\n              labelText: 'Opciones',\n              hintText: '',\n              helpText: 'Ayuda',\n              inputFocus: focusNode2,\n              inputText: input2,\n              items: [\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 1',\n                  checkbox: false,\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 2',\n                  checkbox: false,\n                ),\n              ],\n            ),"
              }
            ]
          },
          {
            "description": "Selector con iconos",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSelect(\n              prefixIcon: BcFunctionalIcons.ID,\n              labelText: 'Opciones',\n              hintText: '',\n              helpText: 'Ayuda',\n              inputFocus: focusNode3,\n              inputText: input3,\n              items: [\n                BcOptionItemModel(\n                    text: 'Opci\u00f3n 2',\n                    iconRight: BcFunctionalIcons.OK,\n                    iconLeft: BcFunctionalIcons.ID),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 3',\n                  iconRight: BcFunctionalIcons.OK,\n                  iconLeft: BcFunctionalIcons.FACE_SMILE,\n                ),\n              ],\n            ),"
              }
            ]
          },
          {
            "description": "Selector con opciones mixtas",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSelect(\n              labelText: 'Opciones',\n              hintText: 'Opci\u00f3n 1',\n              helpText: 'Ayuda',\n              inputFocus: focusNode4,\n              inputText: input4,\n              enabled: false,\n              items: [\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 1',\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 2',\n                  checkbox: true,\n                ),\n                BcOptionItemModel(\n                  text: 'Opci\u00f3n 3',\n                  iconRight: BcFunctionalIcons.OK,\n                  iconLeft: BcFunctionalIcons.ID,\n                ),\n              ],\n            ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcInputTokenComponent",
            "selector": "bc-input-token",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del componente.</p>\n",
                "type": "string"
              },
              {
                "name": "num-inputs",
                "defaultValue": "3",
                "description": "<p>Cantidad de inputs a mostrar.</p>\n",
                "type": "number"
              },
              {
                "name": "status",
                "defaultValue": "'default'",
                "description": "<p>Estado del input &#39;disabled&#39; | &#39;error&#39; | &#39;default&#39;.</p>\n",
                "type": "\"disabled\" | \"error\" | \"default\""
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "changeValue",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Muestra la salida del input.</p>\n",
                "type": "EventEmitter<number>"
              },
              {
                "name": "validated",
                "defaultValue": "new EventEmitter<boolean>()",
                "description": "<p>Indica si es o no v\u00e1lido el campo true | false.</p>\n",
                "type": "EventEmitter<boolean>"
              }
            ],
            "methodsClass": [
              {
                "name": "detectStatusChanges",
                "args": [
                  {
                    "name": "changes",
                    "type": "SimpleChanges",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que setea el estado del input.</p>\n"
              },
              {
                "name": "dispatchStatus",
                "args": [
                  {
                    "name": "value",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que muestra el estado del componente.</p>\n"
              },
              {
                "name": "dispatchValue",
                "args": [
                  {
                    "name": "value",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que muestra el valor del componente.</p>\n"
              },
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "disabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que setea el estado del input.</p>\n"
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente input token</p>\n",
            "rawdescription": "Componente input token",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Input Token Simple",
            "code": {
              "html": "\n                        <bc-form-field>\n                            <bc-input-token [num-inputs]=\"numInputs\">\n                            </bc-input-token>\n                        </bc-form-field>",
              "script": "\n          numInputs :number = 5;",
              "language": "ts"
            }
          },
          {
            "description": "Input Token con respuestas",
            "code": {
              "html": "\n              <bc-input-token [num-inputs]=\"numInputs\"\n              (changeValue)=\"changeValue($event)\" \n              (validated)=\"onValidToken($event)\">\n              </bc-input-token>\n              ",
              "script": "\n          numInputs :number = 5;\n\n          onValidToken(isValid : boolean){\n            this.isValid = isValid; \n            \n          }\n        \n          changeValue(val : number){\n           \n          }",
              "language": "ts"
            }
          },
          {
            "description": "Input Token Deshabilitado",
            "code": {
              "html": "\n              <bc-input-token\n              [num-inputs]=\"numInputs\"\n                status=\"disabled\">\n              </bc-input-token>\n              ",
              "script": "\n          numInputs :number = 5;",
              "language": "ts"
            }
          },
          {
            "description": "Input Token con Error",
            "code": {
              "html": "\n              <bc-input-token\n               [num-inputs]=\"numInputs\"\n                status=\"error\">\n              </bc-input-token>\n              ",
              "script": "\n          numInputs :number = 5;",
              "language": "ts"
            }
          },
          {
            "description": "Input Token bajo un BcFormField",
            "code": {
              "html": "\n            <bc-form-field>\n              <bc-input-token\n                [formControl]=\"inputToken\"\n                status=\"disabled\">\n              </bc-input-token>\n            </bc-form-field>\n            ",
              "script": "\n          numInputs :number = 5;\n\n          onValidToken(isValid : boolean){\n            this.isValid = isValid; \n            \n          }\n        \n          changeValue(val : number){\n          }",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "changeStatusEmitEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Actualiza el cambio de estado del atributo (isValid) en (outputStatus)</p>\n"
          },
          {
            "name": "changeValuesEmitEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Actualiza el cambio de estado del valor del input en (outputValue)</p>\n"
          },
          {
            "name": "controlInputs",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createLabel",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createTokenInputs",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "findInput",
            "args": [
              {
                "name": "id",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getElement",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selector del contenedor de los inputs. Cuenta los inputs y setea ese n\u00famero en (numInputs) por medio de la funci\u00f3n (setNumInputs)</p>\n"
          },
          {
            "name": "initialFocus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "inputBlur",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "inputFocus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "inputkeyup",
            "args": [
              {
                "name": "keyEvent",
                "type": "any"
              },
              {
                "name": "id",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Obtiene el caracter del teclado a partir del c\u00f3digo ASCII.\nAcepta \u00fanicamente n\u00fameros 0-9 y controla que el input solo reciva un caracter por campo</p>\n"
          },
          {
            "name": "putError",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "putValid",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeError",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeValid",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setDisabledState",
            "args": [
              {
                "name": "isDisabled",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Recorre todos los inputs del contenedor y los habilita/deshabilita seg\u00fan el estado de (isDisabled) sea true o false</p>\n"
          },
          {
            "name": "setNumInputs",
            "args": [
              {
                "name": "numInputs",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setValue",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea los valores de los inputs del contenedor en (currentInput). \nPara ello recorre los inputs y actualiza el valor y el estado de cada uno.</p>\n"
          },
          {
            "name": "validateId",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Input Token Simple",
            "code": {
              "html": "\n          <div class=\"bc-content\">\n          <div class=\"bc-form-field\">\n              <div class=\"bc-input-token\">\n                  <div class=\"bc-input-token-container\" num-inputs=\"6\"></div>\n              </div>\n          </div>\n      </div>",
              "script": "BcInputTokenBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Selector Num\u00e9rico Deshabilitado",
            "code": {
              "html": "\n          <div class=\"bc-content\">\n          <div class=\"bc-form-field\">\n              <div class=\"bc-input-token\" status=\"disabled\">\n                  <div class=\"bc-input-token-container\" num-inputs=\"6\"></div>\n              </div>\n          </div>\n      </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          },
          {
            "description": "Selector Num\u00e9rico con Error",
            "code": {
              "html": "\n          <div class=\"bc-content\">\n          <div class=\"bc-form-field\">\n              <div class=\"bc-input-token\" status=\"error\">\n                  <div class=\"bc-input-token-container\" num-inputs=\"6\"></div>\n              </div>\n          </div>\n      </div>",
              "script": "BcInputNumberBehavior.setUpAll();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "inputStatus",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "isValid",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "numInputs",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputStatus",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputValue",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "status",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "tokenInput",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "value",
            "defaultValue": "''",
            "type": "string",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]",
      {
        "name": "BcDatePickerSimple",
        "description": "<p>BcDatePickerSimple abre una nueva pantalla en la navegaci\u00f3n de la app con un calendario de selecc\u00f3n unica. Debe usarse mediante la funcion estatica \"open()\", es decir: BcDatePickerSimple.open. No se recomienda crearlo en una vista ya existente.</p>",
        "parameters": [
          {
            "name": "minDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>fecha minima que se visualizar\u00e1 en pantalla. Por defecto, se visualizar\u00e1 con 100 a\u00f1os atr\u00e1s.</p>"
          },
          {
            "name": "maxDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>fecha maxima que se visualizar\u00e1 en pantalla. Por defecto, se visualizar\u00e1 con 100 a\u00f1os adelante.</p>"
          },
          {
            "name": "currentDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>fecha actual que se visualizar\u00e1 en pantalla. Por defecto, sera la fecha actual.</p>"
          },
          {
            "name": "onDateSelected",
            "type": "ValueChanged<DateTime?>",
            "required": true,
            "description": "<p>metodo callback para retornar la fecha seleccionada.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "open",
            "args": {
              "names": [
                "context",
                "onDateSelected",
                "minDate",
                "maxDate",
                "currentDate"
              ],
              "types": [
                "BuildContext",
                "ValueChanged<DateTime>",
                "DateTime",
                "DateTime",
                "DateTime"
              ]
            }
          }
        ],
        "examples": [
          {
            "description": " Calendario Simple implementado",
            "codes": [
              {
                "language": "dart",
                "example": "\n  Widget build(BuildContext context) => Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16),\n        child: ListView(\n          controller: widget.scrollController,\n          children: [\n            BcText.h3(\n                label: 'Calendario Simple',\n                styleType: BcStyleType.Default,\n                textAlign: TextAlign.left),\n            _getSimpleInput(),\n            const SizedBox(height: 20),\n          ],\n        ),\n      );"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcInputDateRangeComponent",
            "selector": "bc-input-date-range",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del componente.</p>\n"
              },
              {
                "name": "fastButtons",
                "defaultValue": "[]",
                "description": "<p>Atributo rango de fechas.</p>\n",
                "type": ""
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "updateValue",
                "defaultValue": "new EventEmitter<number>()",
                "description": "",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "dispatchValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "validateErrorState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente rango de fechas.</p>\n",
            "rawdescription": "Componente rango de fechas.",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Input Date Range",
            "code": {
              "html": "\n        <bc-input-date-range class='bc-col-xl-12 bc-col-lg-12 bc-col-md-12' [fastButtons]='[10,12,22]' [formControl]=\"rangeSelector\">\n          <bc-form-field class=\"bc-col-xl-6 bc-col-lg-6 bc-col-md-6 bc-col-sm-12 bc-col-xs-6\" calendarType=\"split\">\n            <em class=\"bc-icon\">calendar</em>\n            <input bc-input id=\"input1\"  typeInput=\"input-default-left\" type=\"date\" value=\"\" required/>\n            <em class=\"bc-icon\">arrow2-down</em>\n            <label for=\"input1\">Fecha de ida</label>\n            <span>Help Text</span>\n          </bc-form-field>\n          <bc-form-field class=\"bc-col-xl-6 bc-col-lg-6 bc-col-md-6 bc-col-sm-12 bc-col-xs-6\" calendarType=\"split\">\n            <em class=\"bc-icon\">calendar</em>\n            <input bc-input id=\"input2\" typeInput=\"input-default-left\" type=\"date\" value=\"\" required/>\n            <em class=\"bc-icon\">arrow2-down</em>\n            <label for=\"input2\">Fecha de vuelta</label>\n            <span>Help Text</span>\n          </bc-form-field>\n        </bc-input-date-range>\n          ",
              "script": "let fastButtons: number = [10, 12, 22];'",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "configDropDown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "emitEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "handleClick",
            "args": [
              {
                "name": "e",
                "type": "Event"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setDisabled",
            "args": [
              {
                "name": "isDisabled",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setInputDateValues",
            "args": [
              {
                "name": "e",
                "type": "CustomEvent"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setValues",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addDropdownTriangle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se agrega el triangulo que indica o se\u00f1ala el elemento que ha abierto el dropdown\npara este caso se\u00f1ala el elemento con la clase &quot;bc-dropdown-toggle&quot; que tiene como Id\nel cual est\u00e1 relacionado con el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a los elementos que tienen la clase &quot;bc-dropdown-toggle&quot;\nel cual permite abrir o cerrar el dropdown que tenga relacionado a id del elemento actual</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addWindowEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a window para poder cerrar los dropdowns abiertos</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "clickToggleEvent",
            "args": [
              {
                "name": "event",
                "type": "MouseEvent"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Evento toggle por medio del click del mouse, llama a la funci\u00f3n toggleDropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "closeDropdown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Cerrar el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "configureExtraToggles",
            "args": [
              {
                "name": "clickEvent",
                "type": "function",
                "function": [
                  {
                    "name": "event",
                    "type": "MouseEvent"
                  }
                ]
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "getElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se obtienen los elementos a manipular en el comportamiento</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initAccesibilityConfig",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initConfiguration",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "openDrowndown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abrir dropdown, corrigiendo la posici\u00f3n si es necesario</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setConfig",
            "args": [
              {
                "name": "config",
                "type": "BcDropdownConfig"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setDropdownContentPosition",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna a posici\u00f3n del dropdown-conent dependiendo si est\u00e1 fuera de la pantalla</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setParentWidth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna el ancho del padre (mainClass) a el contenedor del dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setPosition",
            "args": [
              {
                "name": "left",
                "type": "number"
              },
              {
                "name": "right",
                "type": "number"
              },
              {
                "name": "top",
                "type": "number"
              },
              {
                "name": "bottom",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleDropdown",
            "args": [
              {
                "name": "noClose",
                "type": "boolean",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Alterna el estado del dropdown entre abierto y cerrado</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "validateDropdownIsActive",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Se valida si el dropdown tiene la clase &quot;bc-dropdown-active&quot;</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ],
        "examples": [
          {
            "description": "Input Date Range",
            "code": {
              "html": "\n          <div class=\"bc-input-date-range\" fastbuttons=\"[5, 10, 15]\">\n\t\t\t\t\t\t<div class=\"bc-form-field\" inputType=\"date\" id=\"BcFormFieldComponent.89877685\">\n\t\t\t\t\t\t\t<em class=\"bc-icon\">calendar</em>\n\t\t\t\t\t\t\t<input class=\"bc-input\" id=\"idInput1\" type=\"date\" />\n\t\t\t\t\t\t\t<em class=\"bc-icon\">arrow2-down</em>\n\t\t\t\t\t\t\t<label for=\"idInput1\">Desde</label>\n\t\t\t\t\t\t\t<span>Help Text</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bc-form-field\" inputType=\"date\" calendartype=\"split\">\n\t\t\t\t\t\t\t<em class=\"bc-icon\">calendar</em>\n\t\t\t\t\t\t\t<input class=\"bc-input\" id=\"idInput2\" type=\"date\" />\n\t\t\t\t\t\t\t<em class=\"bc-icon\">arrow2-down</em>\n\t\t\t\t\t\t\t<label for=\"idInput2\">Hasta</label>\n\t\t\t\t\t\t\t<span>Help Text</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n          ",
              "script": "\n          BcInputDateRangeBehavior.setUpAll();\n        ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "calendarBehavior",
            "type": "BcCalendarBehavior",
            "optional": false,
            "description": ""
          },
          {
            "name": "calendarElement",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropDownId",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "inputDate",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "inputDateTwo",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "output",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "value",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "wrapperCalendar",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "closeButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "config",
            "defaultValue": "{}",
            "type": "BcDropdownConfig",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownActive",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownContent",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownItems",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "helper",
            "defaultValue": "new BcDropdownHelper()",
            "type": "BcDropdownHelper",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "idContent",
            "type": "string",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButtonEventsAdded",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "topMarginContent",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "triangle",
            "type": "HTMLDivElement",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ]
      },
      {
        "name": "BcDatePickerRange",
        "description": "<p>BcDatePickerRangea abre una nueva pantalla en la navegaci\u00f3n de la app con un calendario para seleccionar un rango de fechas. Debe usarse mediante la funcion estatica \"open()\", es decir BcDatePickerRange.open(). No se recomienda crearlo en una vista ya existente.</p>",
        "parameters": [
          {
            "name": "model",
            "type": "BcDatePickerRangeModel",
            "required": true,
            "description": "<p>Modelo para el ingreso de los datos mediante parametros para el selctor de rango de fechas.</p>"
          },
          {
            "name": "minDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>Fecha minima que se visualizar\u00e1 en pantalla. Por defecto, se visualizar\u00e1 con 2 a\u00f1os atr\u00e1s.</p>"
          },
          {
            "name": "maxDate",
            "type": "DateTime?",
            "required": false,
            "description": "<p>Fecha maxima que se visualizar\u00e1 en pantalla. Por defecto, se visualizar\u00e1 con 2 a\u00f1os adelante.</p>"
          },
          {
            "name": "onDatesSelected",
            "type": "ValueChanged<List<DateTime?>>",
            "required": true,
            "description": "<p>Metodo callback para retornar el rango de fechas seleccionadas.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "open",
            "args": {
              "names": [
                "context",
                "onDateSelected",
                "BcDatePickerRangeModel",
                "minDate",
                "maxDate"
              ],
              "types": [
                "BuildContext",
                "ValueChanged<List<DateTime>>",
                "required",
                "DateTime",
                "DateTime"
              ]
            }
          }
        ],
        "examples": [
          {
            "description": " Calendario de Rango implementado",
            "codes": [
              {
                "language": "dart",
                "example": "\n  Widget build(BuildContext context) => Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16),\n        child: ListView(\n          controller: widget.scrollController,\n          children: [\n            const SizedBox(height: 20),\n            BcText.h3(\n              label: 'Calendario Rango',\n              styleType: BcStyleType.Default,\n              textAlign: TextAlign.left,\n            ),\n            Container(\n              margin: const EdgeInsets.symmetric(vertical: 24),\n              child: Row(\n                children: [\n                  _getRangeInput(\n                    'Desde',\n                    rangeDates.isEmpty ? null : rangeDates[0],\n                  ),\n                  _getRangeInput(\n                    'Hasta',\n                    rangeDates.isEmpty ? null : rangeDates[1],\n                  ),\n                ],\n              ),\n            ),\n            BcBtn(\n              onPressed: _openDatePickerRange,\n              buttonType: BcButtonType.Primary,\n              text: 'Abrir range picker',\n            )\n          ],\n        ),\n      );"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Input",
    "description": "Los campos de texto permiten al usuario interactuar e ingresar datos. Se utilizar\u00e1n para recoger informaci\u00f3n del usuario y para permitir a este editarla. Ofrecen tambi\u00e9n la posibilidad de seleccionar su contenido en forma de lista con selecciones \u00fanicas o de m\u00faltiples l\u00edneas.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcFormFieldComponent",
            "selector": "bc-form-field",
            "inputsClass": [
              {
                "name": "calendarType",
                "defaultValue": "''",
                "description": "<p>Tipo de calendario.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "inputType",
                "defaultValue": "''",
                "description": "<p>Tipo de input (ingresar los tipos)</p>\n"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "updateValue",
                "defaultValue": "new EventEmitter<number>()",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "dispatchValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "validateErrorState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Contenedor del input</p>\n",
            "rawdescription": "Contenedor del input",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [
          {
            "name": "BcInputDirective",
            "type": "directive",
            "description": "<p>Bajo esta directiva se configura el componente &quot;Input&quot;.</p>\n",
            "selector": "[bc-input]",
            "inputsClass": [
              {
                "name": "aria-label"
              },
              {
                "name": "state",
                "defaultValue": "BcInputStates.default",
                "description": "<p>Este par\u00e1metro nos indica en qu\u00e9 estado se encuentra el componente.\nLos estados permitidos son: {&#39;default&#39;, &#39;error&#39;, &#39;valid&#39;}.</p>\n",
                "type": "BcInputStates"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "addClass",
                "args": [
                  {
                    "name": "element",
                    "type": "HTMLElement"
                  },
                  {
                    "name": "styleClass",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Esta funci\u00f3n nos permite a\u00f1adir un estilo recibiendo como par\u00e1metros el elemento y la clase deseada.</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "getAriaDescriptor",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": [],
                "description": "<p>Esta funci\u00f3n permite obtener el descriptor para el atributo &quot;aria-label&quot;,\nteniendo presente que exista el label, el input con un placeholder o un textarea con un placeholder.</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "getElementChildren",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que nos setea los estilos para el componente Input</p>\n"
              },
              {
                "name": "removeClass",
                "args": [
                  {
                    "name": "element",
                    "type": "HTMLElement"
                  },
                  {
                    "name": "styleClass",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Esta funci\u00f3n nos permite remover un estilo recibiendo como par\u00e1metros el elemento y la clase no deseada.</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "setAriaDescriptor",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Esta funci\u00f3n permite configurar el aria-descriptor teniendo en cuenta la funci\u00f3n &quot;GetAriaDescriptor&quot;,\nvalid\u00e1ndolos tanto para el input como para el textarea.</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "setDisabledState",
                "args": [
                  {
                    "name": "isDisabled",
                    "type": "boolean"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "updateByState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Funci\u00f3n que actualiza los estilos del componente Input a partir de su estado.\nLos estados del componente que valida son {&#39;valid&#39;, &#39;error&#39;, &#39;default&#39;}.</p>\n"
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "val",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ]
          }
        ],
        "examples": [
          {
            "description": "Input por Defecto",
            "code": {
              "html": "\n            <bc-form-field>\n            <input bc-input aria-label=\"input\" type=\"text\" placeholder=\"Text\" value=\"\" required />\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con Label",
            "code": {
              "html": "\n          <bc-form-field>\n          <input bc-input aria-label=\"input-default\" type=\"text\" value=\"\" required />\n          <label>Label</label>\n          <span>Help Text</span>\n          </bc-form-field>\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con \u00cdcono",
            "code": {
              "html": "\n        <bc-form-field>\n        <input bc-input aria-label=\"input-icon-left\" type=\"text\" value=\"\" required />\n        <label>Label</label>\n        <i>address-card</i>\n        <span>Help text</span>\n        </bc-form-field>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con \u00cdcono por Defecto",
            "code": {
              "html": "\n      <bc-form-field>\n      <input bc-input aria-label=\"input-default-left\" type=\"text\" value=\"\" required />\n      <label>Label</label>\n      <i>address-card</i>\n      <span>Help text</span>\n      </bc-form-field>\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con Check Circle",
            "code": {
              "html": "\n      <bc-form-field>\n      <input bc-input aria-label=\"input-icon-right\" required type=\"text\" value=\"\" />\n      <label>Label</label>\n      <i>check-circle</i>\n      <span>Help text</span>\n      </bc-form-field>\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input Validado con Check Circle",
            "code": {
              "html": "\n      <bc-form-field>\n      <input bc-input aria-label=\"input-valid\" required type=\"text\" value=\"\" />\n      <label>Label</label>\n      <i>check-circle</i>\n      <span>Help text</span>\n      </bc-form-field>\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error por Defecto",
            "code": {
              "html": "\n            <bc-form-field>\n            <input bc-input aria-label=\"input-error\" state=\"error\" type=\"text\" placeholder=\"Text\" value=\"\" required />\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con Label",
            "code": {
              "html": "\n            Con Label\n            <bc-form-field>\n            <input bc-input aria-label=\"input-default-error\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con \u00cdcono",
            "code": {
              "html": "\n            <bc-form-field>\n            <input bc-input aria-label=\"input-icon-left-error\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i>address-card</i>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con \u00cdcono de Error",
            "code": {
              "html": "\n            <bc-form-field>\n            <input bc-input aria-label=\"input-icon-right-error\" required type=\"text\" value=\"\" />\n            <label>Label</label>\n            <i>error</i>\n            <span>Help text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled por Defecto",
            "code": {
              "html": "\n            <bc-form-field disabled>\n            <input bc-input aria-label=\"input\" type=\"text\" placeholder=\"Text\" value=\"\" disabled />\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled con Label",
            "code": {
              "html": "\n            <bc-form-field disabled>\n            <input bc-input aria-label=\"input-default\" type=\"text\" value=\"\" disabled />\n            <label>Label</label>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled con \u00cdcono",
            "code": {
              "html": "\n            <bc-form-field disabled>\n            <input bc-input aria-label=\"input-icon-left\" type=\"text\" value=\"\" disabled />\n            <label>Label</label>\n            <i>address-card</i>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea por Defecto",
            "code": {
              "html": "\n            <bc-form-field>\n            <textarea bc-input aria-label=\"text-area\" type=\"text\" placeholder=\"Text\" value=\"\" required></textarea>\n            <label for=\"\">Label</label>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea con Error",
            "code": {
              "html": "\n            <bc-form-field>\n            <textarea bc-input aria-label=\"text-area-error\" type=\"text\" value=\"\"></textarea>\n            <label>Label</label>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea Deshabilitado",
            "code": {
              "html": "\n            <bc-form-field disabled>\n            <textarea bc-input aria-label=\"text-area\" type=\"text\" value=\"\" disabled></textarea>\n            <label>Label</label>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos por Defecto",
            "code": {
              "html": "\n            <bc-form-field>\n            <i class=\"left\">address-card</i>\n            <input bc-input aria-label=\"input-icons\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i class=\"right\">check-circle</i>\n            <span>Help text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos Validado",
            "code": {
              "html": "\n            <bc-form-field>\n            <i class=\"left\">address-card</i>\n            <input bc-input aria-label=\"input-valid-icons\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i class=\"right\">check-circle</i>\n            <span>Help Text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos con Error",
            "code": {
              "html": "\n            <bc-form-field>\n            <i class=\"left\">address-card</i>\n            <input bc-input aria-label=\"input-icons-error\" required type=\"text\" value=\"\" />\n            <label>Label</label>\n            <i class=\"right\">error</i>\n            <span>Help text</span>\n            </bc-form-field>\n            ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [],
        "examples": [
          {
            "description": "Input por Defecto",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <input class=\"bc-input\" typeInput=\"input\" type=\"text\" placeholder=\"Text\" value=\"\" required />\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con Label",
            "code": {
              "html": "\n          <div class=\"bc-form-field\">\n          <input class=\"bc-input\" typeInput=\"input-default\" type=\"text\" value=\"\" required />\n          <label>Label</label>\n          <span>Help Text</span>\n          </div class=\"bc-form-field\">\n          ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con \u00cdcono",
            "code": {
              "html": "\n        <div class=\"bc-form-field\">\n        <input class=\"bc-input\" typeInput=\"input-icon-left\" type=\"text\" value=\"\" required />\n        <label>Label</label>\n        <i>address-card</i>\n        <span>Help text</span>\n        </div class=\"bc-form-field\">\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con \u00cdcono por Defecto",
            "code": {
              "html": "\n      <div class=\"bc-form-field\">\n      <input class=\"bc-input\" typeInput=\"input-default-left\" type=\"text\" value=\"\" required />\n      <label>Label</label>\n      <i>address-card</i>\n      <span>Help text</span>\n      </div class=\"bc-form-field\">\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input con Check Circle",
            "code": {
              "html": "\n      <div class=\"bc-form-field\">\n      <input class=\"bc-input\" typeInput=\"input-icon-right\" required type=\"text\" value=\"\" />\n      <label>Label</label>\n      <i>check-circle</i>\n      <span>Help text</span>\n      </div class=\"bc-form-field\">\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input Validado con Check Circle",
            "code": {
              "html": "\n      <div class=\"bc-form-field\">\n      <input class=\"bc-input\" typeInput=\"input-valid\" required type=\"text\" value=\"\" />\n      <label>Label</label>\n      <i>check-circle</i>\n      <span>Help text</span>\n      </div class=\"bc-form-field\">\n      ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error por Defecto",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <input class=\"bc-input\" typeInput=\"input-error\" type=\"text\" placeholder=\"Text\" value=\"\" required />\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con Label",
            "code": {
              "html": "\n            Con Label\n            <div class=\"bc-form-field\">\n            <input class=\"bc-input\" typeInput=\"input-default-error\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con \u00cdcono",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <input class=\"bc-input\" typeInput=\"input-icon-left-error\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i>address-card</i>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Input de Error con \u00cdcono de Error",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <input class=\"bc-input\" typeInput=\"input-icon-right-error\" required type=\"text\" value=\"\" />\n            <label>Label</label>\n            <i>error</i>\n            <span>Help text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled por Defecto",
            "code": {
              "html": "\n            <div class=\"bc-form-field\" disabled>\n            <input class=\"bc-input\" typeInput=\"input\" type=\"text\" placeholder=\"Text\" value=\"\" disabled />\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled con Label",
            "code": {
              "html": "\n            <div class=\"bc-form-field\" disabled>\n            <input class=\"bc-input\" typeInput=\"input-default\" type=\"text\" value=\"\" disabled />\n            <label>Label</label>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Disabled con \u00cdcono",
            "code": {
              "html": "\n            <div class=\"bc-form-field\" disabled>\n            <input class=\"bc-input\" typeInput=\"input-icon-left\" type=\"text\" value=\"\" disabled />\n            <label>Label</label>\n            <i>address-card</i>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea por Defecto",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <textarea class=\"bc-input\" typeInput=\"text-area\" type=\"text\" placeholder=\"Text\" value=\"\" required></textarea>\n            <label for=\"\">Label</label>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea con Error",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <textarea class=\"bc-input\" typeInput=\"text-area-error\" type=\"text\" value=\"\"></textarea>\n            <label>Label</label>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text \u00c1rea Deshabilitado",
            "code": {
              "html": "\n            <div class=\"bc-form-field\" disabled>\n            <textarea class=\"bc-input\" typeInput=\"text-area\" type=\"text\" value=\"\" disabled></textarea>\n            <label>Label</label>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos por Defecto",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <i class=\"left\">address-card</i>\n            <input class=\"bc-input\" typeInput=\"input-icons\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i class=\"right\">check-circle</i>\n            <span>Help text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos Validado",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <i class=\"left\">address-card</i>\n            <input class=\"bc-input\" typeInput=\"input-valid-icons\" type=\"text\" value=\"\" required />\n            <label>Label</label>\n            <i class=\"right\">check-circle</i>\n            <span>Help Text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con \u00cdconos con Error",
            "code": {
              "html": "\n            <div class=\"bc-form-field\">\n            <i class=\"left\">address-card</i>\n            <input class=\"bc-input\" typeInput=\"input-icons-error\" required type=\"text\" value=\"\" />\n            <label>Label</label>\n            <i class=\"right\">error</i>\n            <span>Help text</span>\n            </div class=\"bc-form-field\">\n            ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "addRemoveClass",
            "defaultValue": "() => {...}",
            "type": "",
            "optional": false,
            "description": "<p>Agrega o remueve la clase INPUT_ACTIVE_CLASS al input seg\u00fan el valor del par\u00e1metro bool.</p>\n",
            "jsdoctags": [
              {
                "pos": 1089,
                "end": 1191,
                "flags": 0,
                "kind": 292,
                "atToken": {
                  "pos": 1089,
                  "end": 1090,
                  "flags": 0,
                  "kind": 57
                },
                "tagName": {
                  "pos": 1090,
                  "end": 1095,
                  "flags": 0,
                  "escapedText": "param"
                },
                "name": {
                  "pos": 1096,
                  "end": 1100,
                  "flags": 0,
                  "escapedText": "bool"
                },
                "isNameFirst": true,
                "isBracketed": false,
                "comment": "<p>booleano, si es true agrega la clase INPUT_ACTIVE_CLASS de lo contrario la elimina.</p>\n"
              },
              {
                "pos": 1191,
                "end": 1241,
                "flags": 0,
                "kind": 292,
                "atToken": {
                  "pos": 1191,
                  "end": 1192,
                  "flags": 0,
                  "kind": 57
                },
                "tagName": {
                  "pos": 1192,
                  "end": 1197,
                  "flags": 0,
                  "escapedText": "param"
                },
                "name": {
                  "pos": 1198,
                  "end": 1204,
                  "flags": 0,
                  "escapedText": "myself"
                },
                "isNameFirst": true,
                "isBracketed": false,
                "comment": "<p>representa el elemento input.</p>\n"
              },
              {
                "pos": 1241,
                "end": 1251,
                "flags": 0,
                "kind": 288,
                "atToken": {
                  "pos": 1241,
                  "end": 1242,
                  "flags": 0,
                  "kind": 57
                },
                "tagName": {
                  "pos": 1242,
                  "end": 1250,
                  "flags": 0,
                  "escapedText": "memberof"
                },
                "comment": "<p>BcInputBehavior</p>\n"
              }
            ]
          },
          {
            "name": "checkInput",
            "defaultValue": "() => {...}",
            "type": "",
            "optional": false,
            "description": "<p>Setea checkInput con value siempre que value no sea nulo o vacio.</p>\n",
            "jsdoctags": [
              {
                "pos": 808,
                "end": 858,
                "flags": 0,
                "kind": 292,
                "atToken": {
                  "pos": 808,
                  "end": 809,
                  "flags": 0,
                  "kind": 57
                },
                "tagName": {
                  "pos": 809,
                  "end": 814,
                  "flags": 0,
                  "escapedText": "param"
                },
                "typeExpression": {
                  "pos": 815,
                  "end": 823,
                  "flags": 0,
                  "kind": 277,
                  "type": {
                    "pos": 816,
                    "end": 822,
                    "flags": 2097152,
                    "kind": 137
                  }
                },
                "name": {
                  "pos": 824,
                  "end": 829,
                  "flags": 0,
                  "escapedText": "value"
                },
                "isNameFirst": false,
                "isBracketed": false,
                "comment": "<p>valor del checkInput.</p>\n"
              },
              {
                "pos": 858,
                "end": 868,
                "flags": 0,
                "kind": 288,
                "atToken": {
                  "pos": 858,
                  "end": 859,
                  "flags": 0,
                  "kind": 57
                },
                "tagName": {
                  "pos": 859,
                  "end": 867,
                  "flags": 0,
                  "escapedText": "memberof"
                },
                "comment": "<p>BcInputBehavior</p>\n"
              }
            ]
          },
          {
            "name": "updateState",
            "defaultValue": "() => {...}",
            "type": "",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcInput",
        "description": "<p>BcInput es una entrada de texto alfanumerico del SDB, el cual permite al usuario ingresar informaci\u00f3n de cualquier tipo.</p>",
        "parameters": [
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Determina si esta habilitado o no el input.</p>"
          },
          {
            "name": "type",
            "type": "BcInputType",
            "required": false,
            "description": "<p>Determina el tipo de input Default, IconLeft, IconRight, TextArea.</p>"
          },
          {
            "name": "inputValueType",
            "type": "TextInputType",
            "required": false,
            "description": "<p>Determina el tipo de valor del input, ej. text, number, phone, email.</p>"
          },
          {
            "name": "prefixIcon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Determina el icono que debe aparecer como prefijo.</p>"
          },
          {
            "name": "suffixIcon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Determina el icono que debe aparecer como sufijo.</p>"
          },
          {
            "name": "suffixWidget",
            "type": "Widget?",
            "required": false,
            "description": "<p>Determina el widget si se desea pasar como sufijo .</p>"
          },
          {
            "name": "isSuffixSuccess",
            "type": "bool",
            "required": false,
            "description": "<p>Activa el estado de succes cuando el campo se llena corectamente, por defecto es false.</p>"
          },
          {
            "name": "errorText",
            "type": "String?",
            "required": false,
            "description": "<p>Determina el texto que debe aparecer al generar algun error en la validaci\u00f3n.</p>"
          },
          {
            "name": "onTapSuffix",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n que se ejecuta cuando se define un icono sufijo.</p>"
          },
          {
            "name": "helpText",
            "type": "String?",
            "required": false,
            "description": "<p>Determina el texto que se muestra debajo de underline.</p>"
          },
          {
            "name": "hintText",
            "type": "String?",
            "required": false,
            "description": "<p>Determina el texto que se muestra antes de digitar algun caracter en el input.</p>"
          },
          {
            "name": "labelText",
            "type": "String?",
            "required": false,
            "description": "<p>Determina el texto flotante.</p>"
          },
          {
            "name": "textSuffix",
            "type": "String?",
            "required": false,
            "description": "<p>Determina el texto si se desea como sufijo.</p>"
          },
          {
            "name": "focusNode",
            "type": "FocusNode",
            "required": false,
            "description": "<p>Clase que permite controlar el estado del focus del input.</p>"
          },
          {
            "name": "obscureText",
            "type": "bool",
            "required": false,
            "description": "<p>Determina si enmascara los caracteres del input.</p>"
          },
          {
            "name": "controller",
            "type": "TextEditingController",
            "required": false,
            "description": "<p>Controlador del input para obtener y manipular el texto digitado.</p>"
          },
          {
            "name": "maxLength",
            "type": "int?",
            "required": false,
            "description": "<p>Cantidad maxima de caracteres que se requeiren en el input.</p>"
          },
          {
            "name": "maxLines",
            "type": "int?",
            "required": false,
            "description": "<p>Cantidad maxima de lineas que se requieren en el tipo de input TextArea, por defecto es 3.</p>"
          },
          {
            "name": "minLines",
            "type": "int?",
            "required": false,
            "description": "<p>Cantidad minima de lineas que se requieren en el tipo de input TextArea, debe ser menor que la cantidad maxima, por defecto es 3.</p>"
          },
          {
            "name": "onTap",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n que se ejecuta al darle tap sobre el input.</p>"
          },
          {
            "name": "onChanged",
            "type": "Function(String)?",
            "required": false,
            "description": "<p>Funci\u00f3n que se ejecuta al ingresar cada caracter sobre el input.</p>"
          },
          {
            "name": "inputFormatters",
            "type": "List<TextInputFormatter>?",
            "required": false,
            "description": "<p>Lista de funciones para formatear el texto ingresado.</p>"
          },
          {
            "name": "autoCorrect",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera que permite habilitar el autocorrector del celular, por defecto esta el false.</p>"
          },
          {
            "name": "toolbarOptions",
            "type": "ToolbarOptions?",
            "required": false,
            "description": "<p>Permite habilitas las opciones de copiar, pegar, cortar y seleccionar.</p>"
          },
          {
            "name": "textInputAction",
            "type": "TextInputAction",
            "required": false,
            "description": "<p>Tipo de texto que se requiera mostrar en el enter del teclado del celular.</p>"
          },
          {
            "name": "readOnly",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera para definir si el campo del input es solo lectura, por defecto es falso.</p>"
          },
          {
            "name": "showCounter",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera que permite habilitar el contador de caracteres del input, por defecto es falso.</p>"
          },
          {
            "name": "textAlign",
            "type": "TextAlign",
            "required": false,
            "description": "<p>Permite definir la posici\u00f3n del texto dentro del formato.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Input con muestra de cursor",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'Help Texto',\n              errorText: errorText,\n              enabled: enabled,\n              focusNode: FocusNode(),\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input con muestra de cursor",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'Help Texto',\n              textSuffix: 'ssssss',\n              errorText: errorText,\n              enabled: enabled,\n              focusNode: FocusNode(),\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input con muestra de cursor",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'Help Texto',\n              showCounter: true,\n              maxLength: 10,\n              errorText: errorText,\n              enabled: enabled,\n              focusNode: FocusNode(),\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input con icono a la izquierda",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'HelpText',\n              errorText: errorText,\n              enabled: enabled,\n              focusNode: FocusNode(),\n              type: BcInputType.IconLeft,\n              prefixIcon: BcFunctionalIcons.ID,\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input con icono a la derecha",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'HelpText',\n              focusNode: FocusNode(),\n              errorText: errorText,\n              enabled: enabled,\n              type: BcInputType.IconRight,\n              suffixIcon: BcFunctionalIcons.HELP,\n              isSuffixSuccess: isSuccess,\n              onTapSuffix: () {},\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input con icono a la derecha",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'HelpText',\n              focusNode: FocusNode(),\n              errorText: errorText,\n              enabled: enabled,\n              type: BcInputType.Icons,\n              suffixIcon: BcFunctionalIcons.HELP,\n              prefixIcon: BcFunctionalIcons.ID,\n              isSuffixSuccess: isSuccess,\n              onTapSuffix: () {},\n              controller: TextEditingController(),\n            ),"
              }
            ]
          },
          {
            "description": "Input de TextArea",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcInput(\n              labelText: 'Label',\n              hintText: 'HintText',\n              helpText: 'HelpText',\n              errorText: errorText,\n              enabled: enabled,\n              focusNode: FocusNode(),\n              maxLines: 6,\n              type: BcInputType.TextArea,\n              controller: TextEditingController(),\n            ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Modal",
    "description": "Los modales son notificaciones que hacen parte de los componentes informativos del sistema de dise\u00f1o y permiten al usuario dar una respuesta o acci\u00f3n oportuna. Funcionan para informan a los usuarios sobre una tarea espec\u00edfica y pueden contener informaci\u00f3n cr\u00edtica, requerir decisiones o involucrar m\u00faltiples tareas.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {
      "definition": "<section class=\"bc-mb-4\" id=\"definition\">\n <header>\n  <h3>\n   Definici\u00f3n\n  </h3>\n </header>\n <p class=\"bc-my-2\">\n  Las modales informan a los usuarios sobre una tarea espec\u00edfica y pueden contener\n                    informaci\u00f3n\n                    cr\u00edtica, requerir decisiones o involucrar m\u00faltiples tareas.\n </p>\n <h5 class=\"bc-my-2\">\n  <strong>\n   Objetivos del componente:\n  </strong>\n </h5>\n <p class=\"bc-my-2 bc-py-1\">\n  <ul>\n   <li class=\"bc-my-2\">\n    <b>\n     -\n    </b>\n    Mostrar informaci\u00f3n muy relevante en un momento espec\u00edfico. Por esta raz\u00f3n, se\n                        superponen a\n                        cualquier contenido con el f\u00edn de tener la mayor visibilidad posible.\n   </li>\n   <li class=\"bc-my-2\">\n    <b>\n     -\n    </b>\n    Comunicar alertas, contenido o decisi\u00f3n, y seg\u00fan su tipo pueden requerir alguna\n                        acci\u00f3n por\n                        parte del usuario.\n   </li>\n  </ul>\n </p>\n</section>\n",
      "rules": "<section class=\"bc-mb-4\" id=\"rules\">\n <header>\n  <h3>\n   Reglas Generales y Uso\n  </h3>\n  <p class=\"bc-my-2 bc-py-1\">\n   <ul>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Aparecen como resultado de una acci\u00f3n del usuario o como parte obligatoria para completar un\n                            proceso.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Deben poseer t\u00edtulos cortos y concisos, de igual forma, las descripciones deben explicar\n                            brevemente el mensaje seg\u00fan el caso.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Tener en cuenta los diferentes tama\u00f1os del modal, los cuales se ajustan al contenido y\n                            tama\u00f1o\n                            del dispositivo.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Siempre son desplegados en el centro de la pantalla y se suponerponen al contenido\n                            existente,\n                            mostrando un \u201cbackdrop\u201d de fondo y dando total prioridad al modal cuando aparece.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Tienen una o varias acciones oportunas que le permiten al usuario tomar una decisi\u00f3n. Por\n                            ejemplo: Eliminar o Cancelar. Tambi\u00e9n tiene un icono para Cerrar en la parte superior\n                            derecha.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Al hacer clic o tap en el \u201cbackdrop\u201d fuera del modal, se debe cerrar el componente. Es\n                            decir,\n                            igual al hacer clic o tap en el icono de Cerrar.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Mostrar informaci\u00f3n muy relevante en un momento espec\u00edfico. Por esta raz\u00f3n, se\n                            superponen a\n                            cualquier contenido con el f\u00edn de tener la mayor visibilidad posible.\n    </li>\n    <li class=\"bc-my-2\">\n     <b>\n      -\n     </b>\n     Comunicar alertas, contenido o decisi\u00f3n, y seg\u00fan su tipo pueden requerir alguna\n                            acci\u00f3n por\n                            parte del usuario.\n    </li>\n   </ul>\n  </p>\n </header>\n</section>\n"
    },
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcModalComponent",
            "selector": "bc-modal",
            "inputsClass": [
              {
                "name": "buttonAlignment",
                "defaultValue": "'horizontal'",
                "description": "<p>Indica la orientaci\u00f3n del modal ejemplo en caso de tener varios botones les da una, alineaci\u00f3n vertical u horizontal.</p>\n",
                "type": "\"horizontal\" | \"vertical\""
              },
              {
                "name": "customWidth",
                "defaultValue": "'medium'",
                "description": "<p>Indica el ancho del modal, por defecto &quot;Small&quot;.</p>\n",
                "type": "\"small\" | \"medium\" | \"large\""
              },
              {
                "name": "displayButton",
                "defaultValue": "true",
                "description": "<p>Indica la posibilidad de utilizar o no los botones por defecto del modal\n(Primary-Secondary), por defecto &quot;True&quot;.</p>\n",
                "type": "boolean"
              },
              {
                "name": "id",
                "defaultValue": "this.helperService.getId(this)",
                "description": "<p>Id del modal.</p>\n",
                "type": "string"
              },
              {
                "name": "isCancellable",
                "defaultValue": "false",
                "description": "<p>Tipo de acci\u00f3n, por defecto &quot;Simple&quot;, este dado de entrada sirve para definir si el pop-up tiene bot\u00f3n de cancelaci\u00f3n o no.</p>\n",
                "type": "\"undefined\" | \"undefined\""
              },
              {
                "name": "outerCloseTap",
                "defaultValue": "true",
                "description": "<p>Indica si el modal puede o no cerrarse haciendo click fuera de \u00e9l, admite dos valores, true o false.</p>\n",
                "type": "boolean"
              },
              {
                "name": "subTitle",
                "defaultValue": "''",
                "description": "<p>Subt\u00edtulo del modal este se sit\u00faa de bajo del titulo principal de la modal).</p>\n"
              },
              {
                "name": "textBtn",
                "defaultValue": "''",
                "description": "<p>Texto del b\u00f3ton del modal.</p>\n"
              },
              {
                "name": "textBtnLeft",
                "defaultValue": "''",
                "description": "<p>Texto del bot\u00f3n izquierdo.</p>\n"
              },
              {
                "name": "title",
                "defaultValue": "''",
                "description": "<p>T\u00edtulo del modal.</p>\n"
              },
              {
                "name": "titleAlign",
                "defaultValue": "'center'",
                "description": "<p>Indica la alineaci\u00f3n del t\u00edtulo del modal, por defecto &quot;center&quot;.</p>\n",
                "type": "\"center\" | \"left\""
              },
              {
                "name": "typeIcon",
                "defaultValue": "'default'",
                "description": "<p>Tipo del \u00edcono que usar\u00e1 el modal, los permitidos son : {&#39;error&#39;, &#39;success&#39;, &#39;warning&#39;, &#39;info&#39;},\nel \u00edcono por defecto es &#39;default&#39; (vac\u00edo).</p>\n",
                "type": "\"error\" | \"success\" | \"warning\" | \"info\" | \"default\""
              }
            ],
            "outputsClass": [
              {
                "name": "stateClick",
                "defaultValue": "new EventEmitter<number>()",
                "description": "",
                "type": "EventEmitter<number>"
              }
            ],
            "methodsClass": [
              {
                "name": "callback",
                "args": [
                  {
                    "name": "typeTask",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo que retorna el tipo de tarea ejecuta por cada uno de los botones del modal (Primario o Secundario).</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "openModal",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Este m\u00e9todo se encarga de abrir el modal.</p>\n"
              },
              {
                "name": "shutDown",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Este m\u00e9todo se encarga de cerrar el modal.</p>\n"
              }
            ],
            "description": "<p>Componente modal</p>\n",
            "rawdescription": "Componente modal",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Modal por Defecto",
            "code": {
              "html": "\n        <bc-modal title=\"T\u00edtulo\" [typeIcon]='typeIcon' [customWidth]=\"customWidth\" [titleAlign]=\"titleAlign\"\n          [isCancellable]='action' [subTitle]='subTitle' [buttonAlignment]=\"buttonAlignment\"  textBtn=\"S\u00ed\" textBtnLeft=\"No\"\n          typeNotify='success' (stateClick)=\"onPressButton($event['value'])\">\n          <div illustration>\n            <bc-icon aria-hidden=\"true\" name=\"inscribir_factura_01\" aria-label=\"prueba\"\n              role=\"img\" width=\"150px\" class=\"bc-sm\"></bc-icon>\n          </div>\n          <div modalContent>\n            <em>Este cuadro te pertenece es el contenido del modal </em>\n            <p>Puedes agregar elementos html seg\u00fan tus necesidades</p>\n          </div>\n          <div modalFooter>\n          <p>Puedes agregar elementos html seg\u00fan tus necesidades</p>\n          </div>\n        </bc-modal>\n          ",
              "script": "\n        El componente modal tiene a su disposici\u00f3n 3 contenedores con las siguientes clases: illustration, modalContent y modalFooter,\n        dentro de cada uno de ellos y dependiendo del dise\u00f1o del modal, se puede agregar cualquier tipo de html.\n        action = false;\n        typeIcon = '';\n        customWidth = 'small';\n        titleAlign = '';\n        buttonAlignment = 'horizontal';\n        selectedValue = '';\n        subTitle = '';\n        ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "accessibility",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura la accesibilidad de los botones del modal. El principal, el secundario y el de cierre.</p>\n"
          },
          {
            "name": "changeState",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "closeEventKey",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "closeModal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Cierra el modal y actualiza el control del estado (changeState).</p>\n"
          },
          {
            "name": "configEventListener",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura el callback en el evento click en los botones del modal.</p>\n"
          },
          {
            "name": "configureCallBack",
            "args": [
              {
                "name": "button",
                "type": "HTMLButtonElement"
              },
              {
                "name": "state",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getElement",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "openModal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abre el modal y actualiza el control del estado (changeState).</p>\n"
          },
          {
            "name": "optionalClose",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Modal por Defecto",
            "code": {
              "html": "\n        <div class=\"bc-modal\" id=\"BcModalComponent.2608770784\">\n        <label class=\"bc-modal-close\" for=\"\"></label>\n        <div class=\"bc-modal-container\" customwidth=\"small\" titlealign=\"\" subTitle=\"\" buttonalignment=\"horizontal\" typeicon=\"\"\n            iscancellable=\"false\">\n            <div class=\"bc-modal-close-button-container\">\n                <a class=\"bc-direction-row  bc-icon bc-modal-close-button\" tabindex=\"0\" aria-pressed=\"false\">error</a>\n            </div>\n            <div class=\"bc-modal-illustration\"></div>\n            <div class=\"bc-modal-title bc-direction-row\">\n                <h4>T\u00edtulo</h4>\n            </div>\n            <div class=\"bc-modal-title bc-direction-row\">\n                <p>subT\u00edtulo</p>\n            </div>\n            <div class=\"bc-modal-content\">\n                <div modalcontent=\"\"><em>Este cuadro te pertenece es el\n                        contenido del modal </em>\n                    <p>Puedes agregar elementos seg\u00fan tus necesidades Lorem ipsum dolor sit amet\n                        consectetur adipisicing elit. Enim temporibus eos repellat sit, maiores quam corrupti tenetur\n                        quo explicabo id eius quos sint unde totam ad praesentium dolorem suscipit porro! Voluptates\n                        perferendis ipsam facilis repellendus illum vero distinctio ad ut atque eaque, excepturi, non\n                        cum at optio sapiente explicabo neque tenetur mollitia. Nobis ipsa quis vitae enim placeat qui\n                        inventore voluptas! </p>\n                </div>\n            </div>\n            <div class=\"bc-modal-button-container\">\n                <button bc-button=\"\" sizebutton=\"small\" class=\" bc-button-primary bc-button-small\" tabindex=\"0\"\n                    aria-pressed=\"false\">S\u00ed</button>\n                <button bc-button=\"\" sizebutton=\"small\" class=\" bc-button-secondary bc-button-small\" tabindex=\"0\"\n                    aria-pressed=\"false\">Cancelar</button>\n            </div>\n            <div class=\"bc-modal-footer\"></div>\n        </div>\n    </div>\n          ",
              "script": "\n          const modal = new BcModalBehavior();\n        modal.setId('BcModalComponent.2608770784');\n        modal.openModal()\n          ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "callback",
            "type": "Function",
            "optional": false,
            "description": ""
          },
          {
            "name": "closeButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "isMainButtonConfigured",
            "defaultValue": "false",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "isSecondaryButtonConfigured",
            "defaultValue": "false",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "mainButton",
            "type": "HTMLButtonElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "modal",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "modalOverlay",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "modalState",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "modalType",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "secondaryButton",
            "type": "HTMLButtonElement",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcAlertModal",
        "description": "<p>BcAlertModal son mensajes que comunican informaci\u00f3n y permiten dar una respuesta oportuna de parte del usuario. Pueden ser: alerta, decisi\u00f3n, contenido o ilustraci\u00f3n, y seg\u00fan su tipo pueden requerir alguna acci\u00f3n por parte del usuario. Por defecto, este \u00e1tomo se visualiza en estado Activo y habilitado.</p>",
        "parameters": [
          {
            "name": "context",
            "type": "BuildContext",
            "required": true,
            "description": "<p>se llama cuando cambia el estado.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "void",
            "name": "showNotify",
            "args": {
              "names": [
                "model"
              ],
              "types": [
                "BcAlertModalModel"
              ]
            }
          }
        ],
        "examples": [
          {
            "description": "Modal Error",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      icon: BcFunctionalIcons.ADDRESS_BOOK,\n      title: 'Error',\n      message: 'Alerta de tipo error. Lorem ipsum dolor sit amet.',\n      primaryBtnLabel: 'Entendido',\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal Svg",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      svg: 'time',\n      title: 'Error',\n      message: 'Alerta de tipo error. Lorem ipsum dolor sit amet.',\n      primaryBtnLabel: 'Entendido',\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal Error",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      alertType: BcAlertType.Error,\n      title: 'Error',\n      message: 'Alerta de tipo error. Lorem ipsum dolor sit amet.',\n      primaryBtnLabel: 'Entendido',\n      onPrimaryBtnPressed: () {\n        _showAlertModalOfSuccess(context);\n      },\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal Success",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      alertType: BcAlertType.Success,\n      title: 'Success',\n      message: 'Alerta de tipo success. Lorem ipsum dolor sit amet.',\n      primaryBtnLabel: 'Continuar',\n      onPrimaryBtnPressed: () {\n        _showAlertModalOfInfo(context);\n      },\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal info",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      alertType: BcAlertType.Info,\n      title: 'Info',\n      message: 'Alerta de tipo Info. Lorem ipsum dolor sit amet.',\n      primaryBtnLabel: 'Aceptar',\n      onPrimaryBtnPressed: () {\n        _showAlertModalOfAlert(context);\n      },\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal Alert",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      alertType: BcAlertType.Alert,\n      title: 'Alert',\n      message: 'Alerta de tipo Alert. Lorem ipsum dolor sit amet.',\n      optionalText: 'C\u00f3digo: 0610',\n      primaryBtnLabel: 'Entendido',\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal de Decision",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      title: 'Modal de Decisi\u00f3n. \u00bfEst\u00e1 seguro que desea salir de esta pagina?',\n      primaryBtnLabel: 'Entendido',\n      secondaryBtnLabel: 'Cancelar',\n    );\n    BcAlertModal(context).showNotify(model);"
              }
            ]
          },
          {
            "description": "Modal de contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n    final BcAlertModalModel model = BcAlertModalModel(\n      title: 'Titulo Modal de Contenido',\n      message:\n          'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna.',\n      primaryBtnLabel: 'Entendido',\n    );\n    BcAlertModal(context).showNotify(model);\n  }\n}"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcNotificationComponent",
            "selector": "bc-notification",
            "inputsClass": [
              {
                "name": "dismissible",
                "defaultValue": "false",
                "description": "<p>Indica si la notificacion es est\u00e1tica se puede descartar o cerrar</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "this.helper.getId(this)",
                "description": "<p>Id del componente</p>\n",
                "type": "string"
              },
              {
                "name": "inline",
                "defaultValue": "false",
                "description": "<p>Indica si la notificacion es est\u00e1tica \u00f3 inline</p>\n"
              },
              {
                "name": "text",
                "defaultValue": "''",
                "description": "<p>Texto de la notificacion</p>\n"
              },
              {
                "name": "title",
                "defaultValue": "''",
                "description": "<p>Titulo de la notificacion</p>\n"
              },
              {
                "name": "type",
                "defaultValue": "'inactive'",
                "description": "<p>Tipo de notificacion [ &#39;error&#39; | &#39;success&#39; | &#39;info&#39; | &#39;warning&#39; | &#39;inactive&#39; (default) ]</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "onclose",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Se ejecuta cuando la notificacion es cerrada, aplica solo para notificacions inline</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "cancelIt",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cancelar notificacion</p>\n"
              },
              {
                "name": "closeByTimeout",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cerrar notificacion seg\u00fan timeout</p>\n"
              },
              {
                "name": "closeIt",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Cerrar notificacion</p>\n"
              },
              {
                "name": "onInjectInputs",
                "args": [
                  {
                    "name": "inputs",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Atributos de la notificacion</p>\n"
              },
              {
                "name": "setIconByType",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Validar icono seg\u00fan tipo de notificacion</p>\n"
              },
              {
                "name": "close",
                "args": [
                  {
                    "name": "output",
                    "type": "any",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcDialog"
                }
              },
              {
                "name": "dismiss",
                "args": [
                  {
                    "name": "output",
                    "type": "any",
                    "optional": true
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcDialog"
                }
              },
              {
                "name": "onInjectInputs",
                "args": [
                  {
                    "name": "inputs",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  117
                ],
                "inheritance": {
                  "file": "BcDialog"
                }
              }
            ],
            "description": "<p>Importa las Notificaciones con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa las Notificaciones con los dise\u00f1os de Bancolombia S.A.",
            "type": "component",
            "extends": "BcDialog"
          }
        ],
        "directives": [],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "accessibility",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura la accesibilidad del boton de cierre de la notificaci\u00f3n.</p>\n"
          },
          {
            "name": "close",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Funci\u00f3n de cierre de la notificaci\u00f3n, siempre y cuando est\u00e9 activa y visible.</p>\n"
          },
          {
            "name": "getCloseButton",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona el boton de cierre de la notificaci\u00f3n por medio de la clase BC_NOTIFICATION_CLOSE</p>\n"
          },
          {
            "name": "hideNotificationAfterCloseAnimation",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Reinicia el estado de la notificaci\u00f3n despu\u00e9s del cierre de la misma.</p>\n"
          },
          {
            "name": "listeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra el evento click del boton de cierre de la notificaci\u00f3n.</p>\n"
          },
          {
            "name": "onClose",
            "args": [
              {
                "name": "fn",
                "type": "Function",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el argumento fn a la funci\u00f3n onCloseFunction</p>\n"
          },
          {
            "name": "open",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abre la notificaci\u00f3n y dejandola en estado activo mediante la clase BC_NOTIFICATION_ACTIVE</p>\n"
          },
          {
            "name": "setTimeOut",
            "args": [
              {
                "name": "time",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el valor de espera (de tiempo) time a timeOut siempre que no se exceda de los l\u00edmites: _MIN_TIME_DELAY y _MAX_TIME_DELAY.</p>\n"
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcNotificationCloseButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcNotificationElements",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "onCloseFunction",
            "type": "Function",
            "optional": false,
            "description": ""
          },
          {
            "name": "timeOut",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcAlertInline",
        "description": "<p>BcAlertInline son mensajes que comunican informaci\u00f3n al usuario.</p>",
        "parameters": [
          {
            "name": "alertType",
            "type": "BcAlertType",
            "required": true,
            "description": "<p>Tipo de alerta, son 5 tipos: success, info, alert, error, default.</p>"
          },
          {
            "name": "text",
            "type": "String?",
            "required": true,
            "description": "<p>Texto que se presentar\u00e1 al usuario.</p>"
          },
          {
            "name": "richText",
            "type": "String?",
            "required": true,
            "description": "<p>Texto con palabras en negrillas que se presentar\u00e1 al usuario.</p>"
          },
          {
            "name": "link",
            "type": "BcLnk?",
            "required": false,
            "description": "<p>Widget bcLnk para enrutar a una acci\u00f3n o pagina web.</p>"
          },
          {
            "name": "title",
            "type": "String?",
            "required": false,
            "description": "<p>Texto que se presentar\u00e1 como titulo de la alerta.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Alerta Inline con acci\u00f3n",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcAlertInline(\n              key: const Key('alertWithLnk'),\n              alertType: BcAlertType.Info,\n              text:\n                  'Activa el permiso de ubicaci\u00f3n de tu dispositivo para una mejor experiencia.',\n              link: BcLnk(\n                linkType: BcLinkType.Action,\n                text: 'Link con callback sin enlace',\n                onPressed: () {},\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Alerta Inline con enlace externo",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcAlertInline(\n              key: const Key('alertWithLnk'),\n              alertType: BcAlertType.Success,\n              text:\n                  'Activa el permiso de ubicaci\u00f3n de tu dispositivo para una mejor experiencia.',\n              link: BcLnk(\n                linkType: BcLinkType.Url,\n                text: 'Link con enlace externo por defecto',\n                url: 'https://flutter.dev/',\n              ),\n            ),"
              }
            ]
          },
          {
            "description": "Alerta Inline sin enlace",
            "codes": [
              {
                "language": "dart",
                "example": "\n            const BcAlertInline(\n              key: Key('alertWithoutLnk'),\n              alertType: BcAlertType.Error,\n              text:\n                  'Activa el permiso de ubicaci\u00f3n de tu dispositivo para una mejor experiencia.',\n            ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcOnboarding",
        "description": "<p>BcOnboarding usado para presentarle al usuario una introducci\u00f3n rapida acerca de un tema espec\u00edfico.</p>",
        "parameters": [
          {
            "name": "pages",
            "type": "List<BcOnboardingItem>",
            "required": true,
            "description": "<p>Lista de paginas que se mostraran en el onboarding.</p>"
          },
          {
            "name": "onCancelPressed",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>Define la acci\u00f3n del boton cancelar onboarding.</p>"
          },
          {
            "name": "onContinuePressed",
            "type": "VoidCallback",
            "required": true,
            "description": "<p>Define la acci\u00f3n del bot\u00f3n cuando se llega a la ultima pagina del onboarding.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcOnboarding usado para presentarle al usuario una introducci\u00f3n rapida acerca de un tema espec\u00edfico.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n BcOnboarding(\n   pages: [\n   BcOnboardingItem(\n       image: \"image1\",\n       title: \"title1\",\n       description: \"Description1\"),\n   BcOnboardingItem(\n       image: \"image2\",\n       description: \"Description2\"),\n    BcOnboardingItem(\n       image: \"image3\",\n       title: \"title3\",\n       description: \"Description3\"),\n   ],\n   onCancelPressed: () {*action*},\n   onContinuePressed: () {*action*},\n  )\n );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcOverlay",
        "description": "<p>BcOverlay consiste en un panel que se superpone a las pantallas para desplegar informaci\u00f3n o acciones adicionales. Se despliega desde la parte inferior de la pantalla hacia arriba y se cierra por medio de swipe down.</p>",
        "parameters": [
          {
            "name": "context",
            "type": "BuildContext",
            "required": true,
            "description": "<p>Se utiliza como identificador de contexto para desplegar el overlay.</p>"
          }
        ],
        "methods": [
          {
            "returnType": "Future<dynamic>",
            "name": "showOverlay",
            "args": {
              "names": [
                "List<Widget>",
                "onClosedPressed",
                "closeBtnLabel"
              ],
              "types": [
                "required",
                "VoidCallback",
                "String"
              ]
            }
          },
          {
            "returnType": "void",
            "name": "hideOverlay",
            "args": {
              "names": [],
              "types": []
            }
          }
        ],
        "examples": [
          {
            "description": " Calendario con Overlay implementado",
            "codes": [
              {
                "language": "dart",
                "example": "\n  void _showOverlay() {\n    BcOverlay(context).showOverlay(\n      children: [\n        BcDatePickerWheel(\n          message: 'Ingrese fecha de cumplea\u00f1os',\n          onSelectedDate: _bornDateSelected,\n          maxDate: DateTime.now(),\n          currentDate: wheelDate,\n        ),\n      ],\n    );\n  }"
              }
            ]
          },
          {
            "description": " Input con Overlay con cambio de estado y validaciones",
            "codes": [
              {
                "language": "dart",
                "example": "\n  void _showOverlayInput() {\n    String? text;\n    BcOverlay(context).showOverlay(\n      children: [\n        StatefulBuilder(\n          builder: (BuildContext context, StateSetter _setState) => BcInput(\n            controller: _editingController,\n            focusNode: FocusNode(),\n            labelText: 'Ingrese valor',\n            helpText: 'Ingrese valor',\n            type: BcInputType.IconLeft,\n            prefixIcon: BcFunctionalIcons.ASSISTANT,\n            errorText: text,\n            onChanged: (value) {\n              if (value.length > 3) {\n                text = 'Error';\n              } else {\n                text = null;\n              }\n              _setState(() {});\n            },\n          ),\n        ),\n      ],\n    );\n  }"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Paginator",
    "description": "La paginaci\u00f3n se utiliza para dividir el contenido o los datos en varias p\u00e1ginas, con un control para navegar a la p\u00e1gina anterior o siguiente.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcPaginatorComponent",
            "selector": "bc-paginator",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "perMultiple",
                "description": "<p>M\u00faltiplo que se va usar para mostrar el dropdown perPage.</p>\n",
                "type": "string"
              },
              {
                "name": "perPage",
                "description": "<p>Cantidad de registros a mostrar por p\u00e1gina.</p>\n",
                "type": "string"
              },
              {
                "name": "totalRegisters",
                "description": "<p>Total de registros.</p>\n",
                "type": "string"
              },
              {
                "name": "type",
                "defaultValue": "''",
                "description": "<p>Tipo de paginador.\n&#39;default&#39; | &#39;basic&#39; | &#39;simple&#39; | &#39;full&#39;</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "onChangePage",
                "defaultValue": "new EventEmitter<number>(true)",
                "description": "<p>N\u00famero de p\u00e1gina seleccionada.</p>\n",
                "type": "EventEmitter<number>"
              }
            ],
            "methodsClass": [],
            "description": "<p>Componente paginador</p>\n",
            "rawdescription": "Componente paginador",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "<bc-paginator [type]=\"'default'\" [id]=\"'basic'\" [totalRegisters]=\"totalRegisters\" [perPage]=\"perPage\" (onChangePage)='onChangePage($event)'></bc-paginator>",
              "script": "totalRegisters:number;\nperPage: number = 1;",
              "language": "ts"
            }
          },
          {
            "description": "Basic",
            "code": {
              "html": "<bc-paginator [type]=\"'basic'\" [id]=\"'basic'\" [totalRegisters]=\"totalRegisters\" [perPage]=\"perPage\" (onChangePage)='onChangePage($event)'></bc-paginator>",
              "script": "totalRegisters:number;\nperPage: number = 1;",
              "language": "ts"
            }
          },
          {
            "description": "Simple",
            "code": {
              "html": "<bc-paginator [type]=\"'simple'\" [id]=\"'simple'\"  [totalRegisters]=\"totalRegisters2\" [perPage]=\"perPage2\" (onChangePage)='onChangePage($event)'></bc-paginator>",
              "script": "totalRegisters:number;\nperPage: number = 1;",
              "language": "ts"
            }
          },
          {
            "description": "Full",
            "code": {
              "html": "<bc-paginator [type]=\"'full'\" [id]=\"'full'\" [totalRegisters]=\"totalRegisters3\" [perPage]=\"perPage3\" (onChangePage)='onChangePage($event)'></bc-paginator>",
              "script": "totalRegisters:number;\nperPage: number = 1;",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addArrowButton",
            "args": [
              {
                "name": "elem",
                "type": "Element"
              },
              {
                "name": "icon",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega el boton de flecha al paginador</p>\n"
          },
          {
            "name": "addArrowButtonDefault",
            "args": [
              {
                "name": "elem",
                "type": "Element"
              },
              {
                "name": "icon",
                "type": "string"
              },
              {
                "name": "text",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega el boton de flecha al paginador tipo default</p>\n"
          },
          {
            "name": "addButtons",
            "args": [
              {
                "name": "center",
                "type": "HTMLElement"
              },
              {
                "name": "pageNum",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agregar botones.</p>\n"
          },
          {
            "name": "addEllipsis",
            "args": [
              {
                "name": "center",
                "type": "HTMLElement"
              },
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "startnum",
                "type": "number"
              },
              {
                "name": "endnum",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Construye los botones de Ellipsis (puntos suspensivos).</p>\n"
          },
          {
            "name": "addPagination",
            "args": [
              {
                "name": "resultPerPage",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agregar cada unos de los botones de las p\u00e1ginas del paginador.</p>\n"
          },
          {
            "name": "addPaginationManagement",
            "args": [
              {
                "name": "index",
                "type": "number"
              },
              {
                "name": "resultPerPage",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "buildMoleculeAllType",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Param\u00e9triza los elementos del paginador de todos los tipos.</p>\n"
          },
          {
            "name": "buildMoleculeDefaultType",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Param\u00e9triza los elementos del paginador tipo default.</p>\n"
          },
          {
            "name": "buildPagination",
            "args": [
              {
                "name": "totalPages",
                "type": "number"
              },
              {
                "name": "currentStart",
                "type": "number"
              },
              {
                "name": "resultPerPage",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Construye el paginador</p>\n"
          },
          {
            "name": "changeStatus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Actualiza el cambio de estado del p\u00e1ginador.</p>\n"
          },
          {
            "name": "changeStatusDefault",
            "args": [
              {
                "name": "text",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Actualiza el cambio de estado del p\u00e1ginador tipo default.</p>\n"
          },
          {
            "name": "currentPageIndexValidator",
            "args": [
              {
                "name": "currentPage",
                "type": "number"
              },
              {
                "name": "index",
                "type": "number"
              },
              {
                "name": "_",
                "type": "literal type"
              },
              {
                "name": "length",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "dropdownFor",
            "args": [
              {
                "name": "dropdown",
                "type": "Element"
              },
              {
                "name": "dropdownPages",
                "type": "HTMLElement"
              },
              {
                "name": "list",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getQuantityInfo",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": [],
            "description": "<p>Se c\u00e1lcula la cantidad de items que se muestran.</p>\n"
          },
          {
            "name": "initDropdown",
            "args": [
              {
                "name": "dropdown",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Inicializar el dropdown.</p>\n"
          },
          {
            "name": "isCurrentPage",
            "args": [
              {
                "name": "start",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "nextPage",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agraga Event Listener al boton Next.</p>\n"
          },
          {
            "name": "onClickAddButtons",
            "args": [
              {
                "name": "center",
                "type": "HTMLElement"
              },
              {
                "name": "pageNum",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "onClickAddEllipsis",
            "args": [
              {
                "name": "center",
                "type": "HTMLElement"
              },
              {
                "name": "i",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Funci\u00f3n onClick de los botones de Ellipsis (puntos suspensivos).</p>\n<p>Actualiza el estado de la p\u00e1ginaci\u00f3n.</p>\n"
          },
          {
            "name": "onClickNextPage",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Funci\u00f3n onClick del bot\u00f3n de avanzar p\u00e1gina.</p>\n"
          },
          {
            "name": "onClickPerPage",
            "args": [
              {
                "name": "dropdown",
                "type": "Element"
              },
              {
                "name": "dropdownPages",
                "type": "HTMLElement"
              },
              {
                "name": "i",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Funci\u00f3n onClick de los \u00edtems del dropdown del p\u00e1ginador.\nSetea el nuevo valor de agrupaci\u00f3n, actualiza el estado y cierra el dropdown.</p>\n"
          },
          {
            "name": "onClickPrevPage",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Funci\u00f3n onClick del bot\u00f3n de retroceder p\u00e1gina.</p>\n"
          },
          {
            "name": "pageAdder",
            "args": [
              {
                "name": "index",
                "type": "number"
              },
              {
                "name": "currentPage",
                "type": "number"
              },
              {
                "name": "length",
                "type": "number"
              },
              {
                "name": "_",
                "type": "literal type"
              }
            ],
            "optional": false,
            "returnType": "{ pages: {}; }",
            "typeParameters": []
          },
          {
            "name": "pageManagement",
            "args": [
              {
                "name": "currentPage",
                "type": "number"
              },
              {
                "name": "length",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "pagination",
            "args": [
              {
                "name": "totalPages",
                "type": "any"
              },
              {
                "name": "startNumber",
                "type": "number"
              },
              {
                "name": "resultPage",
                "type": "number",
                "defaultValue": "DEFAULT_PAGE_COUNT"
              }
            ],
            "optional": false,
            "returnType": "Array<any>",
            "typeParameters": [],
            "description": "<p>Crear el arreglo de p\u00e1ginas</p>\n"
          },
          {
            "name": "prevPage",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agraga Event Listener al boton Prev.</p>\n"
          },
          {
            "name": "setInfo",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Establecer la informaci\u00f3n de los items que se muestran.</p>\n"
          },
          {
            "name": "setperPage",
            "args": [
              {
                "name": "dropdownPages",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Construye el dropdown de agrupaci\u00f3n de p\u00e1ginas (perPages).</p>\n"
          },
          {
            "name": "validateNumbers",
            "args": [
              {
                "name": "totalPages",
                "type": "any"
              },
              {
                "name": "startNumber",
                "type": "number"
              },
              {
                "name": "resultPage",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "<nav class=\"bc-paginator\" id=\"default\" role=\"navigation\" aria-label=\"paginador\" totalregisters=\"300\" perpage=\"5\" typepaginator=\"default\"></nav>",
              "script": "const paginator = new BcPaginatorBehavior();\npaginator.setId('basic');\npaginator.changeState = (param) => items(param);\npaginator.setUp();",
              "language": "js"
            }
          },
          {
            "description": "Basic",
            "code": {
              "html": "<nav class=\"bc-paginator\" id=\"basic\" role=\"navigation\" aria-label=\"paginador\" totalregisters=\"300\" perpage=\"5\" typepaginator=\"basic\"></nav>",
              "script": "const paginator = new BcPaginatorBehavior();\npaginator.setId('basic');\npaginator.changeState = (param) => items(param);\npaginator.setUp();",
              "language": "js"
            }
          },
          {
            "description": "Simple",
            "code": {
              "html": "<nav class=\"bc-paginator\" id=\"simple\" role=\"navigation\" aria-label=\"paginador\" totalregisters=\"300\" perpage=\"5\" typepaginator=\"simple\"></nav>",
              "script": "const paginator = new BcPaginatorBehavior();\npaginator.setId('simple');\npaginator.changeState = (param) => items(param);\npaginator.setUp();",
              "language": "js"
            }
          },
          {
            "description": "Full",
            "code": {
              "html": "<nav class=\"bc-paginator\" id=\"full\" role=\"navigation\" aria-label=\"paginador\" totalregisters=\"300\" perpage=\"5\" typepaginator=\"full\"></nav>",
              "script": "const paginator = new BcPaginatorBehavior();\npaginator.setId('full');\npaginator.changeState = (param) => items(param);\npaginator.setUp();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcDropdownBehavior",
            "type": "BcDropdownBehavior",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "center",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "changeState",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "currentPage",
            "defaultValue": "1",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "currentStart",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdownPages",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "idPaginator",
            "type": "string",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "next",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "pageList",
            "type": "Array<any>",
            "optional": false,
            "description": ""
          },
          {
            "name": "pageNum",
            "defaultValue": "1",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "pagesInfo",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "paginatorList",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "perMultiple",
            "defaultValue": "PER_MULTIPLE",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "perPage",
            "defaultValue": "PER_PAGE",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "prev",
            "defaultValue": "document.createElement(BcCommonConstants.DIV_TAG)",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "totalPages",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "typePaginator",
            "type": "string",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcPaginator",
        "description": "<p>BcPaginator es usado para paginar los contenidos de una funalidad. Su dise\u00f1o se basa en difundir la pagina actual de n paginas.</p>",
        "parameters": [
          {
            "name": "backgroundColor",
            "type": "Color",
            "required": true,
            "description": "<p>Color a definir para el contenedor.</p>"
          },
          {
            "name": "page",
            "type": "int",
            "required": true,
            "description": "<p>N\u00famero de pagina actual.</p>"
          },
          {
            "name": "maximumPages",
            "type": "int?",
            "required": true,
            "description": "<p>N\u00famero maximo de paginas a administrar.</p>"
          },
          {
            "name": "onChangedPage",
            "type": "ValueChanged<int>?",
            "required": true,
            "description": "<p>M\u00e9todo callback invocado cuando hay cambio en pagina.</p>"
          },
          {
            "name": "label",
            "type": "String?",
            "required": false,
            "description": "<p>Define el mensaje a enfatizar en el paginador y descriptivo al usuario sobre la pagina actual.</p>"
          },
          {
            "name": "buttonText",
            "type": "String?",
            "required": false,
            "description": "<p>T\u00edtulo del bot\u00f3n que enfatizar\u00e1 la acci\u00f3n para continuar.</p>"
          },
          {
            "name": "buttonEnable",
            "type": "bool?",
            "required": false,
            "description": "<p>Determina el estado del bot\u00f3n continuar:  true: Habilitado y false: Deshabilitado.</p>"
          },
          {
            "name": "buttonVisible",
            "type": "bool",
            "required": false,
            "description": "<p>Determina el estado de visibilidad del bot\u00f3n continuar, true: Vsible y false: Invisible.</p>"
          },
          {
            "name": "showIndicator",
            "type": "bool",
            "required": false,
            "description": "<p>Determina el estado del indicador del  paginador, true: Visible y false: Invisible.</p>"
          },
          {
            "name": "inhibitPageChanged",
            "type": "bool",
            "required": false,
            "description": "<p>Determina el estado de cambio de pagina,  true: bloquear paginaci\u00f3n y false: Habilitar paginaci\u00f3n.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "BcPaginator with inhibitPageChanged true",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcPaginator(\n          label: 'Paso ${page1 + 1} de 4',\n          page: page1,\n          inhibitPageChanged: true,\n          maximumPages: 4,\n          onChangedPage: (int index) {\n            page1 = index;\n            setState(() {});\n          },\n          buttonText: 'continuar',\n          backgroundColor: BcColors.BG_DARK_GRAY,\n        ),"
              }
            ]
          },
          {
            "description": "BcPaginator with inhibitPageChanged false",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcPaginator(\n          label: 'Paso ${page2 + 1} de 4',\n          page: page2,\n          maximumPages: 4,\n          onChangedPage: (int index) {\n            page2 = index;\n            setState(() {});\n          },\n          buttonText: 'continuar',\n          backgroundColor: BcColors.BG_DARK_GRAY,\n        ),"
              }
            ]
          },
          {
            "description": "BcPaginator with showIndicator false",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcPaginator(\n          page: page3,\n          showIndicator: false,\n          maximumPages: 4,\n          onChangedPage: (int index) {\n            page3 = index;\n            setState(() {});\n          },\n          buttonText: 'continuar',\n          backgroundColor: BcColors.BG_DARK_GRAY,\n        ),"
              }
            ]
          },
          {
            "description": "BcPaginator with buttonVisible false",
            "codes": [
              {
                "language": "dart",
                "example": "\n        BcPaginator(\n          label: 'Paso ${page1 + 1} de 4',\n          page: page1,\n          maximumPages: 4,\n          onChangedPage: (int index) {\n            page1 = index;\n            setState(() {});\n          },\n          buttonVisible: false,\n          backgroundColor: BcColors.BG_DARK_GRAY,\n        ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcQRMenu",
        "description": "<p>BcQRMenu representa un men\u00fa vertical con acciones asociadas a funciones con c\u00f3digo QR.</p>",
        "parameters": [
          {
            "name": "children",
            "type": "List<BcQRMenuItem>",
            "required": false,
            "description": "<p>Lista de items a visualizar en el men\u00fa cuando la propiedad onPressed es null y se presiona el bot\u00f3n QR.</p>"
          },
          {
            "name": "visible",
            "type": "bool",
            "required": false,
            "description": "<p>Determina la visivilidad del componente: true: Visible y false: Oculto.</p>"
          },
          {
            "name": "onOpened",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>M\u00e9todo callbac, ejecutado cuando el men\u00fa est\u00e1 abierto.</p>"
          },
          {
            "name": "onClosed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>M\u00e9todo callback, ejecutado cuando el men\u00fa est\u00e1 cerrado.</p>"
          },
          {
            "name": "onPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>M\u00e9todo callback, ejecutado cuando se presiona el bot\u00f3n QR y la propiedad children esta vacia.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": " Menu QR con 3 items",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcQRMenu(\n        children: [\n          BcQRMenuItem(\n            key: const Key('FirstChildItem'),\n            icon: BcFunctionalIcons.QR_HEART,\n            onTap: () => _onTapped(context),\n            label: 'Mis c\u00f3digos QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_SEND,\n            onTap: () => _onTapped(context),\n            label: 'Leer c\u00f3digo QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_ADD,\n            onTap: () => _onTapped(context),\n            label: 'Generar c\u00f3digo QR',\n          )\n        ],\n      );"
              }
            ]
          },
          {
            "description": "Menu QR con 1 item",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcQRMenu(\n        children: [\n          BcQRMenuItem(\n            key: const Key('FirstChildItem'),\n            icon: BcFunctionalIcons.QR_HEART,\n            onTap: () => _onTapped(context),\n            label: 'Mis c\u00f3digos QR',\n          ),\n        ],\n      );"
              }
            ]
          },
          {
            "description": "Menu QR sin items",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcQRMenu(\n        onPressed: () => _onTapped(context),\n      );"
              }
            ]
          },
          {
            "description": "Menu QR con m\u00e1ximo n\u00famero de items 6",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcQRMenu(\n        children: [\n          BcQRMenuItem(\n            key: const Key('FirstChildItem'),\n            icon: BcFunctionalIcons.QR_HEART,\n            onTap: () => _onTapped(context),\n            label: 'Mis c\u00f3digos QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_SEND,\n            onTap: () => _onTapped(context),\n            label: 'Leer c\u00f3digo QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_ADD,\n            onTap: () => _onTapped(context),\n            label: 'Generar c\u00f3digo QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_ADD,\n            onTap: () => _onTapped(context),\n            label: 'Generar c\u00f3digo QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_ADD,\n            onTap: () => _onTapped(context),\n            label: 'Generar c\u00f3digo QR',\n          ),\n          BcQRMenuItem(\n            icon: BcFunctionalIcons.QR_ADD,\n            onTap: () => _onTapped(context),\n            label: 'Generar c\u00f3digo QR',\n          ),\n        ],\n      );"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcReloadButton",
        "description": "<p>BcReloadButton es un bot\u00f3n que se presenta en pantalla cuando no se puede cargar la informaci\u00f3n por fallas en los llamados a servicios del back, con el fin de indicar al usuario que puede presionar el bot\u00f3n para intentar cargar de nuevo la informaci\u00f3n.</p>",
        "parameters": [
          {
            "name": "reloadButtonText",
            "type": "String",
            "required": true,
            "description": "<p>Texto que se presenta al usuario en el bot\u00f3n.</p>"
          },
          {
            "name": "onPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funcion a ejecutar cuando el usuario presione el bot\u00f3n.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcReloadButton es un bot\u00f3n que se presenta en pantalla cuando no se puede cargar la informaci\u00f3n por fallas en los llamados a servicios del back, con el fin de indicar al usuario que puede presionar el bot\u00f3n para intentar cargar de nuevo la informaci\u00f3n.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n\n BcReloadButton(\n   reloadButtonText: 'Refrescar informaci\u00f3n',\n     onPressed: (){ **Action ** }\n   ),\n );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Search",
    "description": "El buscador le permite al usuario encontrar informaci\u00f3n espec\u00edfica en un grupo de datos, esto mediante criterios de b\u00fasqueda que contribuyan a un correcto ordenamiento de dicha informaci\u00f3n.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcSearchAdvancedComponent",
            "selector": "bc-search-advanced",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente Contenedor b\u00fasqueda avanzada.</p>\n",
            "rawdescription": "Componente Contenedor b\u00fasqueda avanzada.",
            "type": "component"
          },
          {
            "name": "BcSearchAdvancedItemComponent",
            "selector": "bc-search-item-advanced",
            "inputsClass": [
              {
                "name": "data_value",
                "defaultValue": "''",
                "description": "<p>Data del elemento este se utiliza en caso de que se quieran hacer dos filtros\nen un mismo campo de entrada ejemplo: en Input nombre de producto tambien se quiere filtrar\nel n\u00famero de producto, el data value debe ser igual al nombre de la propiedad del objeto que se va a filtrar,\nobjectArrayItem = [\n          {\n            &#39;nombreProducto&#39;: &#39;Bancolombia ahorros&#39;,\n            &#39;numeroProducto&#39;: &#39;345268&#39;,\n            &#39;entidad&#39;: &quot;Bancolombia S.A&quot;,\n            &#39;cuenta&#39;: &quot;corriente&quot;,\n          },\n      ]</p>\n<p>data_value = &quot;&#39;numeroProducto&#39;&quot;.</p>\n"
              },
              {
                "name": "iconInput",
                "defaultValue": "''",
                "description": "<p>Icono que aparece en el elemento.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "''",
                "description": "<p>Id del elemento.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Nombre  del elemento.</p>\n"
              },
              {
                "name": "textLabel",
                "defaultValue": "''",
                "description": "<p>Texto del elemento.</p>\n"
              },
              {
                "name": "type",
                "defaultValue": "''",
                "description": "<p>Crea una instancia de BcSearchAdvancedItemComponent.</p>\n"
              },
              {
                "name": "typeSelect",
                "defaultValue": "''",
                "description": "<p>Esta entrada de tipo string nos indica el tipo de formato de salida de nuestro valor actual, esta puede ser\nde tipo full para devolver el objeto completo o simple para devolver un \u00fanico valor.</p>\n"
              },
              {
                "name": "valuesSelect",
                "defaultValue": "''",
                "description": "<p>Valores que va a tener el selector.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente para los filtros avanzados.</p>\n",
            "rawdescription": "Componente para los filtros avanzados.",
            "type": "component"
          },
          {
            "name": "BcSearchButtonComponent",
            "selector": "bc-search-button",
            "inputsClass": [
              {
                "name": "iconSearch",
                "defaultValue": "''",
                "description": "<p>Icono que ejecuta la acci\u00f3n de buscar.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente acci\u00f3n buscar.</p>\n",
            "rawdescription": "Componente acci\u00f3n buscar.",
            "type": "component"
          },
          {
            "name": "BcSearchComponent",
            "selector": "bc-search",
            "inputsClass": [
              {
                "name": "items",
                "defaultValue": "[]"
              }
            ],
            "outputsClass": [
              {
                "name": "objFilter",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [],
            "description": "<p>Componente busqueda</p>\n",
            "rawdescription": "Componente busqueda",
            "type": "component"
          },
          {
            "name": "BcSearchContentItemsComponent",
            "selector": "bc-search-content-items",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente contenedor de items para el buscador.</p>\n",
            "rawdescription": "Componente contenedor de items para el buscador.",
            "type": "component"
          },
          {
            "name": "BcSearchLeftComponent",
            "selector": "bc-search-left",
            "inputsClass": [
              {
                "name": "data_value",
                "defaultValue": "''",
                "description": "<p>Data del elemento este se utiliza en caso de que se quieran hacer dos filtros\nen un mismo campo de entrada ejemplo: en Input nombre de producto tambien se quiere filtrar\nel n\u00famero de producto, el data value debe ser igual al nombre de la propiedad del objeto que se va a filtrar,\nobjectArrayItem = [\n          {\n            &#39;nombreProducto&#39;: &#39;Bancolombia ahorros&#39;,\n            &#39;numeroProducto&#39;: &#39;345268&#39;,\n            &#39;entidad&#39;: &quot;Bancolombia S.A&quot;,\n            &#39;cuenta&#39;: &quot;corriente&quot;,\n          },\n      ]</p>\n<p>data_value = &quot;&#39;numeroProducto&#39;&quot;.</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "''",
                "description": "<p>Id del elemento</p>\n"
              },
              {
                "name": "inputIcon",
                "defaultValue": "''",
                "description": "<p>Crea una instacia de BcSearchLeftComponent.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Name del elemento</p>\n"
              },
              {
                "name": "txtPlacheholder",
                "defaultValue": "''",
                "description": "<p>Placeholder input.</p>\n"
              },
              {
                "name": "type",
                "defaultValue": "''",
                "description": "<p>Tipo de input ejemplo: text,tel... </p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Comoponente para el logo izquierdo del header.</p>\n",
            "rawdescription": "Comoponente para el logo izquierdo del header.",
            "type": "component"
          },
          {
            "name": "BcSearchResultFilterComponent",
            "selector": "bc-search-result-filter",
            "inputsClass": [
              {
                "name": "imageResultNull",
                "defaultValue": "''",
                "description": "<p>Imagen del elemento cuando no encuentra resultados.</p>\n"
              },
              {
                "name": "itemsli",
                "description": "<p>Items para los li cuando no se encuentran resultados.</p>\n",
                "type": "any[]"
              },
              {
                "name": "labelResultNull",
                "defaultValue": "''",
                "description": "<p>texto label elemento</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente para el resultado de los filtros.</p>\n",
            "rawdescription": "Componente para el resultado de los filtros.",
            "type": "component"
          },
          {
            "name": "BcSearchRightComponent",
            "selector": "bc-search-right",
            "inputsClass": [
              {
                "name": "label",
                "defaultValue": "''",
                "description": "<p>Crea una instacia de BcSearchRightComponent.</p>\n"
              },
              {
                "name": "name",
                "defaultValue": "''",
                "description": "<p>Name del elemento</p>\n"
              },
              {
                "name": "value",
                "defaultValue": "''",
                "description": "<p>value del elemento</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Comoponente para el logo izquierdo del header.</p>\n",
            "rawdescription": "Comoponente para el logo izquierdo del header.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Implementacion",
            "code": {
              "html": "\n              <bc-search [items]=\"objectArrayItem\" (objFilter)=\"printData($event)\">\n                <bc-search-content-items>\n                  <bc-search-left inputIcon=\"cash\" txtPlacheholder=\"Nombre producto\" type=\"text\" name=\"nombreProducto\"\n                    id=\"pruebaText\">\n                  </bc-search-left>\n                  <bc-search-left inputIcon=\"cash\" txtPlacheholder=\"Numero Producto\" type=\"text\" name=\"numeroProducto\"\n                    id=\"pruebaText2\">\n                  </bc-search-left>\n\n                  <bc-search-button iconSearch=\"search\"></bc-search-button>\n\n                  <bc-search-advanced>\n                    <bc-search-item-advanced [iconInput]=\"'calendar'\" [type]=\"'input'\" id=\"prueba\" name=\"entidad\"\n                      [textLabel]=\"'entidad'\">\n                    </bc-search-item-advanced>\n                  </bc-search-advanced>\n\n                  <bc-search-right label=\"cuentas de ahorro\" name=\"cuenta\" value=\"ahorro\">\n                  </bc-search-right>\n\n                  <bc-search-right label=\"cuentas corriente\" name=\"cuenta\" value=\"corriente\">\n                  </bc-search-right>\n                </bc-search-content-items>\n\n                <bc-search-result-filter [imageResultNull]=\"'/assets/icons/pictogramas/search.svg'\" [itemsli]=\"arrResultNull\"\n                  [labelResultNull]=\"'Texto enviado desde el componente'\">\n                </bc-search-result-filter>\n              </bc-search>\n            ",
              "script": "\n              objectArrayItem = [\n                {\n                  'nombreProducto': 'Bancolombia ahorros',\n                  'numeroProducto': '345268',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"corriente\"\n                },\n                {\n                  'nombreProducto': 'Cuenta pago',\n                  'numeroProducto': '023654',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"ahorro\"\n                },\n                {\n                  'nombreProducto': 'Bancolombia ahorros',\n                  'numeroProducto': '7563265',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"corriente\"\n                }\n              ];\n            ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "clearSearch",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Limpia los resultados de la b\u00fasqueda y resetea los inputs.</p>\n"
          },
          {
            "name": "dataSearch",
            "args": [
              {
                "name": "user",
                "type": ""
              },
              {
                "name": "filter",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "boolean",
            "typeParameters": [],
            "description": "<p>Realiza la b\u00fasqueda de los datos a partir de los filtros y verifica si hay o no resultados.</p>\n"
          },
          {
            "name": "inputObjectSearch",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Busca los input y registra el evento click, asociando la funci\u00f3n searchObject en cada uno de ellos.</p>\n"
          },
          {
            "name": "searchClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Configura evento click del bot\u00f3n de b\u00fasqueda.</p>\n"
          },
          {
            "name": "searchDropDown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona el dropdown y registra el evento click que activa/desactiva la b\u00fasqueda.</p>\n"
          },
          {
            "name": "searchInputs",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>B\u00fasca los inputs mediante la selecci\u00f3n de los div con la clase input-select.</p>\n"
          },
          {
            "name": "searchObject",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Busca los elementos input y lee sus estados para obtener los par\u00e1metros de la b\u00fasqueda.</p>\n"
          },
          {
            "name": "setItems",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showQuantityItems",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Genera el html para mostrar los resultados de la b\u00fasqueda.</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Implementacion",
            "code": {
              "html": "\n              <div class=\"bc-col-xl-12 bc-col-lg-12 bc-col-md-6 bc-col-sm-12 bc-col-xs-10\">\n                  <div class=\"bc-search\" id=\"searchId\">\n                        <div class=\"bc-search-content\" >\n                            <div class=\"bc-search-input\">\n                                <div class=\"bc-form-field\"><em class=\"bc-icon\">cash</em><input class=\"bc-input\" id=\"id-01\" required=\"\" name=\"nombreProducto\" type=\"text\" value=\"\" /><label for=\"id-01\">Nombre de producto</label></div>\n                            </div>\n                            <div class=\"bc-search-input\">\n                                <div class=\"bc-form-field\"><em class=\"bc-icon\">calendar</em><input class=\"bc-input\" id=\"id-02\" required=\"\" name=\"numeroProducto\" type=\"text\" value=\"\" /><label for=\"id-02\">N\u00famero de producto</label></div>\n                            </div>\n                            <div class=\"bc-search-button\"><em class=\"bc-icon\">search</em></div>\n                            <div class=\"bc-search-button-expanded\"><em class=\"bc-icon\">arrow2-down </em></div>\n                            <div class=\"bc-content-advanced-search\">\n                                <h5>B\u00fasqueda avanzada</h5>\n                                <div class=\"content-form-search\">\n                                    <div class=\"bc-input-select\" id=\"selectInput\" error=\"error\"><input class=\"bc-input\" aria-label=\"A\" id=\"idSelect\" required=\"\" name=\"cuenta\" type=\"text\" value=\"\" /><em class=\"bc-input-select-toggle\" aria-controls=\"id-content\">arrow2-down</em><label for=\"idSelect\">Cuenta</label>\n                                        <ul class=\"bc-input-select-content\" id=\"id-content\">\n                                            <li class=\"bc-input-select-item\"><span>ahorro</span></li>\n                                            <li class=\"bc-input-select-item\"><span>corriente</span></li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"bc-search-input\">\n                                        <div class=\"bc-form-field\"><em class=\"bc-icon\">calendar</em><input class=\"bc-input\" id=\"id-02\" required=\"\" name=\"entidad\" type=\"text\" value=\"\" /><label for=\"id-02\">Entidad</label></div>\n                                    </div>\n                                </div>\n                                <div class=\"bc-search-button\"><button class=\"bc-button-primary bc-button-small\" aria-label=\"Boton\" bc-button=\"\" disabled=\"\" sizebutton=\"small\" role=\"button\" tabindex=\"0\">Buscar</button></div>\n                            </div>\n                        </div>\n                        <div class=\"bc-col-xl-12 bc-col-lg-12 bc-col-md-12 bc-col-sm-12 bc-col-xs-12\">\n                            <div class=\"bc-search-result\">\n                                <div class=\"bc-content-show-result\"></div>\n                                <div class=\"bc-search-content-clear\"><span class=\"bc-search-clear\">Limpiar b\u00fasqueda</span></div>\n                            </div>\n                        </div>\n                        <div class=\"bc-col-xl-12 bc-col-lg-12 bc-col-md-12 bc-col-sm-12 bc-col-xs-12\">\n                            <div class=\"bc-search-result-null\">\n                                <div><img class=\"bc-logo--sm\" alt=\"iconMenu\" src=\"/assets/icons/pictogramas/search.svg\" /></div>\n                                <div><label>No se han encontrado resultados para su b\u00fasqueda</label>\n                                    <ul>\n                                        <li>Pruebe diferentes palabras claves</li>\n                                        <li>Pruebe con un slo criterio de b\u00fasqueda</li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                  </div>\n              </div>\n\n\n\n            ",
              "script": "\n              const search = new BcSearchBehavior();\n              \n              objectArrayItem = [\n                  {\n                  'nombreProducto': 'Bancolombia ahorros',\n                  'numeroProducto': '345268',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"corriente\"\n                  },\n                  {\n                  'nombreProducto': 'Cuenta pago',\n                  'numeroProducto': '023654',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"ahorro\"\n                  },\n                  {\n                  'nombreProducto': 'Bancolombia ahorros',\n                  'numeroProducto': '7563265',\n                  'entidad': \"Bancolombia S.A\",\n                  'cuenta': \"corriente\"\n                  }\n              ];\n\n              search.setId('searchId');\n              search.setItems(objectArrayItem);\n              search.outputFunction = (data) => {\n              };\n              search.setUp();\n            ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "jsObjt",
            "defaultValue": "{}",
            "type": "object",
            "optional": false,
            "description": ""
          },
          {
            "name": "objectArrayItem",
            "defaultValue": "[]",
            "type": "[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputFunction",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "stringFilters",
            "defaultValue": "''",
            "type": "string",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcSearch",
        "description": "<p>BcSearch como elemento de b\u00fasqueda permite a los usuarios especificar una palabra o una frase para encontrar piezas de contenido relevantes sin el uso de la navegaci\u00f3n. La b\u00fasqueda puede usarse como el medio principal para descubrir contenido, o como un filtro para ayudar al usuario a encontrar contenido.</p>",
        "parameters": [
          {
            "name": "hintText",
            "type": "String",
            "required": true,
            "description": "<p>Texto o place hover que indica la acci\u00f3n.</p>"
          },
          {
            "name": "helperText",
            "type": "String?",
            "required": false,
            "description": "<p>Texto de ayuda que est\u00e1 abajo del input.</p>"
          },
          {
            "name": "labelText",
            "type": "String?",
            "required": false,
            "description": "<p>Texto para indicar titulo del input.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Indica si el input est\u00e1 activo o inactivo.</p>"
          },
          {
            "name": "controller",
            "type": "TextEditingController",
            "required": true,
            "description": "<p>Controlador necesario para el manejo del input.</p>"
          },
          {
            "name": "callback",
            "type": "ValueChanged<String>?",
            "required": false,
            "description": "<p>Funci\u00f3n que retorna la entrada de texto en el campo.</p>"
          },
          {
            "name": "iconPrefix",
            "type": "IconData?",
            "required": false,
            "description": "<p>Icono respectivo para prefijo en el input.</p>"
          },
          {
            "name": "iconSufix",
            "type": "IconData?",
            "required": false,
            "description": "<p>Icono respectivo para sufijo en el input.</p>"
          },
          {
            "name": "focusNode",
            "type": "FocusNode?",
            "required": false,
            "description": "<p>Variable para indicar estado del foco en el input.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Buscador por defecto",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSearch(\n              controller: TextEditingController(),\n              labelText: 'Buscar',\n              hintText: 'Buscar',\n              helperText: 'Help',\n            ),"
              }
            ]
          },
          {
            "description": "Buscador con helptext",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSearch(\n              controller: TextEditingController(),\n              hintText: 'Buscar',\n              helperText: 'Help text',\n              iconPrefix: BcFunctionalIcons.LOCATION,\n              iconSufix: BcFunctionalIcons.ERROR,\n            ),"
              }
            ]
          },
          {
            "description": "Buscador deshabilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcSearch(\n              controller: TextEditingController(),\n              enabled: false,\n              hintText: 'Buscar',\n              helperText: 'Help text',\n            )"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Tabs",
    "description": "Los tabs o pesta\u00f1as permiten la organizaci\u00f3n y facilitan la navegaci\u00f3n de diferentes grupos de contenido que est\u00e9n relacionados dentro de una misma pantalla. Alternando entre las vistas, conjuntos de datos o aspectos funcionales.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcTabComponent",
            "selector": "bc-tab",
            "inputsClass": [
              {
                "name": "label",
                "description": "<p>label del tab</p>\n"
              },
              {
                "name": "labelTemplate",
                "description": "<p>Template del tab</p>\n",
                "type": "TemplateRef<any>"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente tab del componente</p>\n",
            "rawdescription": "Componente tab del componente",
            "type": "component"
          },
          {
            "name": "BcTabsGroupComponent",
            "selector": "bc-tabs-group",
            "inputsClass": [
              {
                "name": "animation",
                "defaultValue": "false",
                "description": "<p>Animaci\u00f3n.</p>\n",
                "type": "boolean"
              },
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "hiddenArrows",
                "defaultValue": "false",
                "description": "<p>Ocultar flechas.</p>\n",
                "type": "boolean"
              },
              {
                "name": "justifyContent",
                "defaultValue": "'start'",
                "description": "<p>Distribucion de los tabs.</p>\n",
                "type": "string"
              },
              {
                "name": "left",
                "defaultValue": "false",
                "description": "<p>Alineaci\u00f3n de las tabs a la izquierda, por defecto esta en false.</p>\n"
              },
              {
                "name": "orientation",
                "description": "<p>Orientaci\u00f3n.</p>\n",
                "type": "string"
              },
              {
                "name": "right",
                "defaultValue": "false",
                "description": "<p>Alineaci\u00f3n de las tabs a la derecha, por defecto esta en false.</p>\n"
              },
              {
                "name": "selectedIndex",
                "description": "<p>Indice.</p>\n",
                "type": "number"
              }
            ],
            "outputsClass": [
              {
                "name": "changeState",
                "defaultValue": "new EventEmitter<number>()",
                "description": "<p>Muestra el valor al cambiar el tab</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "getCurrentIndex",
                "args": [],
                "optional": false,
                "returnType": "number",
                "typeParameters": [],
                "description": "<p>Devuelve el index del tab actual seleccionado</p>\n"
              },
              {
                "name": "initLabel",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Inicializa el arreglo de t\u00edtulos dentro del Tab, ya sea un ngTemplate o un string.</p>\n",
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "onSelectedTab",
                "args": [
                  {
                    "name": "index",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Evento que se ejecuta cuando seleccionan un tab</p>\n"
              },
              {
                "name": "selectIndex",
                "args": [
                  {
                    "name": "index",
                    "type": "number"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Selecciona un tab</p>\n"
              },
              {
                "name": "setStyleClass",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Actualiza la clase padre seg\u00fan la orientaci\u00f3n y el tema del componente.</p>\n",
                "modifierKind": [
                  114
                ]
              },
              {
                "name": "updateState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Permite actualizar el contenido desde un \u00e1mbito externo.</p>\n"
              }
            ],
            "description": "<p>Componente tabs</p>\n",
            "rawdescription": "Componente tabs",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Tabs Horizontales",
            "code": {
              "html": "\n        <bc-tabs-group #myTab (changeState)=\"onChangeTab($event)\" [orientation]='orientation'>\n          <bc-tab [labelTemplate]='tab1'>\n              <ng-template #tab1>\n                  <div class='row'>\n                      <div>\n                          <bc-icon size='sm' aria-hidden='true' aria-label='Tab 1'>cog</bc-icon>\n                      </div>\n                      <div>\n                          <p>Inicial</p>\n                      </div>\n                  </div>\n              </ng-template>\n              <bc-icon bc-logo logoName='logo_nequi' family='productos' size='xs' aria-hidden='true' aria-label='prueba'>\n              </bc-icon>\n              <bc-icon bc-logo logoName='isotipo' family='Bancolombia' size='xs' aria-hidden='true' aria-label='prueba'>\n              </bc-icon>\n          </bc-tab>\n          <bc-tab [labelTemplate]='tab2'>\n              <ng-template #tab2>\n                  <bc-icon size='sm' aria-hidden='true' aria-label='Tab 2'>heart</bc-icon>\n              </ng-template>\n              <bc-loader speedLoader='2' sizeLoader='Puffy'>\n              </bc-loader>\n          </bc-tab>\n          <bc-tab label='Tab' [labelTemplate]='tab3'>\n              <ng-template #tab3>\n                  <div>Tab</div>\n              </ng-template>\n              <button bc-button-icon>\n                  <bc-icon size='lg' aria-hidden='true' aria-label='Tab 2'>\n                      comment\n                  </bc-icon>\n              </button>\n          </bc-tab>\n          <bc-tab [labelTemplate]='tab4'>\n              <ng-template #tab4>\n                  <p>Other extra large tab </p>\n              </ng-template>\n              <div class='row'>\n                  <div class='col-12'>\n                      <bc-notify class='bc_space_2_top col-xs-6 col-sm-6 col-lg-5 col-xl-4' title='T\u00edtulo'\n                          textDesc='Este cuadro muestra la cantidad m\u00e1xima de texto ' textError='C\u00f3digo error: 724'\n                          textBtn='Acci\u00f3n' typeNotify='error'>\n                      </bc-notify>\n                  </div>\n              </div>\n          </bc-tab>\n          <bc-tab [labelTemplate]='tab5'>\n              <ng-template #tab5>\n                  <div>Other ultra extra large tab\n                  </div>\n              </ng-template>\n\n              <div class='col-sm-6 offset-sm-3 offset-md-4 offset-xl-5'>\n                  <img bc-avatar typeAvatar='Puffy' src='' alt='' class='child'>\n                  <img bc-avatar src='' alt=''>\n                  <img bc-avatar typeAvatar='Small' src='' alt=''>\n              </div>\n          </bc-tab>\n      </bc-tabs-group>\n        ",
              "script": "\n        onChangeTab(ev){ \n        }\n        ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addListenersArrows",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "callBackTabSelected",
            "args": [
              {
                "name": "functionCallback",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "configureTabsWidth",
            "args": [
              {
                "name": "justifyContent",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getCurrentIndexSelected",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "getWidthAllTabs",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "initTabsGroup",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "onResizeFunction",
            "args": [
              {
                "name": "innerWidth",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "positionTabs",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "selectTab",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toggleNav",
            "args": [
              {
                "name": "tabsArrowButtons",
                "type": "Element"
              },
              {
                "name": "innerWidth",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Tabs horizontales",
            "code": {
              "html": "\n          <div class=\"bc-tabs-group\">\n          <div class=\"bc-tab-header\">\n              <div class=\"bc-tab-scroll-left\">\n                  <p>\n                  </p>\n              </div>\n              <div class=\"bc-tab-labels\">\n                  <div class=\"bc-tab-label\">\n                      <p>Tab 1</p>\n                  </div>\n                  <div class=\"bc-tab-label\">\n                      <p> Tab 2</p>\n                  </div>\n                  <div class=\"bc-tab-label\">\n                      <div>\n                          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                              <rect width=\"24\" height=\"24\" stroke=\"blue\" y=\"0\" stroke-width=\"2\" rx=\"10\" ry=\"10\" fill=\"none\">\n                              </rect>\n                          </svg>\n                      </div>\n                  </div>\n                  <div class=\"bc-tab-label\">Uno\n                  </div>\n                  <div class=\"bc-tab-label\">Dep\u00f3sitos</div>\n              </div>\n              <div class=\"bc-tab-scroll-right\">\n                  <p>></p>\n              </div>\n          </div>\n          <div class=\"bc-tab-contents\">\n              <div class=\"bc-tab-content\">\n                  <div><span>Lorem ipsum, dolor sit amet\n                          consectetur adipisicing elit. Aspernatur numquam\n                          excepturi commodi similique neque ab dolor quis\n                          porro animi, ipsum voluptas quae,\n                          necessitatibus nulla assumenda quia voluptatum, eveniet corrupti\n                          id!</span></div>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Hellow world</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Insidius</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Ramdom\n                      Content</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Cogita ergo sum</label>\n              </div>\n          </div>\n          </div>\n        ",
              "script": "\n        const tabs = new BcTabsGroupBehavior();\n        tabs.setElement(id);\n        tabs.changeState = (param) => items(param);\n        tabs.setUp();\n\n        tabs.callBackTabSelected(function(index){\n            const currentIndex = tabs.getCurrentIndexSelected()\n        })",
              "language": "js"
            }
          },
          {
            "description": "Tabs Verticales",
            "code": {
              "html": "\n        <div class=\"bc-tabs-group-vertical\">\n          <div class=\"bc-tab-labels\">\n              <div class=\"bc-tab-label-active\">\n                  <p>Tab 1</p>\n              </div>\n              <div class=\"bc-tab-label\">\n                  <p> Tab 2</p>\n              </div>\n              <div class=\"bc-tab-label\">\n                  <div>\n                      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                          <rect width=\"24\" height=\"24\" stroke=\"blue\" y=\"0\" stroke-width=\"2\" rx=\"10\" ry=\"10\" fill=\"none\">\n                          </rect>\n                      </svg>\n                      <p>Home</p>\n                  </div>\n              </div>\n              <div class=\"bc-tab-label\">Uno</div>\n              <div class=\"bc-tab-label\">\n                  Dep\u00f3sitos</div>\n          </div>\n          <div class=\"bc-tab-contents\">\n              <div class=\"bc-tab-content-active\">\n                  <p>Lorem\n                      ipsum, dolor sit amet consectetur adipisicing elit. Aspernatur numquam excepturi\n                      commodi similique\n                      neque ab dolor quis porro animi, ipsum voluptas quae, necessitatibus nulla\n                      assumenda quia voluptatum,\n                      eveniet corrupti id!</p>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Hellow world</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Insidius</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Ramdom Content</label>\n              </div>\n              <div class=\"bc-tab-content\">\n                  <label>Cogita ergo sum</label>\n              </div>\n          </div>\n      </div>\n\n        ",
              "script": "const tabs = new BcTabsGroupBehavior();\n        tabs.setElement(id);\n        tabs.changeState = (param) => items(param);\n        tabs.setUp();\n\n        tabs.callBackTabSelected(function(index){\n            const currentIndex = tabs.getCurrentIndexSelected()\n        })",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "base",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "currentTabsSelected",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "firsLoad",
            "defaultValue": "true",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "justifycontent",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "left",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "maxWidth",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "onSelectTab",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "orientation",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "scrollBase",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabBody",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabHeader",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabHeaderMargin",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabHeaderStyle",
            "type": "CSSStyleDeclaration",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabsArrowButtons",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabsContainer",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabScrollPosition",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabsLength",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "tabsPane",
            "type": "NodeListOf<Element>",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcTab",
        "description": "<p>BcTab es un patr\u00f3n com\u00fan de dise\u00f1o que permite una f\u00e1cil navegaci\u00f3n entre pantallas.</p>",
        "parameters": [
          {
            "name": "text",
            "type": "String?",
            "required": false,
            "description": "<p>Texto a mostrar en el tab.</p>"
          },
          {
            "name": "icon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Icono a mostrar en el tab.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "TabBar Scrollable",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcTabBar(\n          isScrollable: true,\n          tabs: const <BcTab>[\n            BcTab(\n              text: 'Tab 1',\n              icon: BcFunctionalIcons.PACKAGE,\n            ),\n            BcTab(\n              text: 'Tab 2',\n              icon: BcFunctionalIcons.SUCCESSFUL,\n            ),\n            BcTab(\n              text: 'Tab 3',\n              icon: BcFunctionalIcons.SUCCESSFUL,\n            ),\n            BcTab(\n              text: 'Tab 4',\n              icon: BcFunctionalIcons.SMARTPHONE,\n            ),\n          ],\n          tabBarView: [\n            BcBtnComponent(scrollController),\n            BcCheckboxComponent(),\n            BcRadioComponent(scrollController),\n            BcSliderComponent(scrollController)\n          ],\n        ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "Tooltip",
    "description": "Los tooltips son mensajes informativos que aparecen cuando el usuario enfoca, toca o se desplaza sobre un elemento. Contienen un breve texto de ayuda sobre la funci\u00f3n o significado de un explicaci\u00f3n contextual sobre el mismo.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [],
        "directives": [
          {
            "name": "BcTooltipDirective",
            "type": "directive",
            "description": "<p>Componente tooltip</p>\n",
            "selector": "[bc-tooltip]",
            "inputsClass": [
              {
                "name": "bcTooltipButtonText",
                "defaultValue": "undefined",
                "description": "<p>Texto del bot\u00f3n.</p>\n"
              },
              {
                "name": "bcTooltipParentElement",
                "defaultValue": "undefined",
                "description": "<p>Padre del tooltip\npara controlar el scroll</p>\n"
              },
              {
                "name": "bcTooltipPosition",
                "defaultValue": "'top'",
                "description": "<p>Posici\u00f3n del tooltip\ntop | right | bottom | left.</p>\n"
              },
              {
                "name": "bcTooltipText",
                "defaultValue": "'Text content'",
                "description": "<p>Texto que esta en el contenedor del tooltip.</p>\n"
              },
              {
                "name": "bcTooltipTitle",
                "description": "<p>T\u00edtulo del tooltip.</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": []
          }
        ],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipTitle=\"T\u00edtulo\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Text",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipText=\"Text\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Top",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipPosition=\"top\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Right",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipPosition=\"right\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Bottom",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipPosition=\"bottom\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Left",
            "code": {
              "html": "\n        <i class=\"bc-icon\" bc-tooltip bcTooltipPosition=\"left\">info-circle</i>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Con Boton",
            "code": {
              "html": "\n        <i id=\"bc-tooltip-with-button\" class=\"bc-icon bc-tooltip\" bc-tooltip [bcTooltipPosition]=\"'top'\" [bcTooltipTitle]=\"'Titulo'\" [bcTooltipText]=\"'Texto de prueba'\" [bcTooltipButtonText]=\"'Aceptar'\" bcTooltipParentElement=\"bc-content\">info-circle</i>\n        ",
              "script": " \n        const tooltip = new BcTooltipBehavior();\n        tooltip.setId(\"bc-tooltip-with-button\");\n        tooltip.setUp();\n        tooltip.showTooltip();\n        tooltip.buttonClick(()=> {\n        })",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "bottomTooltip",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Posiciona el Tooltip abajo</p>\n"
          },
          {
            "name": "buildView",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "buttonClick",
            "args": [
              {
                "name": "callback",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega la funcion callback\nque se ejecutara al presionar el boton</p>\n"
          },
          {
            "name": "centerToTarget",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "isBeside",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "{ tooltip: number; arrow: number; }",
            "typeParameters": [],
            "description": "<p>Centra el Tooltip al target</p>\n"
          },
          {
            "name": "changeArrowClass",
            "args": [
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              },
              {
                "name": "position",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>cambia el dise\u00f1o de la flecha que se\u00f1ala al elemento que contiene el tooltip, (top, bottom, right, left)</p>\n"
          },
          {
            "name": "createElement",
            "args": [
              {
                "name": "tag",
                "type": ""
              },
              {
                "name": "tagAttribute",
                "type": ""
              },
              {
                "name": "tagAttributeValue",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Permite crear un elemento con atributos</p>\n"
          },
          {
            "name": "createElementWithText",
            "args": [
              {
                "name": "tag",
                "type": ""
              },
              {
                "name": "text",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Permite crear un elemento con text</p>\n"
          },
          {
            "name": "fadeIn",
            "args": [
              {
                "name": "elementFocusable",
                "type": ""
              },
              {
                "name": "eventName",
                "type": ""
              },
              {
                "name": "tooltip",
                "type": ""
              },
              {
                "name": "options",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": [],
            "description": "<p>Muestra el Tooltip en la pantalla.</p>\n"
          },
          {
            "name": "fadeOut",
            "args": [
              {
                "name": "elementFocusable",
                "type": ""
              },
              {
                "name": "eventName",
                "type": ""
              },
              {
                "name": "tooltip",
                "type": ""
              },
              {
                "name": "options",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": [],
            "description": "<p>Desaparece el Tooltip de la pantalla.</p>\n"
          },
          {
            "name": "fixPosXIfElementIsOutScreen",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "{ tooltip: number; arrow: number; }",
            "typeParameters": [],
            "description": "<p>Posiciona los elementos arriba si el tooltip est\u00e1 por fuera de la pantalla (Horizontal)</p>\n"
          },
          {
            "name": "hideTooltip",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "leftTooltip",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Posiciona el Tooltip a la Izquierda</p>\n"
          },
          {
            "name": "offset",
            "args": [
              {
                "name": "el",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "{ top: any; left: any; }",
            "typeParameters": [],
            "description": "<p>Se retorna la posici\u00f3n en X y Y</p>\n"
          },
          {
            "name": "rightTooltip",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Posiciona el Tooltip a la derecha</p>\n"
          },
          {
            "name": "setElementPosition",
            "args": [
              {
                "name": "element",
                "type": "HTMLElement"
              },
              {
                "name": "top",
                "type": "number"
              },
              {
                "name": "left",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Posiciona cualquier elemento que tenga una posici\u00f3n absoluta</p>\n"
          },
          {
            "name": "setPosition",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Evalua la posici\u00f3n que tendr\u00e1 el tooltip</p>\n"
          },
          {
            "name": "showTooltip",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "topTooltip",
            "args": [
              {
                "name": "target",
                "type": "HTMLElement"
              },
              {
                "name": "arrow",
                "type": "HTMLElement"
              },
              {
                "name": "tooltip",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Posiciona el Tooltip arriba</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Tooltip arriba",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipText=\"Texto\" bcTooltipPosition=\"top\">info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip con T\u00edtulo",
            "code": {
              "html": " <i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipTitle=\"T\u00edtulo\" bcTooltipText=\"Texto\" bcTooltipPosition=\"top\">info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip sin propiedades",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip>info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip abajo",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipText=\"Texto\" bcTooltipPosition=\"bottom\">info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip izquierda",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipText=\"Texto\" bcTooltipPosition=\"left\">info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip derecha",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipText=\"Texto\" bcTooltipPosition=\"right\">info-circle</i>",
              "script": "BcTooltipBehavior.setUpAll()",
              "language": "js"
            }
          },
          {
            "description": "Tooltip con boton",
            "code": {
              "html": "<i class=\"bc-icon bc-tooltip\" bc-tooltip bcTooltipText=\"Prueba de contenido\" bcTooltipTitle=\"T\u00edtulo\" bcTooltipPosition=\"bottom\" bcTooltipButtonText=\"Aceptar\" bcTooltipParentElement=\"bc-content\">info-circle</i>",
              "script": "\n        const tooltip = new BcTooltipBehavior();\n        tooltip.setId(\"bc-tooltip-with-button\");\n        tooltip.setUp();\n        tooltip.showTooltip();\n        tooltip.buttonClick(()=> {\n        })",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "arrowElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "buttonClickCallback",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "classNameWithId",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "ID",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              115
            ]
          },
          {
            "name": "margin",
            "defaultValue": "BC_TOOLTIP_EIGHT",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "parentELementClass",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "position",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "tooltipElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcTooltip",
        "description": "<p>BcTooltip son mensajes informativos que aparecen cuando el usuario enfoca, toca o se desplaza sobre un elemento. Contienen un breve texto de ayuda sobre la funci\u00f3n o significado de un elemento, o una explicaci\u00f3n contextual sobre el mismo.</p>",
        "parameters": [
          {
            "name": "title",
            "type": "String?",
            "required": false,
            "description": "<p>T\u00edtulo que lleva el tooltip, si lo tiene se agrega un divisor horizontal.</p>"
          },
          {
            "name": "tooltipDirection",
            "type": "BcTooltipType?",
            "required": false,
            "description": "<p>Direcci\u00f3n en donde aparecer\u00e1 el tooltip, encima, abajo, derecha o izquierda.</p>"
          },
          {
            "name": "message",
            "type": "String",
            "required": true,
            "description": "<p>Mensaje informativo que llevar\u00e1 el tooltip.</p>"
          },
          {
            "name": "parentWidget",
            "type": "Widget",
            "required": true,
            "description": "<p>Direcci\u00f3n en donde aparecer\u00e1 el tooltip, encima, abajo, derecha o izquierda.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Tooltip Arriba",
            "codes": [
              {
                "language": "dart",
                "example": "\n                    BcTooltip(\n                      title: 'T\u00edtulo',\n                      message: 'Attached Widget',\n                      parentWidget: Text('Tooltip arriba'),\n                      tooltipDirection: BcTooltipType.Above,\n                    ),"
              }
            ]
          },
          {
            "description": "Tooltip Abajo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                    BcTooltip(\n                      title: 'T\u00edtulo',\n                      message: 'Attached Widget',\n                      tooltipDirection: BcTooltipType.Below,\n                      parentWidget: Icon(BcFunctionalIcons.ADDRESS_BOOK),\n                    )"
              }
            ]
          },
          {
            "description": "Tooltip Derecha",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcTooltip(\n                  message: 'Attached Widget',\n                  tooltipDirection: BcTooltipType.Right,\n                  parentWidget: Text('Tooltip derecha'),\n                ),"
              }
            ]
          },
          {
            "description": "Tooltip Izquierda",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcTooltip(\n                  message: 'Attached Widget',\n                  tooltipDirection: BcTooltipType.Left,\n                  parentWidget: Text('Tooltip izquierda'),\n                ),"
              }
            ]
          },
          {
            "description": "Tooltip Arriba con titulo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcTooltip(\n                  title: 'T\u00edtulo',\n                  message: 'Attached Widget',\n                  tooltipDirection: BcTooltipType.Above,\n                  parentWidget: Text('Tooltip arriba'),\n                ),"
              }
            ]
          },
          {
            "description": "Tooltip Abajo sin titulo",
            "codes": [
              {
                "language": "dart",
                "example": "\n                BcTooltip(\n                  message: 'Attached Widget',\n                  parentWidget: Text('Tooltip abajo sin t\u00edtulo'),\n                  tooltipDirection: BcTooltipType.Below,\n                ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "ExpansionPanel",
    "description": "El panel muestra informaci\u00f3n resumida verticalmente que revelan u ocultan contenido.",
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcExpansionPanelComponent",
            "selector": "bc-expansion-panel",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "contracted",
                "defaultValue": "new EventEmitter<string>()",
                "description": "<p>Evento que se ejecuta cuando se contrae</p>\n",
                "type": "EventEmitter"
              },
              {
                "name": "expanded",
                "defaultValue": "new EventEmitter<string>()",
                "description": "<p>Evento que se ejecuta cuando se expande</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [],
            "description": "<p>Importa el expansion panel  con los dise\u00f1os de Bancolombia S.A.\nSirve para mostrar peque\u00f1os datos sobre un producto o una transacci\u00f3n.</p>\n",
            "rawdescription": "Importa el expansion panel  con los dise\u00f1os de Bancolombia S.A.\nSirve para mostrar peque\u00f1os datos sobre un producto o una transacci\u00f3n.",
            "type": "component"
          },
          {
            "name": "BcExpansionPanelContentComponent",
            "selector": "bc-expansion-panel-content",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Contenido del expansion panel</p>\n",
            "rawdescription": "Contenido del expansion panel",
            "type": "component"
          },
          {
            "name": "BcExpansionPanelHeaderComponent",
            "selector": "bc-expansion-panel-header",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Header del expansion panel</p>\n",
            "rawdescription": "Header del expansion panel",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Expansion panel",
            "code": {
              "html": "\n        <bc-expansion-panel>\n            <bc-expansion-panel-header>\n                <h6>Header</h6>\n            </bc-expansion-panel-header>\n            <bc-expansion-panel-content>\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type\n                    specimen book.</p>\n            </bc-expansion-panel-content>\n        </bc-expansion-panel>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Expansion panel con error",
            "code": {
              "html": "\n        <bc-expansion-panel>\n            <bc-expansion-panel-header>\n                <h6>Header</h6>\n            </bc-expansion-panel-header>\n            <bc-expansion-panel-content>\n                <div class=\"bc-expansion-panel-error\">\n                    <div class=\"bc-expansion-panel-error-right\">\n                        <h6>No se pudo cargar el contenido del producto.</h6>\n                        <h6 class=\"bc-expansion-panel-try-again\">Volver a intentar</h6>\n                    </div>\n                </div>\n            </bc-expansion-panel-content>\n\n        </bc-expansion-panel>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Expansion panel skeleton header",
            "code": {
              "html": "\n        <bc-expansion-panel>\n            <bc-expansion-panel-header>\n                <div class=\"bc-expansion-panel-row\">\n                    <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                    </div>\n                    <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                    </div>\n                    <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                    </div>\n                    <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                        <div class=\"bc-expansion-panel-skeleton\"></div>\n                    </div>\n                </div>\n            </bc-expansion-panel-header>\n            <bc-expansion-panel-content>\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type\n                    specimen book.</p>\n            </bc-expansion-panel-content>\n\n        </bc-expansion-panel>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Expansion panel skeleton body",
            "code": {
              "html": "\n        <bc-expansion-panel>\n                    <bc-expansion-panel-header>\n                        <h6>Header</h6>\n                    </bc-expansion-panel-header>\n                    <bc-expansion-panel-content>\n                        <div class=\"bc-expansion-panel-row\">\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                        </div>\n                        <div class=\"bc-expansion-panel-row\">\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                        </div>\n                        <div class=\"bc-expansion-panel-row\">\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                            <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                                <div class=\"bc-expansion-panel-skeleton\"></div>\n                            </div>\n                        </div>\n                    </bc-expansion-panel-content>\n\n                </bc-expansion-panel>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>A\u00f1ade los eventos a los elementos</p>\n"
          },
          {
            "name": "contractContent",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Contrae el espansion panel</p>\n"
          },
          {
            "name": "expandContent",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Expande el espansion panel</p>\n"
          },
          {
            "name": "on",
            "args": [
              {
                "name": "eventText",
                "type": ""
              },
              {
                "name": "callback",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Registra los eventos de expandir y/o\ncontraer</p>\n"
          },
          {
            "name": "selectElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona los elementos html</p>\n"
          },
          {
            "name": "setDefaultValues",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>A\u00f1ade valores inciale a los elementos</p>\n"
          },
          {
            "name": "toogleExpandedContent",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Expande o contrae el espansion panel</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Expansion panel",
            "code": {
              "html": "\n        <div class=\"bc-expansion-panel\" id=\"bc-expansion-panel\">\n        <div class=\"bc-expansion-panel-header\">\n            <h6>Header</h6>\n        </div>\n        <div class=\"bc-expansion-panel-content\">\n            <div class=\"bc-expansion-panel-content-wrapper\">\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n                    a type specimen book.</p>\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n                    a type specimen book.</p>\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n                    a type specimen book.</p>\n            </div>\n\n        </div>\n        <div class=\"bc-expansion-panel-footer\">\n            <em aria-hidden=\"true\" class=\"bc-icon bc-xs bc-expansion-footer-icon\">arrow-angle-double-dow</em>\n        </div>\n    </div> ",
              "script": "\n        const bcExpansionPanelBehavior = new BcExpansionPanelBehavior();\n        bcExpansionPanelBehavior.setId('bc-expansion-panel');\n        bcExpansionPanelBehavior.setUp();\n        bcExpansionPanelBehavior.on('expanded', function () {\n        });\n        bcExpansionPanelBehavior.on('contracted', function () {\n        });",
              "language": "js"
            }
          },
          {
            "description": "Expansion panel error",
            "code": {
              "html": "\n                <div class=\"bc-expansion-panel\" id=\"bc-expansion-panel\">\n                <div class=\"bc-expansion-panel-header\">\n                    <h6>Header</h6>\n                </div>\n                <div class=\"bc-expansion-panel-content\">\n                    <div class=\"bc-expansion-panel-content-wrapper\">\n                    <div class=\"bc-expansion-panel-error\">\n                        <div class=\"bc-expansion-panel-error-right\">\n                            <h6>No se pudo cargar el contenido del producto.</h6>\n                            <h6 class=\"bc-expansion-panel-try-again\">Volver a intentar</h6>\n                        </div>\n                    </div>\n                    </div>\n        \n                </div>\n                <div class=\"bc-expansion-panel-footer\">\n                    <em aria-hidden=\"true\" class=\"bc-icon bc-xs bc-expansion-footer-icon\">arrow-angle-double-dow</em>\n                </div>\n            </div>>",
              "script": "const headerData = [\n          {\n              title: \"Titulo\",\n              data: \"Dato\"\n          },\n          {\n              title: \"Titulo\",\n              data: \"Dato\"\n          },\n          {\n              title: \"Titulo\",\n              data: \"Dato\"\n          },\n          {\n              title: \"Titulo\",\n              data: \"Dato\"\n          }\n\n      ]\n      const bcExpansionPanelBehavior = new BcExpansionPanelBehavior();\n      bcExpansionPanelBehavior.setId('bc-expansion-panel');\n      bcExpansionPanelBehavior.setUp();\n\n      bcExpansionPanelBehavior.setHeader(headerData);\n      bcExpansionPanelBehavior.showError();",
              "language": "js"
            }
          },
          {
            "description": "Expansion panel skeleton header",
            "code": {
              "html": "\n                <div class=\"bc-expansion-panel\" id=\"bc-expansion-panel\">\n                    <div class=\"bc-expansion-panel-header\">\n                        <div class=\"bc-expansion-panel-row\">\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                    </div>\n                    </div>\n                    <div class=\"bc-expansion-panel-content\">\n                        <div class=\"bc-expansion-panel-content-wrapper\">\n                            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n                                a type specimen book.</p>\n                        </div>\n            \n                    </div>\n                    <div class=\"bc-expansion-panel-footer\">\n                        <em aria-hidden=\"true\" class=\"bc-icon bc-xs bc-expansion-footer-icon\">arrow-angle-double-dow</em>\n                    </div>\n                </div>",
              "script": "\n      const bcExpansionPanelBehavior = new BcExpansionPanelBehavior();\n      bcExpansionPanelBehavior.setId('bc-expansion-panel');\n      bcExpansionPanelBehavior.setUp();",
              "language": "js"
            }
          },
          {
            "description": "Expansion panel skeleton body",
            "code": {
              "html": "\n                <div class=\"bc-expansion-panel\" id=\"bc-expansion-panel\">\n                    <div class=\"bc-expansion-panel-header\">\n                        <h6>Header</h6>\n                    </div>\n                    <div class=\"bc-expansion-panel-content\">\n                        <div class=\"bc-expansion-panel-content-wrapper\">\n                        <div class=\"bc-expansion-panel-row\">\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                        <div class=\"bc-col-md-3 bc-expansion-panel-column\">\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                            <div class=\"bc-expansion-panel-skeleton\"></div>\n                        </div>\n                    </div>\n                        </div>\n\n                    </div>\n                    <div class=\"bc-expansion-panel-footer\">\n                        <em aria-hidden=\"true\" class=\"bc-icon bc-xs bc-expansion-footer-icon\">arrow-angle-double-dow</em>\n                    </div>\n                </div>",
              "script": "\n                const bcExpansionPanelBehavior = new BcExpansionPanelBehavior();\n                bcExpansionPanelBehavior.setId('bc-expansion-panel');\n                bcExpansionPanelBehavior.setUp();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcCallBacksEvents",
            "defaultValue": "{\r\n        expanded : null,\r\n        contracted: null\r\n    }",
            "type": "object",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelContentElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelContentRowsElement",
            "type": "HTMLElement[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelContentWrapperElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelErrorElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelFooterElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelFooterIconElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelHeaderElement",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcExpansionPanelTrayAgain",
            "type": "HTMLElement",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "nameComponent": "Footer",
    "description": "El footer es un componente transversal que siempre se sit\u00faa en la parte inferior de la p\u00e1gina, este contiene informaci\u00f3n adicional o elementos complementarios al sitio web y a la marca. El contenido del mismo puede poseer m\u00faltiples variaciones dependiendo del canal en el que est\u00e9 siendo utilizado, sin embargo, es importante mantener la estructura y finalidad del componente, por esto siempre se debe mostrar los derechos de autor acompa\u00f1ados de la versi\u00f3n de logotipo correspondiente a la necesidad.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcFooterComponent",
            "selector": "bc-footer",
            "inputsClass": [
              {
                "name": "bgGray",
                "defaultValue": "false",
                "description": "<p>Define el tipo de color de fondo del footersi esta en true cambiara a gris.</p>\n"
              },
              {
                "name": "bgWhite",
                "defaultValue": "false",
                "description": "<p>Boolean que por defecto esta en false y cambia el background del footer a blanco.</p>\n"
              },
              {
                "name": "bottomTextLeftContent",
                "defaultValue": "[]",
                "description": "<p>Array de textos que se muestra en la parte inferior izquierda del footer.</p>\n",
                "type": "Array<string>"
              },
              {
                "name": "bottomTextRighContent",
                "defaultValue": "[]",
                "description": "<p>Array de textos que se muestra en la parte inferior derecha del footer.</p>\n",
                "type": "Array<string>"
              },
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "icon",
                "defaultValue": "'left'",
                "description": "<p>String el cual nos permite alinear el logo de bancolombia a la izquierda( el que se encuentra cerca de los copyright).</p>\n",
                "type": "\"left\" | \"top\""
              },
              {
                "name": "isBancoLogoBottom",
                "defaultValue": "true",
                "description": "<p>Boolean que por defecto esta true y muestra el icono bancolombia en la parte inferior.</p>\n"
              },
              {
                "name": "isVigilaLogoBottom",
                "defaultValue": "true",
                "description": "<p>Boolean que por defecto esta true y muestra el icono vigilado en la parte inferior.</p>\n"
              },
              {
                "name": "logo",
                "defaultValue": "'isotipo-bancolombia'",
                "description": "<p>Define el logo a usar en el footer.</p>\n",
                "type": "string"
              },
              {
                "name": "socialNetBottomRight",
                "defaultValue": "[{ name: '', link: '', isSelf: false }]",
                "description": "<p>Array de objetos para las redes sociales. En name pueden ir facebook,twitter,linkedin,instagram,youtube.</p>\n",
                "type": "ISocialNetBottomRight[]"
              },
              {
                "name": "topLinks",
                "defaultValue": "{\n    alignContent: 'flex-end',\n    links: [\n      {\n        text: '',\n        method: '',\n        link: '',\n        isSelf: false,\n      },\n    ],\n  }",
                "description": "<p>Links con alineacion en el top del footer, los posibles valores de align (alineaci\u00f3n) son &quot;flex-end&quot; | &quot;flex-start&quot; | &quot;center&quot;.</p>\n",
                "type": "ITopLinks"
              },
              {
                "name": "topMethods",
                "defaultValue": "{\n    alignContent: 'flex-end',\n    methods: [\n      {\n        text: '',\n        method: '',\n      },\n    ],\n  }",
                "type": "ITopMethods"
              },
              {
                "name": "topTextContent",
                "defaultValue": "[\n    {\n      title: { text: '', link: '', onlyStyleText: false, isSelf: false },\n      texts: [{ text: '', link: '', isSelf: false }],\n    },\n  ]",
                "description": "<p>Objeto para mostrar los textos de la parte superior del footer.</p>\n",
                "type": "ITopTextContent[]"
              }
            ],
            "outputsClass": [
              {
                "name": "methodCallout",
                "defaultValue": "new EventEmitter<string>()",
                "type": "EventEmitter<string>"
              }
            ],
            "methodsClass": [
              {
                "name": "methodCall",
                "args": [
                  {
                    "name": "method",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Importa el componente footer con los dise\u00f1os de Bancolombia S.A. este componente,\nse utiliza para los pie de p\u00e1gina.</p>\n",
            "rawdescription": "Importa el componente footer con los dise\u00f1os de Bancolombia S.A. este componente,\nse utiliza para los pie de p\u00e1gina.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Footer 1",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Titulo columna 01' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 02' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 03' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 04' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          }]\" [socialNetBottomRight]=\"[\n              { name:'facebook', link:'http://google.com' },\n              { name:'twitter', link:'http://google.com' },\n              { name:'linkedin', link:'http://google.com' },\n              { name:'instagram', link:'http://google.com' },\n              { name:'youtube', link:'http://google.com' }\n          ]\" [topLinks]=\"{\n    alignContent: 'flex-end',\n     links: [\n    {\n      text: 'Lorem 1',  link:'http://google.com', isSelf: true\n    },\n    {\n      text: 'Lorem 2', link:'http://facebook.com'\n    },\n    {\n      text: 'Lorem 3', link:'http://twitter.com'\n    },\n    {\n      text: 'Lorem 4', link:'http://google.com'\n    }\n    ]\n  }\" [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\"\n      [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat, eros',\n      'pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus ','adipiscing, commodo quis,\n      gravida id, est. Sed lectus. Praesent elementum hendrerit ','tortor. Sed semper lorem at felis. Vestibulum volutpat,\n      lacus a ultrices sagittis.']\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 1",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Titulo columna 01' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 02' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 03' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 04' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          }]\" [socialNetBottomRight]=\"[\n              { name:'facebook', link:'http://google.com' },\n              { name:'twitter', link:'http://google.com' },\n              { name:'linkedin', link:'http://google.com' },\n              { name:'instagram', link:'http://google.com' },\n              { name:'youtube', link:'http://google.com' }\n          ]\" [topLinks]=\"{\n    alignContent: 'flex-end',\n     links: [\n    {\n      text: 'Lorem 1',  link:'http://google.com', isSelf: true\n    },\n    {\n      text: 'Lorem 2', link:'http://facebook.com'\n    },\n    {\n      text: 'Lorem 3', link:'http://twitter.com'\n    },\n    {\n      text: 'Lorem 4', link:'http://google.com'\n    }\n    ]\n  }\" [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\"\n      [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat, eros',\n      'pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus ','adipiscing, commodo quis,\n      gravida id, est. Sed lectus. Praesent elementum hendrerit ','tortor. Sed semper lorem at felis.\n      Vestibulum volutpat, lacus a ultrices sagittis.']\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 2",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Sucursal Telef\u00f3nica de Bancolombia en el exterior' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Sucursal Telef\u00f3nica Valores' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          }]\"\n      [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.','Te recomendamos usar los navegadores web Chrome 43 o superior,\n      Safari 8 o superior, Firefox 38 o superior']\"\n      [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\"\n      [isVigilaLogoBottom]=\"false\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 3",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Informaci\u00f3n de seguridad', onlyStyleText: true, link:'http://google.com', isSelf: true }\n          },\n          {\n              title: { text: 'Cont\u00e1ctenos', onlyStyleText: true, link:'http://google.com' }\n          },\n          {\n              title: { text: 'Visitanos', onlyStyleText: true, link:'http://google.com' }\n          }]\n          \" [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.']\"\n      [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 4",
            "code": {
              "html": "\n        <bc-footer [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.']\" [socialNetBottomRight]=\"[\n          { name:'facebook', link:'http://google.com' },\n          { name:'twitter', link:'http://google.com' },\n          { name:'linkedin', link:'http://google.com' },\n          { name:'instagram', link:'http://google.com' },\n          { name:'youtube', link:'http://google.com' }\n      ]\">\n</bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 5",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Informaci\u00f3n de seguridad', onlyStyleText: true, link:'http://google.com' }\n          },\n          {\n              title: { text: 'Cont\u00e1ctenos', onlyStyleText: true, link:'http://google.com' }\n          },\n          {\n              title: { text: 'Visitanos', onlyStyleText: true, link:'http://google.com' }\n          }]\n          \" [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.']\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 6",
            "code": {
              "html": "\n        <bc-footer [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.']\"\n          [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\"\n          [isVigilaLogoBottom]=\"false\">\n        </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 7",
            "code": {
              "html": "\n        <bc-footer [topTextContent]=\"[\n          {\n              title: { text: 'Titulo columna 01' },\n              texts: [ { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' }, { text: 'Lorem ipsum' } ]\n          },\n          {\n              title: { text: 'Titulo columna 02' },\n              texts: [ { text: 'H\u00e1bitat' }, { text: 'Movilidad' } ]\n          },\n          {\n              title: { text: 'Titulo columna 03' },\n              texts: [ { text: 'P\u00f3nte en cont\u00e1cto con nosotros', link:'http://contacto.com', isSelf:true },\n              { text: 'Tel\u00e9fono 018000 09 12345' }, { text: 'Portal de ayuda', link:'http://google.com' } ]\n          }]\" [isVigilaLogoBottom]=\"false\" [isBancoLogoBottom]=\"false\">\n    </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 8",
            "code": {
              "html": "\n        <bc-footer\n          [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n          eros','pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus ','adipiscing, commodo quis, gravida id, est. Sed lectus.\n          [socialNetBottomRight]=\"[\n                  { name:'facebook', link:'http://google.com' },\n                  { name:'twitter', link:'http://google.com' },\n                  { name:'linkedin', link:'http://google.com' },\n                  { name:'instagram', link:'http://google.com' },\n                  { name:'youtube', link:'http://google.com', isSelf:true }\n              ]\">\n        </bc-footer>",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Footer 9",
            "code": {
              "html": "\n        <bc-footer [topLinks]=\"{\n          alignContent: 'flex-end',\n           links: [\n          {\n            text: 'Lorem 1',  link:'http://google.com', isSelf: true\n          },\n          {\n            text: 'Lorem 2', link:'http://facebook.com'\n          },\n          {\n            text: 'Lorem 3', link:'http://twitter.com'\n          },\n          {\n            text: 'Lorem 4', link:'http://google.com'\n          }\n          ]\n        }\" [bottomTextLeftContent]=\"['Copyright \u00a9 2020 Grupo Bancolombia.']\"\n          [bottomTextRighContent]=\"['Direcci\u00f3n IP 190.144.71.250','\u00daltima visita Jueves 31 de Julio de 2019 10:06 a.m']\"\n          [isVigilaLogoBottom]=\"false\">\n        </bc-footer>",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addAcceLink",
            "args": [
              {
                "name": "href",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Metodo para agregar las etiquetas de accesibilidad a los links</p>\n"
          },
          {
            "name": "addAcceLinks",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega accesibilidad a los links del footer</p>\n"
          },
          {
            "name": "addAccesibility",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega accesibilidad a los links y redes sociales</p>\n"
          },
          {
            "name": "addAcceSocialNet",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega accesibilidad a las redes sociales</p>\n"
          },
          {
            "name": "addAccordion",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Implementa las acordiones</p>\n"
          },
          {
            "name": "addFocusableLink",
            "args": [
              {
                "name": "elem",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agregar addFocusable al elemento html</p>\n"
          },
          {
            "name": "createAccordionContentELement",
            "args": [
              {
                "name": "items",
                "type": "Element[]"
              }
            ],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "description": "<p>Crea el cuerpo o contenido de la acordion</p>\n"
          },
          {
            "name": "createAccordionELement",
            "args": [],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "description": "<p>Crea una acordion</p>\n"
          },
          {
            "name": "createAccordionGroupELement",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "description": "<p>Crea un grupo de acordiones</p>\n"
          },
          {
            "name": "createAccordionHeaderELement",
            "args": [
              {
                "name": "titleHeader",
                "type": "Element"
              },
              {
                "name": "numberItems",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "description": "<p>Crea la cabecera de una acordion</p>\n"
          },
          {
            "name": "getFooterTopELements",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Obtiene todos los bc-footer-containers</p>\n"
          },
          {
            "name": "selectElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona los elementos html</p>\n"
          },
          {
            "name": "validateBreakPointMobile",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Valida que la pantalla sea de tama\u00f1o mobil\nAplica estilos de acordion</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Footer 1",
            "code": {
              "html": "\n          <div class=\"bc-footer\" id=\"footerComponent\">\n          <div class=\"bc-container\">\n              <div class=\"bc-footer-top bc-row\">\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>\n                              <a href=\"https://google.com\" target=\"_blank\">Titulo columna 01</a>\n                          </h6>\n                      </div>\n                      <div class=\"bc-footer-top-container-p\">\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                      </div>\n                      <div class=\"bc-footer-top-container-divisor\"></div>\n                  </div>\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>Titulo columna 02</h6>\n                      </div>\n                      <div class=\"bc-footer-top-container-p\">\n                          <p>\n                              <a href=\"https://google.com\" target=\"_blank\">Lorem ipsum</a>\n                          </p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                      </div>\n                  </div>\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>Titulo columna 03</h6>\n                      </div>\n                      <div class=\"bc-footer-top-container-p\">\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                      </div>\n                      <div class=\"bc-footer-top-container-divisor\"></div>\n                  </div>\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>Titulo columna 04</h6>\n                      </div>\n                      <div class=\"bc-footer-top-container-p\">\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                          <p>Lorem ipsum</p>\n                      </div>\n                      <div class=\"bc-footer-top-container-divisor\"></div>\n\n                  </div>\n              </div>\n          </div>\n          <div\n              class=\"bc-footer-top-links bc-flex bc-justify-content-md-flex-end bc-direction-xs-column bc-margin-top-3\">\n              <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\" href=\"http://google.com\"\n                      target=\"\" tabindex=\"0\" aria-label=\"Ir a Lorem 1\">Lorem 1</a></div>\n              <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\"\n                      href=\"http://facebook.com\" target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 2\">Lorem\n                      2</a></div>\n              <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\"\n                      href=\"http://twitter.com\" target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 3\">Lorem\n                      3</a></div>\n              <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\" href=\"http://google.com\"\n                      target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 4\">Lorem 4</a></div>\n          </div>\n          <div class=\"bc-footer-divisor\"></div>\n          <div class=\"bc-container\">\n              <div class=\"bc-footer-bottom bc-row\">\n                  <div class=\"bc-footer-bottom-left bc-col-sm-8\">\n                      <div class=\"bc-footer-bottom-left-icon\"><img\n                              src=\"/assets/icons/logo/Bancolombia/isotipo-negro-2.svg\"\n                              alt=\"Bancolombia isotipo negro\" /></div>\n                      <div class=\"bc-footer-bottom-left-side bc-col-sm-11\">\n                          <div class=\"bc-footer-bottom-left-content-logo\">\n                              <img class=\"bc-footer-bottom-horizontal-logo\"\n                                  src=\"/assets/icons/logo/grupo_Bancolombia/logo_horizontal_negro.svg\"\n                                  alt=\"Logo horizontal Bancolombia\" />\n                          </div>\n                          <p>Copyright &copy; 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n                              eros\n                          </p>\n                          <p>pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus\n                          </p>\n                          <p>adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum\n                              hendrerit\n                          </p>\n                          <p>tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices\n                              sagittis.\n                          </p>\n                          <div class=\"bc-footer-bottom-left-side-vigilant\"><img\n                                  class=\"footer-bottom-horizontal logo\"\n                                  src=\"/assets/icons/logo/Bancolombia/vigilado-negro.svg\"\n                                  alt=\"Vigilado superintendencia financiera de Colombia\" /></div>\n                      </div>\n                  </div>\n                  <div class=\"bc-footer-bottom-right bc-col-sm-4\">\n                      <div class=\"bc-footer-bottom-right-network-icons\"><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a facebook\"><i\n                                  class=\"bc-icon bc-md\">facebook</i></a><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a twitter\"><i\n                                  class=\"bc-icon bc-md\">twitter</i></a>\n                          <a href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a linkedin\"><i class=\"bc-icon bc-md\">linkedin</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a instagram\"><i class=\"bc-icon bc-md\">instagram</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a youtube\"><i class=\"bc-icon bc-md\">youtube</i></a>\n                      </div>\n                      <div class=\"bc-footer-bottom-right-text\">\n                          <p>Direcci&oacute;n IP 190.144.71.250</p>\n                          <p>&Uacute;ltima visita Jueves 31 de Julio de 2019 10:06 a.m</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n          ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Footer 2",
            "code": {
              "html": "\n          <div class=\"bc-footer\" id=\"footerComponent\">\n                    <div class=\"bc-container\">\n                        <div class=\"bc-footer-top bc-row\">\n                            <div class=\"bc-footer-top-container\">\n                                <div class=\"bc-footer-top-container-t\">\n                                    <h6>\n                                        Sucursal Telef\u00f3nica de Bancolombia en el exterior\n                                    </h6>\n                                </div>\n                                <div class=\"bc-footer-top-container-p\">\n                                    <p>Lorem ipsum</p>\n                                    <p>Lorem ipsum</p>\n                                    <p>Lorem ipsum</p>\n                                    <p>Lorem ipsum</p>\n                                </div>\n                                <div class=\"bc-footer-top-container-divisor\"></div>\n                            </div>\n                            <div class=\"bc-footer-top-container\">\n                                <div class=\"bc-footer-top-container-t\">\n                                    <h6>Sucursal Telef\u00f3nica Valores</h6>\n                                </div>\n                                <div class=\"bc-footer-top-container-p\">\n                                    <p>\n                                        <a href=\"https://google.com\" target=\"_blank\">Lorem ipsum</a>\n                                    </p>\n                                    <p>Lorem ipsum</p>\n                                    <p>Lorem ipsum</p>\n                                    <p>Lorem ipsum</p>\n                                </div>\n                            </div>\n                           \n                        </div>\n                    </div>\n                    <div\n                        class=\"bc-footer-top-links bc-flex bc-justify-content-md-flex-end bc-direction-xs-column bc-margin-top-3\">\n                        <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\" href=\"http://google.com\"\n                                target=\"\" tabindex=\"0\" aria-label=\"Ir a Lorem 1\">Lorem 1</a></div>\n                        <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\"\n                                href=\"http://facebook.com\" target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 2\">Lorem\n                                2</a></div>\n                        <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\"\n                                href=\"http://twitter.com\" target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 3\">Lorem\n                                3</a></div>\n                        <div class=\"bc-footer-top-links-ca\"><a class=\"bc-footer-top-links-ca-a\" href=\"http://google.com\"\n                                target=\"blank\" tabindex=\"0\" aria-label=\"Ir a Lorem 4\">Lorem 4</a></div>\n                    </div>\n                    <div class=\"bc-footer-divisor\"></div>\n                    <div class=\"bc-container\">\n                        <div class=\"bc-footer-bottom bc-row\">\n                            <div class=\"bc-footer-bottom-left bc-col-sm-8\">\n                                <div class=\"bc-footer-bottom-left-icon\"><img\n                                        src=\"/assets/icons/logo/Bancolombia/isotipo-negro-2.svg\"\n                                        alt=\"Bancolombia isotipo negro\" /></div>\n                                <div class=\"bc-footer-bottom-left-side bc-col-sm-11\">\n                                    <div class=\"bc-footer-bottom-left-content-logo\">\n                                        <img class=\"bc-footer-bottom-horizontal-logo\"\n                                            src=\"/assets/icons/logo/grupo_Bancolombia/logo_horizontal_negro.svg\"\n                                            alt=\"Logo horizontal Bancolombia\" />\n                                    </div>\n                                    <p>Copyright &copy; 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n                                        eros\n                                    </p>\n                                    <p>pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus\n                                    </p>\n                                    <p>adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum\n                                        hendrerit\n                                    </p>\n                                    <p>tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices\n                                        sagittis.\n                                    </p>\n                                    <div class=\"bc-footer-bottom-left-side-vigilant\"><img\n                                            class=\"footer-bottom-horizontal logo\"\n                                            src=\"/assets/icons/logo/Bancolombia/vigilado-negro.svg\"\n                                            alt=\"Vigilado superintendencia financiera de Colombia\" /></div>\n                                </div>\n                            </div>\n                            <div class=\"bc-footer-bottom-right bc-col-sm-4\">\n                                <div class=\"bc-footer-bottom-right-network-icons\"><a href=\"http://google.com\"\n                                        target=\"blank\" tabindex=\"0\" aria-label=\"Ir a facebook\"><i\n                                            class=\"bc-icon bc-md\">facebook</i></a><a href=\"http://google.com\"\n                                        target=\"blank\" tabindex=\"0\" aria-label=\"Ir a twitter\"><i\n                                            class=\"bc-icon bc-md\">twitter</i></a>\n                                    <a href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a linkedin\"><i class=\"bc-icon bc-md\">linkedin</i></a><a\n                                        href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a instagram\"><i class=\"bc-icon bc-md\">instagram</i></a><a\n                                        href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a youtube\"><i class=\"bc-icon bc-md\">youtube</i></a>\n                                </div>\n                                <div class=\"bc-footer-bottom-right-text\">\n                                    <p>Direcci&oacute;n IP 190.144.71.250</p>\n                                    <p>&Uacute;ltima visita Jueves 31 de Julio de 2019 10:06 a.m</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n          ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Footer 3",
            "code": {
              "html": "\n          <div class=\"bc-footer\" id=\"footerComponent3\">\n          <div class=\"bc-container\">\n              <div class=\"bc-footer-top bc-row\">\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>\n                              <a href=\"https://google.com\" target=\"_blank\">Informaci\u00f3n de seguridad</a>\n                          </h6>\n                      </div>\n                  </div>\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>\n                              <a href=\"https://google.com\" target=\"_blank\">Cont\u00e1ctenos</a>\n                          </h6>\n                      </div>\n                      \n                  </div>\n\n                  <div class=\"bc-footer-top-container\">\n                      <div class=\"bc-footer-top-container-t\">\n                          <h6>\n                              <a href=\"https://google.com\" target=\"_blank\">\n                                  Visitanos</a>\n                          </h6>\n                      </div>\n                      \n                  </div>\n                 \n              </div>\n          </div>\n          \n          <div class=\"bc-footer-divisor\"></div>\n          <div class=\"bc-container\">\n              <div class=\"bc-footer-bottom bc-row\">\n                  <div class=\"bc-footer-bottom-left bc-col-sm-8\">\n                      <div class=\"bc-footer-bottom-left-icon\"><img\n                              src=\"/assets/icons/logo/Bancolombia/isotipo-negro-2.svg\"\n                              alt=\"Bancolombia isotipo negro\" /></div>\n                      <div class=\"bc-footer-bottom-left-side bc-col-sm-11\">\n                          <div class=\"bc-footer-bottom-left-content-logo\">\n                              <img class=\"bc-footer-bottom-horizontal-logo\"\n                                  src=\"/assets/icons/logo/grupo_Bancolombia/logo_horizontal_negro.svg\"\n                                  alt=\"Logo horizontal Bancolombia\" />\n                          </div>\n                          <p>Copyright &copy; 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n                              eros\n                          </p>\n                          <p>pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus\n                          </p>\n                          <p>adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum\n                              hendrerit\n                          </p>\n                          <p>tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices\n                              sagittis.\n                          </p>\n                          <div class=\"bc-footer-bottom-left-side-vigilant\"><img\n                                  class=\"footer-bottom-horizontal logo\"\n                                  src=\"/assets/icons/logo/Bancolombia/vigilado-negro.svg\"\n                                  alt=\"Vigilado superintendencia financiera de Colombia\" /></div>\n                      </div>\n                  </div>\n                  <div class=\"bc-footer-bottom-right bc-col-sm-4\">\n                      <div class=\"bc-footer-bottom-right-network-icons\"><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a facebook\"><i\n                                  class=\"bc-icon bc-md\">facebook</i></a><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a twitter\"><i\n                                  class=\"bc-icon bc-md\">twitter</i></a>\n                          <a href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a linkedin\"><i class=\"bc-icon bc-md\">linkedin</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a instagram\"><i class=\"bc-icon bc-md\">instagram</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a youtube\"><i class=\"bc-icon bc-md\">youtube</i></a>\n                      </div>\n                      <div class=\"bc-footer-bottom-right-text\">\n                          <p>Direcci&oacute;n IP 190.144.71.250</p>\n                          <p>&Uacute;ltima visita Jueves 31 de Julio de 2019 10:06 a.m</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n          ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Footer 4",
            "code": {
              "html": "\n          <div class=\"bc-footer bc-footer-white\" id=\"footerComponent4\">\n          <div class=\"bc-container\">\n              <div class=\"bc-footer-bottom bc-row\">\n                  <div class=\"bc-footer-bottom-left bc-col-sm-8\">\n                      <div class=\"bc-footer-bottom-left-icon\"><img\n                              src=\"/assets/icons/logo/Bancolombia/isotipo-negro-2.svg\"\n                              alt=\"Bancolombia isotipo negro\" /></div>\n                      <div class=\"bc-footer-bottom-left-side bc-col-sm-11\">\n                          <div class=\"bc-footer-bottom-left-content-logo\">\n                              <img class=\"bc-footer-bottom-horizontal-logo\"\n                                  src=\"/assets/icons/logo/grupo_Bancolombia/logo_horizontal_negro.svg\"\n                                  alt=\"Logo horizontal Bancolombia\" />\n                          </div>\n                          <p>Copyright &copy; 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n                              eros\n                          </p>\n                          <p>pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus\n                          </p>\n                          <p>adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum\n                              hendrerit\n                          </p>\n                          <p>tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices\n                              sagittis.\n                          </p>\n                          <div class=\"bc-footer-bottom-left-side-vigilant\"><img\n                                  class=\"footer-bottom-horizontal logo\"\n                                  src=\"/assets/icons/logo/Bancolombia/vigilado-negro.svg\"\n                                  alt=\"Vigilado superintendencia financiera de Colombia\" /></div>\n                      </div>\n                  </div>\n                  <div class=\"bc-footer-bottom-right bc-col-sm-4\">\n                      <div class=\"bc-footer-bottom-right-network-icons\"><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a facebook\"><i\n                                  class=\"bc-icon bc-md\">facebook</i></a><a href=\"http://google.com\"\n                              target=\"blank\" tabindex=\"0\" aria-label=\"Ir a twitter\"><i\n                                  class=\"bc-icon bc-md\">twitter</i></a>\n                          <a href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a linkedin\"><i class=\"bc-icon bc-md\">linkedin</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a instagram\"><i class=\"bc-icon bc-md\">instagram</i></a><a\n                              href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                              aria-label=\"Ir a youtube\"><i class=\"bc-icon bc-md\">youtube</i></a>\n                      </div>\n                      <div class=\"bc-footer-bottom-right-text\">\n                          <p>Direcci&oacute;n IP 190.144.71.250</p>\n                          <p>&Uacute;ltima visita Jueves 31 de Julio de 2019 10:06 a.m</p>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n          ",
              "script": "",
              "language": "js"
            }
          },
          {
            "description": "Footer 5",
            "code": {
              "html": "\n          <div class=\"bc-footer\" id=\"footerComponent3\">\n                    <div class=\"bc-container\">\n                        <div class=\"bc-footer-top bc-row\">\n                            <div class=\"bc-footer-top-container\">\n                                <div class=\"bc-footer-top-container-t\">\n                                    <h6>\n                                        Informaci\u00f3n de seguridad\n                                    </h6>\n                                </div>\n                            </div>\n                            <div class=\"bc-footer-top-container\">\n                                <div class=\"bc-footer-top-container-t\">\n                                    <h6>\n                                       Cont\u00e1ctenos\n                                    </h6>\n                                </div>\n                                \n                            </div>\n          \n                            <div class=\"bc-footer-top-container\">\n                                <div class=\"bc-footer-top-container-t\">\n                                    <h6>\n                                        Visitanos\n                                    </h6>\n                                </div>\n                                \n                            </div>\n                           \n                        </div>\n                    </div>\n                    \n                    <div class=\"bc-footer-divisor\"></div>\n                    <div class=\"bc-container\">\n                        <div class=\"bc-footer-bottom bc-row\">\n                            <div class=\"bc-footer-bottom-left bc-col-sm-8\">\n                                <div class=\"bc-footer-bottom-left-icon\"><img\n                                        src=\"/assets/icons/logo/Bancolombia/isotipo-negro-2.svg\"\n                                        alt=\"Bancolombia isotipo negro\" /></div>\n                                <div class=\"bc-footer-bottom-left-side bc-col-sm-11\">\n                                    <div class=\"bc-footer-bottom-left-content-logo\">\n                                        <img class=\"bc-footer-bottom-horizontal-logo\"\n                                            src=\"/assets/icons/logo/grupo_Bancolombia/logo_horizontal_negro.svg\"\n                                            alt=\"Logo horizontal Bancolombia\" />\n                                    </div>\n                                    <p>Copyright &copy; 2020 Grupo Bancolombia. Sed egestas, ante et vulputate volutpat,\n                                        eros\n                                    </p>\n                                    <p>pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus\n                                    </p>\n                                    <p>adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum\n                                        hendrerit\n                                    </p>\n                                    <p>tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices\n                                        sagittis.\n                                    </p>\n                                    <div class=\"bc-footer-bottom-left-side-vigilant\"><img\n                                            class=\"footer-bottom-horizontal logo\"\n                                            src=\"/assets/icons/logo/Bancolombia/vigilado-negro.svg\"\n                                            alt=\"Vigilado superintendencia financiera de Colombia\" /></div>\n                                </div>\n                            </div>\n                            <div class=\"bc-footer-bottom-right bc-col-sm-4\">\n                                <div class=\"bc-footer-bottom-right-network-icons\"><a href=\"http://google.com\"\n                                        target=\"blank\" tabindex=\"0\" aria-label=\"Ir a facebook\"><i\n                                            class=\"bc-icon bc-md\">facebook</i></a><a href=\"http://google.com\"\n                                        target=\"blank\" tabindex=\"0\" aria-label=\"Ir a twitter\"><i\n                                            class=\"bc-icon bc-md\">twitter</i></a>\n                                    <a href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a linkedin\"><i class=\"bc-icon bc-md\">linkedin</i></a><a\n                                        href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a instagram\"><i class=\"bc-icon bc-md\">instagram</i></a><a\n                                        href=\"http://google.com\" target=\"blank\" tabindex=\"0\"\n                                        aria-label=\"Ir a youtube\"><i class=\"bc-icon bc-md\">youtube</i></a>\n                                </div>\n                                <div class=\"bc-footer-bottom-right-text\">\n                                    <p>Direcci&oacute;n IP 190.144.71.250</p>\n                                    <p>&Uacute;ltima visita Jueves 31 de Julio de 2019 10:06 a.m</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n          ",
              "script": "",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcfooterAccordions",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcfooterAccordionsGroup",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementsLA",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementsTop",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementsTopP",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcfooterElementsTopPA",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementsTopT",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementsTopTA",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementTop",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementTopCont",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterElementTopContLi",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterIconNetwork",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterIconNetworkChildren",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcFooterIsMobile",
            "defaultValue": "false",
            "type": "",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcHeaderComponent",
            "selector": "bc-header",
            "inputsClass": [
              {
                "name": "fixed",
                "defaultValue": "true",
                "description": "<p>Posici\u00f3n del header fija [true (default) | false].</p>\n"
              },
              {
                "name": "id",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del componente.</p>\n"
              },
              {
                "name": "menuInteraction",
                "defaultValue": "true",
                "description": "<p>Indica si existe un men\u00fa lateral y si este va a tener interacci\u00f3n con el header, por defecto es true.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Este componente Header es utilizado para el men\u00fa de los sitios bancolombia</p>\n",
            "rawdescription": "Este componente Header es utilizado para el men\u00fa de los sitios bancolombia",
            "type": "component"
          },
          {
            "name": "BcHeaderItemMenuComponent",
            "selector": "bc-header-item",
            "inputsClass": [
              {
                "name": "dropdownList",
                "description": "<p>Define la lista de elementos que va a contener el dropDown.</p>\n",
                "type": "Array<BcHeaderNavItem>"
              },
              {
                "name": "icon",
                "description": "<p>Define el icono a mostrar en cada item del men\u00fa.</p>\n",
                "type": "string"
              },
              {
                "name": "isDropdown",
                "description": "<p>Define si el item del men\u00fa tiene tiene una lista desplegable.</p>\n",
                "type": "boolean"
              },
              {
                "name": "itemId",
                "defaultValue": "this.bcHelper.getId(this)",
                "description": "<p>Id del componente.</p>\n",
                "type": "string"
              },
              {
                "name": "itemType",
                "defaultValue": "'any'",
                "description": "<p>itemType define el tipo de icono a mostrar pueden ser tipo user o logout.</p>\n",
                "type": "\"any\" | \"user\" | \"logout\""
              },
              {
                "name": "route",
                "defaultValue": "''",
                "description": "<p>Define la url a la cual vamos a redirigir cada enlace del men\u00fa.</p>\n"
              },
              {
                "name": "subText",
                "description": "<p>Define el texto cuando se quiere colocar en una segunda l\u00ednea ejemplo: el numero de NIT.</p>\n",
                "type": "string"
              },
              {
                "name": "text",
                "description": "<p>Define el texto a mostrar en cada item del men\u00fa.</p>\n",
                "type": "string"
              },
              {
                "name": "userAvatar",
                "defaultValue": "null",
                "description": "<p>Define el tipo de avatar que se va a mostrar en el men\u00fa.</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "optionSelected",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [],
            "description": "<p>Componente del item para el header\nEste componente puede ser de 6 tipos [&#39;help&#39; | &#39;language&#39; | &#39;notifiaction&#39; | &#39;user&#39; | &#39;logout&#39;]</p>\n",
            "rawdescription": "Componente del item para el header\nEste componente puede ser de 6 tipos ['help' | 'language' | 'notifiaction' | 'user' | 'logout']",
            "type": "component"
          },
          {
            "name": "BcHeaderLeftComponent",
            "selector": "bc-header-left",
            "inputsClass": [
              {
                "name": "familyLogo",
                "defaultValue": "'Bancolombia'",
                "description": "<p>Familia a la que pertenece el logo.</p>\n"
              },
              {
                "name": "logoName",
                "defaultValue": "'primario_positivo'",
                "description": "<p>Nombre del logo a mostrar.</p>\n"
              },
              {
                "name": "txtLeftMenu",
                "defaultValue": "'men\u00fa'",
                "description": "<p>Crea una instacia de BcHeaderLeftComponent.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Comoponente para el logo izquierdo del header.</p>\n",
            "rawdescription": "Comoponente para el logo izquierdo del header.",
            "type": "component"
          },
          {
            "name": "BcHeaderListComponent",
            "selector": "bc-header-list",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente de lista para los items del header.</p>\n",
            "rawdescription": "Componente de lista para los items del header.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n        <bc-header>\n          <bc-header-left logoName=\"bancolombia-horizontal\"></bc-header-left>\n          <bc-header-list>\n            <bc-header-item icon=\"calculator\" text=\"Herramientas\" route=\"#\" class=\"bc-reverse-d-lg-none\"></bc-header-item>\n            <bc-header-item icon=\"help\" text=\"Ayuda\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"notification\" text=\"Notificaciones\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"store\" [text]=\"companyList[0].text\" [subText]=\"companyList[0].subText\" isDropdown=\"true\" [dropdownList]=\"companyList\" class=\"bc-reverse-d-lg-none\" (optionSelected)=\"onChangeCompany($event)\"></bc-header-item>\n            <bc-header-item text=\"Username 2\" itemType=\"user\" userAvatar=\"https://picsum.photos/100/100\"></bc-header-item>\n            <bc-header-item icon=\"quit\" text=\"Cerar sesi\u00f3n\" itemType=\"logout\" (click)=\"logout()\"></bc-header-item>\n          </bc-header-list>\n        </bc-header>\n          ",
              "script": "\n          logout() {}\n\n          companyList: BcHeaderNavItem[] = [\n            { icon: 'store', text: 'Company 1', subText: 'Nit: 1111111-1' },\n            { icon: 'store', text: 'Company 2', subText: 'Nit: 2222222-2' },\n            { icon: 'store', text: 'Company 3', subText: 'Nit: 3333333-3' },\n          ];\n\n          onChangeCompany(res: CustomEvent) {\n            alert('company: ' + JSON.stringify(res.detail));\n          }",
              "language": "js"
            }
          },
          {
            "description": "Header sin interacci\u00f3n con el men\u00fa",
            "code": {
              "html": "\n        <bc-header [menuInteraction]=\"false\">\n          <bc-header-left logoName=\"bancolombia-horizontal\"></bc-header-left>\n          <bc-header-list>\n            <bc-header-item icon=\"calculator\" text=\"Herramientas\" route=\"#\" class=\"bc-reverse-d-lg-none\"></bc-header-item>\n            <bc-header-item icon=\"help\" text=\"Ayuda\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"notification\" text=\"Notificaciones\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"store\" [text]=\"companyList[0].text\" [subText]=\"companyList[0].subText\" isDropdown=\"true\" [dropdownList]=\"companyList\" class=\"bc-reverse-d-lg-none\" (optionSelected)=\"onChangeCompany($event)\"></bc-header-item>\n            <bc-header-item text=\"Username 2\" itemType=\"user\" userAvatar=\"https://picsum.photos/100/100\"></bc-header-item>\n            <bc-header-item icon=\"quit\" text=\"Cerar sesi\u00f3n\" itemType=\"logout\" (click)=\"logout()\"></bc-header-item>\n          </bc-header-list>\n        </bc-header>\n          ",
              "script": "\n          logout() {}\n\n          companyList: BcHeaderNavItem[] = [\n            { icon: 'store', text: 'Company 1', subText: 'Nit: 1111111-1' },\n            { icon: 'store', text: 'Company 2', subText: 'Nit: 2222222-2' },\n            { icon: 'store', text: 'Company 3', subText: 'Nit: 3333333-3' },\n          ];\n\n          onChangeCompany(res: CustomEvent) {\n            alert('company: ' + JSON.stringify(res.detail));\n          }",
              "language": "js"
            }
          },
          {
            "description": "Header NO FIJO",
            "code": {
              "html": "\n        <bc-header [menuInteraction]=\"false\" [fixed]=\"false\">\n          <bc-header-left logoName=\"bancolombia-horizontal\" familyLogo=\"grupo_Bancolombia\"></bc-header-left>\n          <bc-header-list>\n            <bc-header-item icon=\"calculator\" text=\"Herramientas\" route=\"#\" class=\"bc-reverse-d-lg-none\"></bc-header-item>\n            <bc-header-item icon=\"help\" text=\"Ayuda\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"notification\" text=\"Notificaciones\" route=\"#\"></bc-header-item>\n            <bc-header-item icon=\"store\" [text]=\"companyList[0].text\" [subText]=\"companyList[0].subText\" isDropdown=\"true\" [dropdownList]=\"companyList\" class=\"bc-reverse-d-lg-none\" (optionSelected)=\"onChangeCompany($event)\"></bc-header-item>\n            <bc-header-item text=\"Username 2\" itemType=\"user\" userAvatar=\"https://picsum.photos/100/100\"></bc-header-item>\n            <bc-header-item icon=\"quit\" text=\"Cerar sesi\u00f3n\" itemType=\"logout\" (click)=\"logout()\"></bc-header-item>\n          </bc-header-list>\n        </bc-header>\n          ",
              "script": "\n          logout() {}\n\n          companyList: BcHeaderNavItem[] = [\n            { icon: 'store', text: 'Company 1', subText: 'Nit: 1111111-1' },\n            { icon: 'store', text: 'Company 2', subText: 'Nit: 2222222-2' },\n            { icon: 'store', text: 'Company 3', subText: 'Nit: 3333333-3' },\n          ];\n\n          onChangeCompany(res: CustomEvent) {\n            alert('company: ' + JSON.stringify(res.detail));\n          }",
              "language": "js"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addEventForOption",
            "args": [
              {
                "name": "fn",
                "type": "Function",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEvents",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addMenuButtonEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getDropdownContents",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "iAmHere",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "initDropdowns",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "menuItemOpened",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeLogoutBtn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toogleSidebarMenu",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "updateHeaderItemText",
            "args": [
              {
                "name": "parent",
                "type": "Element"
              },
              {
                "name": "option",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n        <div class=\"bc-header bc-fixed\" id=\"header\">\n          <div class=\"bc-header-brand\">\n            <div class=\"bc-header-brand_menu-toggle bc-reverse-d-lg-none\">\n              <em class=\"bc-icon\">menu</em>\n              <span>Men\u00fa</span>\n            </div>\n            <img alt=\"Bancolombia brand\"\n              src=\"https://galatea-dev.apps.ambientesbc.com/assets/icons/logo/grupo_Bancolombia/principal_positivo.svg\">\n          </div>\n          <ul class=\"bc-header-nav\">\n            <li class=\"bc-header-nav-item bc-reverse-d-lg-none\">\n              <a class=\"bc-link\" href=\"#\">\n                <em class=\"bc-icon bc-sm\">calculator</em>\n                <div class=\"bc-header-nav-item-text\">\n                  <p>Herramientas</p>\n                </div>\n              </a>\n            </li>\n            <li class=\"bc-header-nav-item\">\n              <a class=\"bc-link\" href=\"#\">\n                <em class=\"bc-icon bc-sm\">help</em>\n                <div class=\"bc-header-nav-item-text\">\n                  <p>Ayuda</p>\n                </div>\n              </a>\n            </li>\n            <li class=\"bc-header-nav-item bc-dropdown bc-dropdown-custom bc-reverse-d-lg-none\">\n              <div class=\"bc-dropdown-toggle\" id=\"languageDropdown\">\n                <em class=\"bc-icon bc-sm\">international</em>\n                <div class=\"bc-header-nav-item-text\">\n                  <p>ES</p>\n                </div>\n                <em class=\"bc-icon bc-sm\">arrow2-down</em>\n              </div>\n              <div class=\"bc-dropdown-content\" aria-labelledby=\"languageDropdown\">\n                <ul>\n                  <li class=\"bc-dropdown-item\" id=\"opt1\">\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>ES</p>\n                    </div>\n                  </li>\n                  <li class=\"bc-dropdown-item\" id=\"opt2\">\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>EN</p>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </li>\n            <li class=\"bc-header-nav-item\">\n              <a class=\"bc-link\" href=\"#\">\n                <em class=\"bc-icon bc-sm\">notification</em>\n                <div class=\"bc-header-nav-item-text\">\n                  <p>Notificaciones</p>\n                </div>\n              </a>\n            </li>\n            <li class=\"bc-header-nav-item bc-dropdown bc-dropdown-custom bc-reverse-d-lg-none\">\n              <a class=\"bc-link\">\n                <div class=\"bc-dropdown-toggle\" id=\"companyDropdown\">\n                  <em class=\"bc-icon bc-sm\">store</em>\n                  <div class=\"bc-header-nav-item-text\">\n                    <p>Fondo Nacional del Ahorro 1</p>\n                    <small>Nit: 0123 456 789 - 1</small>\n                  </div>\n                  <em class=\"bc-icon bc-sm\">arrow2-down</em>\n                </div>\n              </a>\n              <div class=\"bc-dropdown-content\" aria-labelledby=\"companyDropdown\">\n                <ul>\n                  <li class=\"bc-dropdown-item\" id=\"opt1\">\n                    <em class=\"bc-icon bc-sm\">amount</em>\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>Fondo Nacional del Ahorro 1</p>\n                      <small>Nit: 0123 456 789 - 1</small>\n                    </div>\n                  </li>\n                  <li class=\"bc-dropdown-item\" id=\"opt1\">\n                    <em class=\"bc-icon bc-sm\">amount</em>\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>Fondo Nacional del Ahorro 2</p>\n                      <small>Nit: 0123 456 789 - 2</small>\n                    </div>\n                  </li>\n                  <li class=\"bc-dropdown-item\">\n                    <em class=\"bc-icon bc-sm\">amount</em>\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>Fondo Nacional del Ahorro 3</p>\n                      <small>Nit: 0123 456 789 - 3</small>\n                    </div>\n                  </li>\n                  <li class=\"bc-dropdown-item\">\n                    <em class=\"bc-icon bc-sm\">amount</em>\n                    <div class=\"bc-dropdown-item-text\">\n                      <p>Fondo Nacional del Ahorro 4</p>\n                      <small>Nit: 0123 456 789 - 4</small>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </li>\n            <li class=\"bc-header-nav-item\">\n              <a class=\"bc-link\" href=\"#\">\n                <div class=\"bc-header-nav-item-text\">\n                  <p>Nombre Usuario en Sesi\u00f3n</p>\n                </div>\n                <img class=\"bc-avatar bc-avatar-small\" src=\"https://loremflickr.com/32/32/cat\" alt=\"avatar\">\n              </a>\n            </li>\n            <li class=\"bc-header-nav-item bc-header-nav-item_logout bc-reverse-d-lg-none\">\n              <a class=\"bc-link\" href=\"#\">\n                <em class=\"bc-icon bc-sm\">quit</em>\n                <div class=\"bc-header-nav-item-text\">\n                  <p>Cerrar sesi\u00f3n</p>\n                </div>\n              </a>\n            </li>\n          </ul>\n        </div>\n          ",
              "script": "\n          const header = new BcHeaderBehavior();\n          header.setId(\"header\");\n          header.setUp();\n          ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "comunicationWithMenu",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdownActive",
            "defaultValue": "null",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdowns",
            "defaultValue": "[]",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdownsContents",
            "defaultValue": "[]",
            "type": "any",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcHeaderNavigationBar",
        "description": "<p>BcHeaderNavigationBar proporciona contenido y acciones realcionadas con la pantalla actual. Se utiliza para agregar el isotipo, los t\u00edtulos de pantalla, la navegaci\u00f3n y acciones de la pantalla.</p>",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "required": true,
            "description": "<p>String con texto correspondiente a la pantalla que se muestra.</p>"
          },
          {
            "name": "image",
            "type": "Widget?",
            "required": false,
            "description": "<p>Icono accionable que aparecer\u00e1 en la parte central del Header.</p>"
          },
          {
            "name": "backgroundColor",
            "type": "Color?",
            "required": false,
            "description": "<p>Color que llevar\u00e1 el contenedor del widget.</p>"
          },
          {
            "name": "onCenterTap",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funcion callback cuando se realiza clic en el area central.</p>"
          },
          {
            "name": "leftItem",
            "type": "BcHeaderNavigationBarItem?",
            "required": false,
            "description": "<p>Widget accionable que se visualizar\u00e1 en la izquierda del Header.</p>"
          },
          {
            "name": "rightItem",
            "type": "BcHeaderNavigationBarItem?",
            "required": false,
            "description": "<p>Widget accionable que se visualizar\u00e1 en la derecha del Header.</p>"
          },
          {
            "name": "scrollController",
            "type": "ScrollController?",
            "required": true,
            "description": "<p>Controlador requerido que se debe pasar para detectar Scroll en pantalla actual.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": " Header con label derecho e izquierdo habilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n        leftItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.ARROW2_LEFT,\n          label: 'Label left',\n          onButtonTap: _onTapped,\n        ),\n        rightItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.QUIT,\n          label: 'Cerrar sesi\u00f3n',\n          onButtonTap: _onTapped,\n        ),\n      );"
              }
            ]
          },
          {
            "description": " Header con label izquierdo deshabilitado e derecho habilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n        leftItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.ARROW2_LEFT,\n          label: 'Label left',\n          enabled: false,\n          onButtonTap: _onTapped,\n        ),\n        rightItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.QUIT,\n          label: 'Cerrar sesi\u00f3n',\n          onButtonTap: _onTapped,\n        ),\n      );"
              }
            ]
          },
          {
            "description": " Header con solo label izquierdo habilitado e icono derecho habilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n        leftItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.ARROW2_LEFT,\n          label: 'Label left',\n          onButtonTap: _onTapped,\n        ),\n        rightItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.QUIT,\n          onButtonTap: _onTapped,\n        ),\n      );"
              }
            ]
          },
          {
            "description": " Header con solo label derecho habilitado",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n        rightItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.QUIT,\n          label: 'Cerrar sesi\u00f3n',\n          onButtonTap: _onTapped,\n        ),\n      );"
              }
            ]
          },
          {
            "description": " Header sin label y Svg por defecto",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n      );"
              }
            ]
          },
          {
            "description": " Header con SVG por defecto e iconos accionables",
            "codes": [
              {
                "language": "dart",
                "example": "\n      BcHeaderNavigationBar(\n        title: 'HEADER',\n        leftItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.ARROW2_LEFT,\n          onButtonTap: _onTapped,\n        ),\n        rightItem: BcHeaderNavigationBarItem(\n          icon: BcFunctionalIcons.ARROW2_RIGHT,\n          onButtonTap: _onTapped,\n        ),\n      );"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcInputFileComponent",
            "selector": "bc-input-file",
            "inputsClass": [
              {
                "name": "buttonLabel",
                "defaultValue": "'Agregar Archivo'",
                "description": "<p>Etiqueta personalizable a la experiencia para el bot\u00f3n de carga de archivos.</p>\n"
              },
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del componente.</p>\n",
                "type": "string"
              },
              {
                "name": "description",
                "description": "<p>Descripci\u00f3n del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "dropArea",
                "defaultValue": "true",
                "description": "<p>\u00c1rea arrastrar true | false.</p>\n"
              },
              {
                "name": "dropAreaIcon",
                "defaultValue": "'cloud-upload'",
                "description": "<p>\u00cdcono arrastrar elementos.</p>\n"
              },
              {
                "name": "dropAreaText",
                "defaultValue": "'Arrastra aqu\u00ed los archivos desde tu computadora'",
                "description": "<p>Texto donde se arrastran los elementos.</p>\n"
              },
              {
                "name": "maxRecords",
                "defaultValue": "''",
                "description": "<p>Limite m\u00e1ximo de registros.</p>\n"
              },
              {
                "name": "maxSize",
                "defaultValue": "''",
                "description": "<p>Limite m\u00e1ximo en MB.</p>\n"
              },
              {
                "name": "multipleFiles",
                "defaultValue": "true",
                "description": "<p>Habilitar m\u00faltiples archivos.</p>\n"
              },
              {
                "name": "title",
                "description": "<p>T\u00edtulo del elemento.</p>\n",
                "type": "string"
              },
              {
                "name": "validType",
                "defaultValue": "[]",
                "description": "<p>Tipo de validaci\u00f3n.</p>\n",
                "type": "string[]"
              }
            ],
            "outputsClass": [
              {
                "name": "getFilesAdded",
                "defaultValue": "new EventEmitter",
                "description": "<p>Corresponde al emisor que devuelve los archivos que se han seleccionado. Se llama cada vez que se agrega o elimina un archivo.</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [],
            "description": "<p>Componente subir archivos</p>\n",
            "rawdescription": "Componente subir archivos",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Input File con Drop Area y con Archivos V\u00e1lidos Tipo [\"jpg\",\"png\",\"pdf\"]",
            "code": {
              "html": "\n        <bc-input-file title=\"Selector de archivos\"\n          [description]=\"'Este selector contiene un dropArea con los valores predeterminados, pero pueden ser cambiados'\"\n          [dropArea]=true\n          (getFilesAdded)='metodoParaCogerLosArchivos($event)'\n          [multipleFiles]=true\n          [validType]='[\"png\", \"jpg\",\"pdf\"]'\n          [buttonLabel]=\"'Etiqueta Personalizable'\"\n          componentId=\"InputConDropArea\">\n        </bc-input-file>",
              "script": "\n            metodoParaCogerLosArchivos(archivos) {\n            }\n          ",
              "language": "ts"
            }
          },
          {
            "description": "Input File sin Drop Area con limite de ficheros en MB en maxSize",
            "code": {
              "html": "\n        <bc-input-file class=\"bc-col-xs-6 bc-col-sm-12 bc-col-md-12 bc-col-lg-6 bc-col-xl-6\"\n          [maxSize]=\"1\"   \n          [title]=\"'Selector de archivos'\"\n          [description]=\"'Este selector de archivos no contiene un drop area para ajustarse a algun tipo de experiencia especifica'\"\n          [validType]='[\"png\", \"jpg\",\"pdf\"]'\n          [dropArea]=false\n          (getFilesAdded)='metodoParaCogerLosArchivos($event)'\n          componentId=\"InputSinDropArea\">\n        </bc-input-file>\n            ",
              "script": "\n            metodoParaCogerLosArchivos(archivos) {\n            }\n          ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addColCenter",
            "args": [
              {
                "name": "container",
                "type": "Element"
              },
              {
                "name": "file",
                "type": "File"
              },
              {
                "name": "status",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addColLeft",
            "args": [
              {
                "name": "container",
                "type": "Element"
              },
              {
                "name": "file",
                "type": "File"
              },
              {
                "name": "status",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addColRight",
            "args": [
              {
                "name": "container",
                "type": "Element"
              },
              {
                "name": "file",
                "type": "File"
              },
              {
                "name": "parentElement",
                "type": "ChildNode"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addFocus",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "appendFileMolecule",
            "args": [
              {
                "name": "file",
                "type": "File"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "cardErrorState",
            "args": [
              {
                "name": "container",
                "type": "Element"
              },
              {
                "name": "col",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createFileInDom",
            "args": [
              {
                "name": "file",
                "type": "File"
              },
              {
                "name": "container",
                "type": "ChildNode"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Crea un contenedor con el nombre del archivo en el DOM html que es\nvisible para el usuario en el navegador por cada archivo que se sube</p>\n"
          },
          {
            "name": "deleteFile",
            "args": [
              {
                "name": "fileToDelete",
                "type": "File"
              },
              {
                "name": "molecule",
                "type": "Element"
              },
              {
                "name": "parent",
                "type": "ChildNode"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "formatSizeUnits",
            "args": [
              {
                "name": "bytes",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getInputAcceptTypes",
            "args": [
              {
                "name": "validTypesArray",
                "type": "string[]"
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "getMaxSize",
            "args": [
              {
                "name": "files",
                "type": "FileList"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": [],
            "description": "<p>Obtiene el m\u00e1ximo peso en mb en archivos subidos</p>\n"
          },
          {
            "name": "getSeeMoreButton",
            "args": [],
            "optional": false,
            "returnType": "Element",
            "typeParameters": []
          },
          {
            "name": "handleDrop",
            "args": [
              {
                "name": "e",
                "type": "Event"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "handleFiles",
            "args": [
              {
                "name": "files",
                "type": "FileList"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "isRepeatedFile",
            "args": [
              {
                "name": "file",
                "type": "File"
              }
            ],
            "optional": false,
            "returnType": "boolean",
            "typeParameters": [],
            "description": "<p>Valida si el nombre de archivo ya existe</p>\n"
          },
          {
            "name": "listeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "loaderFile",
            "args": [
              {
                "name": "container",
                "type": "Element"
              },
              {
                "name": "col",
                "type": "Element"
              },
              {
                "name": "info",
                "type": "Element"
              },
              {
                "name": "file",
                "type": "File"
              },
              {
                "name": "progress",
                "type": "Element"
              },
              {
                "name": "percent",
                "type": "number"
              },
              {
                "name": "status",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "overFileLimit",
            "args": [],
            "optional": false,
            "returnType": "boolean",
            "typeParameters": []
          },
          {
            "name": "preventDefaults",
            "args": [
              {
                "name": "e",
                "type": "DragEvent"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toggleSeeMore",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "updateProgressBar",
            "args": [
              {
                "name": "progress",
                "type": "Element"
              },
              {
                "name": "percent",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "validateType",
            "args": [
              {
                "name": "validTypes",
                "type": "string[]"
              },
              {
                "name": "file",
                "type": "File"
              }
            ],
            "optional": false,
            "returnType": "boolean",
            "typeParameters": [],
            "description": "<p>Valida el tipo de archivo segun los tipos de archivos permitidos</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Selector de Archivo con Drop Area",
            "code": {
              "html": "\n        <div class=\"bc-input-file\" id=\"componentId1\">\n          <div class=\"bc-input-file-header center\">\n              <h6>T\u00edtulo selector de archivos</h6>\n              <p class=\"text-black-gray\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Deleniti id aliquid at\n                  molestiae? Quasi veniam voluptatem, sint, quam itaque beatae cupiditate nulla vero quo fugiat ab accusantium\n                  debitis tenetur voluptates!</p>\n          </div>\n          <div class=\"bc-drop-area\" tabindex=\"0\" aria-label=\"Adjuntar archivos\">\n              <div class=\"bc-none bc-md-block\"><em class=\"bc-icon bc-md\">cloud-upload</em>\n                  <p>Arrastra aqu\u00ed los archivos desde tu computador o</p>\n              </div>\n              <button class=\"bc-button-secondary bc-button-small\">Agregar archivo</button>\n              <input class=\"bc-none bc-drop-area-input\" id=\"file1\" type=\"file\" multiple=\"multiple\" validtype=\"['png', 'pdf', 'mp4']\" accept=\".png,.pdf,.mp4,\">\n              <p>\n                <span>Puede contener m\u00e1ximo 10.000 registros</span><span>Formatos .XLS .CSV .PNG .JPG</span><span>500 MB m\u00e1ximo</span>\n              </p>\n          </div>\n          <div class=\"bc-files-container\"></div>\n          <div class=\"bc-files-show-more-container bc-none\"></div>\n      </div>",
              "script": "\n        const inputFile = new BcInputFileBehavior();\n        inputFile.setId(componentId);\n        inputFile.changeState = (param) => {};\n        inputFile.setUp();",
              "language": "js"
            }
          },
          {
            "description": "SInput File sin Drop Area",
            "code": {
              "html": "\n        <div class=\"bc-input-file\" id=\"componentId2\">\n            <div class=\"bc-input-file-header\">\n                <h6>T\u00edtulo selector de archivos</h6>\n            </div>\n            <div class=\"bc-drop-area bc-drop-area-none\" tabindex=\"0\" aria-label=\"Adjuntar archivos\"><button\n                    class=\"bc-button-secondary bc-button-small\">Agregar archivo</button><input\n                    class=\"bc-none bc-drop-area-input\" id=\"file2\" type=\"file\" multiple=\"multiple\"\n                    validtype=\"['png', 'pdf', 'mp4']\" accept=\".png,.pdf,.mp4,\">\n                <div class=\"bc-files-container\"></div>\n                <div class=\"bc-files-show-more-container bc-none\"></div>\n            </div>\n        </div>",
              "script": "\n        const inputFile = new BcInputFileBehavior();\n        inputFile.setId(componentId);\n        inputFile.changeState = (param) => {};\n        inputFile.setUp();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "changeState",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropArea",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "filesAdded",
            "defaultValue": "[]",
            "type": "File[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "inputFile",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "labelButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "maxSize",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "sanitizer",
            "type": "BcHTMLSanitizer",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "seeMoreButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "uploadedFilesMainContainer",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "uploadedFilesSeeMoreContainer",
            "type": "Element",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcSelectFile",
        "description": "<p>BcSelectFile permite seleccionar archivos desde una carpeta externa, tambi\u00e9n podr\u00e1 eliminarla despu\u00e9s de ser cargada.</p>",
        "parameters": [
          {
            "name": "text",
            "type": "String",
            "required": true,
            "description": "<p>Texto que va dentro del bot\u00f3n.</p>"
          },
          {
            "name": "enabled",
            "type": "bool",
            "required": false,
            "description": "<p>Bandera que habilita el bot\u00f3n.</p>"
          },
          {
            "name": "listComplete",
            "type": "ValueChanged<List<String>>?",
            "required": false,
            "description": "<p>Lista de la ruta completa del archivo.</p>"
          },
          {
            "name": "maxFile",
            "type": "int",
            "required": true,
            "description": "<p>Cantidad m\u00e1xima de archivos que podr\u00e1 seleccionar.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Card con Contenido",
            "codes": [
              {
                "language": "dart",
                "example": "\n            const BcSelectFile(\n          text: 'AGREGAR ARCHIVOS',\n          maxFile: 3,\n        ),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "nameComponent": "PageHeader",
    "description": "El header, es un elemento que contiene links a otras secciones del sitio o muestra informaci\u00f3n como el nombre o empresa que est\u00e1 autenticado, lo cual es de gran ayuda cuando una persona maneja diferentes cuentas.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcPageHeaderComponent",
            "selector": "bc-page-header",
            "inputsClass": [
              {
                "name": "bgWhite",
                "defaultValue": "false",
                "description": "<p>Coloca el background blanco</p>\n"
              },
              {
                "name": "breadcrumbs",
                "defaultValue": "[]",
                "description": "<p>Links del lado derecho</p>\n",
                "type": "IRBreadcrumbs[]"
              },
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento</p>\n",
                "type": "string"
              },
              {
                "name": "date",
                "defaultValue": "''",
                "description": "<p>Fecha de lado derecho</p>\n"
              },
              {
                "name": "rightButtons",
                "defaultValue": "[]",
                "description": "<p>Links del lado derecho</p>\n",
                "type": "IRightButtons[]"
              },
              {
                "name": "showBackButton",
                "defaultValue": "false",
                "description": "<p>Coloca el background blanco</p>\n"
              },
              {
                "name": "title",
                "defaultValue": "''",
                "description": "<p>Titulo de la pagina</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "clickBackButton",
                "defaultValue": "new EventEmitter<string>()",
                "description": "<p>Evento click para retroceder</p>\n",
                "type": "EventEmitter"
              },
              {
                "name": "clickButtonRight",
                "defaultValue": "new EventEmitter<string>()",
                "description": "<p>Evento click de los botos de la derecha</p>\n",
                "type": "EventEmitter"
              }
            ],
            "methodsClass": [
              {
                "name": "buttonClick",
                "args": [
                  {
                    "name": "idButton",
                    "type": ""
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Importa el componente BcFooter para el pie de p\u00e1gina</p>\n",
            "rawdescription": "Importa el componente BcFooter para el pie de p\u00e1gina",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Page Header por Defecto",
            "code": {
              "html": "\n          <bc-page-header\n                [date]=\"'Jueves 31 de julio de 2019 10:06 a.m.'\"\n                [title]=\"'Page title'\"\n                [rightButtons]='rightButtons'\n                [breadcrumbs]=\"breadcrumbs\"\n                (clickButtonRight)=\"clickButtonRight($event)\"\n                ></bc-page-header>\n            ",
              "script": "\n          rightButtons = [\n            {\n              icon: \"facebook\",\n              id: \"facebook\"\n            },\n            {\n              icon: \"twitter\",\n              id: \"twitter\"\n            },\n            {\n              icon: \"arrow_left\",\n              id: \"linkedin\"\n            }\n          ]\n        \n          breadcrumbs = [\n            {\n              text: \"Google\",\n              link: \"https://google.com\"\n            },\n            {\n              text: \"Facebook\",\n              link: \"https://facebook.com\"\n            },\n            {\n              text: \"Instagram\",\n              link: \"https://Instagram.com\"\n            }\n          ",
              "language": "ts"
            }
          },
          {
            "description": "Page Header blanco",
            "code": {
              "html": "\n          <bc-page-header\n                [date]=\"'Jueves 31 de julio de 2019 10:06 a.m.'\"\n                [title]=\"'Page title'\"\n                [rightButtons]='rightButtons'\n                [breadcrumbs]=\"breadcrumbs\"\n                [bgWhite]=\"true\"\n                (clickButtonRight)=\"clickButtonRight($event)\"\n                ></bc-page-header>\n            ",
              "script": "\n          rightButtons = [\n            {\n              icon: \"facebook\",\n              id: \"facebook\"\n            },\n            {\n              icon: \"twitter\",\n              id: \"twitter\"\n            },\n            {\n              icon: \"arrow_left\",\n              id: \"linkedin\"\n            }\n          ]\n        \n          breadcrumbs = [\n            {\n              text: \"Google\",\n              link: \"https://google.com\"\n            },\n            {\n              text: \"Facebook\",\n              link: \"https://facebook.com\"\n            },\n            {\n              text: \"Instagram\",\n              link: \"https://Instagram.com\"\n            }\n          ",
              "language": "ts"
            }
          },
          {
            "description": "Page Header con boton atras",
            "code": {
              "html": "\n          <bc-page-header\n                [date]=\"'Jueves 31 de julio de 2019 10:06 a.m.'\"\n                [title]=\"'Page title'\"\n                [rightButtons]='rightButtons'\n                [breadcrumbs]=\"breadcrumbs\"\n                [showBackButton]=\"true\"\n                (clickButtonRight)=\"clickButtonRight($event)\"\n                ></bc-page-header>\n            ",
              "script": "\n          rightButtons = [\n            {\n              icon: \"facebook\",\n              id: \"facebook\"\n            },\n            {\n              icon: \"twitter\",\n              id: \"twitter\"\n            },\n            {\n              icon: \"arrow_left\",\n              id: \"linkedin\"\n            }\n          ]\n        \n          breadcrumbs = [\n            {\n              text: \"Google\",\n              link: \"https://google.com\"\n            },\n            {\n              text: \"Facebook\",\n              link: \"https://facebook.com\"\n            },\n            {\n              text: \"Instagram\",\n              link: \"https://Instagram.com\"\n            }\n          ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega evento click al boton back</p>\n"
          },
          {
            "name": "selectElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Selecciona los elementos html</p>\n"
          }
        ],
        "examples": [
          {
            "description": "Page Header por Defecto",
            "code": {
              "html": "\n          <div class=\"bc-page-header\">\n          <div class=\"bc-container bc-page-header-content\">\n              <div class=\"bc-page-header-content-left bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                  <nav class=\"bc-breadcrumb\">\n                      <ol>\n                          <li>\n                              <a href=\"https://google.com\">Google</a>\n                          </li>\n                          <li>\n                              <a href=\"https://google.com\">Imagenes</a>\n                          </li>\n                          <li>\n                              <a href=\"https://google.com\">Google</a>\n                          </li>\n\n\n                      </ol>\n                  </nav>\n                  <div class=\"bc-page-header-content-left-title\">\n                      <h6>A long page title that takes two lines</h6>\n                  </div>\n              </div>\n\n              <div class=\"bc-page-header-content-right bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                  <div class=\"bc-page-header-content-right-p\">\n                      <p>Domingo 31 de septiembre de 2019 10:06 a.m.</p>\n                  </div>\n                  <div class=\"bc-page-header-content-right-icons\">\n                      <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                          class=\"bc-fab-btn-icon bc-page-header-icon\">\n                          <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                      </button>\n                      <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                          class=\"bc-fab-btn-icon bc-page-header-icon\">\n                          <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                      </button>\n                      <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                          class=\"bc-fab-btn-icon bc-page-header-icon\">\n                          <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                      </button>\n                  </div>\n              </div>\n          </div>\n      </div>\n            ",
              "script": "\n        BcPageHeaderBehavior.setUpAll();\n            ",
              "language": "js"
            }
          },
          {
            "description": "Page Header con fondo blanco",
            "code": {
              "html": "\n            <div class=\"bc-page-header bc-page-header-white\">\n            <div class=\"bc-container bc-page-header-content\">\n                <div class=\"bc-page-header-content-left bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                    <nav class=\"bc-breadcrumb\">\n                        <ol>\n                            <li>\n                                <a href=\"https://google.com\">Google</a>\n                            </li>\n                            <li>\n                                <a href=\"https://google.com\">Imagenes</a>\n                            </li>\n                            <li>\n                                <a href=\"https://google.com\">Google</a>\n                            </li>\n  \n  \n                        </ol>\n                    </nav>\n                    <div class=\"bc-page-header-content-left-title\">\n                        <h6>A long page title that takes two lines</h6>\n                    </div>\n                </div>\n  \n                <div class=\"bc-page-header-content-right bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                    <div class=\"bc-page-header-content-right-p\">\n                        <p>Domingo 31 de septiembre de 2019 10:06 a.m.</p>\n                    </div>\n                    <div class=\"bc-page-header-content-right-icons\">\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n              ",
              "script": "\n          BcPageHeaderBehavior.setUpAll();\n              ",
              "language": "js"
            }
          },
          {
            "description": "Page Header con boton atras",
            "code": {
              "html": "\n            <div class=\"bc-page-header bc-page-header-white\">\n            <div class=\"bc-container bc-page-header-content\">\n                <div class=\"bc-page-header-content-left bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                    <nav class=\"bc-breadcrumb\">\n                        <ol>\n                            <li>\n                                <a href=\"https://google.com\">Google</a>\n                            </li>\n                            <li>\n                                <a href=\"https://google.com\">Imagenes</a>\n                            </li>\n                            <li>\n                                <a href=\"https://google.com\">Google</a>\n                            </li>\n  \n  \n                        </ol>\n                    </nav>\n                    <div class=\"bc-page-header-content-left-title\">\n                        <em class=\"bc-icon bc-xs bc-page-header-back-button\" aria-hidden=\"true\" aria-label=\"prueba\">arrow-left</em>\n                        <h6>A long page title that takes two lines</h6>\n                    </div>\n                </div>\n  \n                <div class=\"bc-page-header-content-right bc-col-md-6 bc-col-sm-6 bc-col-xs-12\">\n                    <div class=\"bc-page-header-content-right-p\">\n                        <p>Domingo 31 de septiembre de 2019 10:06 a.m.</p>\n                    </div>\n                    <div class=\"bc-page-header-content-right-icons\">\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                        <button aria-label=\"Boton\" sizebutton=\"small\" role=\"button\" tabindex=\"0\"\n                            class=\"bc-fab-btn-icon bc-page-header-icon\">\n                            <em class=\"bc-icon bc-xs\" aria-hidden=\"true\" aria-label=\"prueba\">facebook</em>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n              ",
              "script": "\n          BcPageHeaderBehavior.setUpAll();\n              ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcPageHeaderBackButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcPageHeaderBreadcrumb",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcPageHeaderBreadcrumbItems",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcPageHeaderBreadcrumbList",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcPageHeaderButtonsRight",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcPageHeaderCountBreadcrumbItems",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "nameComponent": "Table",
    "description": "Las tablas de datos se utilizan para organizar y mostrar toda la informaci\u00f3n de un conjunto de datos de manera ordenada. Si bien una visualizaci\u00f3n de datos representa la parte de un conjunto de datos la tabla ayuda a los usuarios a comparar y analizar datos.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Mobile",
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcTableContainerComponent",
            "selector": "bc-table-container",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del componente, si este no se seteado entonces asigna uno aleatoriamente.</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "initTableBehavior",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component"
          },
          {
            "name": "BcTableContentComponent",
            "selector": "bc-table-content",
            "inputsClass": [],
            "outputsClass": [
              {
                "name": "changed",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component"
          },
          {
            "name": "BcTableDropdownComponent",
            "selector": "bc-table-dropdown",
            "inputsClass": [
              {
                "name": "data",
                "description": "<p>Data personalizada por el usuario.</p>\n",
                "type": "any"
              },
              {
                "name": "options",
                "defaultValue": "[]",
                "description": "<p>Array con las opciones a mostrar en el submen\u00fa de opciones de cada fila.\nEste Array es de tipo Options, es decir, cada elemento del array debe llevar la siguiente estructura:\n{\n  id: string;\n  icon: string;\n  text: string;\n}</p>\n",
                "type": "Array<Options>"
              },
              {
                "name": "row",
                "defaultValue": "null",
                "description": "<p>Es la fila en la cual se encuentra el dropdown.</p>\n",
                "type": "any"
              }
            ],
            "outputsClass": [
              {
                "name": "changed",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter<any>"
              },
              {
                "name": "onChange",
                "defaultValue": "new EventEmitter()",
                "description": "<p>Se emite cuando alguna de las opciones del dropdown es seleccionada,\nretornando el id de la opci\u00f3n y la respectiva fila.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "overWriteClickEvent",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ]
              },
              {
                "name": "selectOption",
                "args": [
                  {
                    "name": "optionId",
                    "type": "string"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Se ejecuta cuando se selecciona una opci\u00f3n y emite un evento con el id de la opci\u00f3n y la respectiva fila.</p>\n"
              }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component"
          },
          {
            "name": "BcTableFooterComponent",
            "selector": "bc-table-footer",
            "inputsClass": [
              {
                "name": "totalAmounts",
                "defaultValue": "[]",
                "description": "<p>Array con los valores totales que se muestran en el footer de la tabla.</p>\n",
                "type": "Array<BcTableTotalAmount>"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component"
          },
          {
            "name": "BcTableHeaderComponent",
            "selector": "bc-table-header",
            "inputsClass": [
              {
                "name": "actionsSelections",
                "defaultValue": "[]",
                "description": "<p>Texto o label que se muestra en el bot\u00f3n de acci\u00f3n cuando la tabla es de tipo selecci\u00f3n,\neste se visualiza cuando algunas de las filas es seleccionada. Por defecto es &#39;Acci\u00f3n&#39;.</p>\n",
                "type": "BcTableActionButton[]"
              },
              {
                "name": "menuOptions",
                "defaultValue": "[]",
                "description": "<p>Texto o label que se muestra en el bot\u00f3n de acci\u00f3n cuando la tabla es de tipo selecci\u00f3n,\neste se visualiza cuando algunas de las filas es seleccionada. Por defecto es &#39;Acci\u00f3n&#39;.</p>\n",
                "type": "BcTableOptionMenu[]"
              },
              {
                "name": "title",
                "defaultValue": "'T\u00edtulo de la tabla'",
                "description": "<p>T\u00edtulo de la tabla, este puede tomar cualquier valor string, por defecto es &#39;T\u00edtulo de la tabla&#39;.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component"
          }
        ],
        "directives": [
          {
            "name": "BcCellDirective",
            "type": "directive",
            "description": "",
            "selector": "[bc-cell]",
            "inputsClass": [
              {
                "name": "favorite",
                "defaultValue": "false",
                "description": "<p>Indica si la columna es favorita, es decir, aparecer\u00e1 en la pantalla mobile, m\u00e1ximo 3 celdas.</p>\n"
              },
              {
                "name": "type",
                "description": "<p>Tipo de celda, esta puede tomar los valores: checkbox, number, action o total.</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [
              {
                "name": "changed",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "insertCheckbox",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Permite asignar la clase bc-table-checkbox-cell e insertar el elemento checkbox para\npoder seleccionar la fila correspondiente.</p>\n"
              },
              {
                "name": "setCellType",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Permite a\u00f1adir la clase que indica el tipo de celda seg\u00fan el atributo type:\nPara type = &#39;checkbox&#39; la clase es bc-table-checkbox-cell.\nPara type = &#39;number&#39; la clase es bc-table-number-cell.\nPara type = &#39;total&#39; la clase es bc-table-number-cell y bc-table-total-cell.\nPara type = &#39;action&#39; la clase es bc-table-action-cell.</p>\n<p>Por defecto la clase es bc-table-cell.</p>\n"
              },
              {
                "name": "setColumnType",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Permite a\u00f1adir la clase que indica el tipo de columna seg\u00fan el atributo type:\nPara type = &#39;checkbox&#39; la clase es bc-table-checkbox-cell.\nPara type = &#39;number&#39; la clase es bc-table-number-column.\nPara type = &#39;action&#39; la clase es bc-table-action-column.</p>\n<p>Por defecto la clase es bc-table-cell.</p>\n"
              },
              {
                "name": "setFavoriteClass",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>Permite asignar la clase que indica si la columna es favorita, es decir,\nse muestra en la tabla mobile.</p>\n"
              }
            ]
          },
          {
            "name": "BcTableDirective",
            "type": "directive",
            "description": "",
            "selector": "[bc-table]",
            "inputsClass": [
              {
                "name": "selection",
                "defaultValue": "false",
                "description": "<p>Permite indicar si la tabla va a tener celdas para la selecci\u00f3n de filas\nSi el valor es true, entonces se inicializa el comportamiento para los checkbox\nPor defecto es false.</p>\n"
              },
              {
                "name": "setting",
                "defaultValue": "false",
                "description": "<p>Permite indicar si la tabla ser\u00e1 cofigurable, es decir, se puedan mostrar/ocultar columnas\nSi el valor es true, entonces se pinta en la parte superior derecha el \u00edcono de setting\nPor defecto es false.</p>\n"
              }
            ],
            "outputsClass": [
              {
                "name": "changed",
                "defaultValue": "new EventEmitter()",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": []
          }
        ],
        "examples": [
          {
            "description": "Tabla con paginador y selecci\u00f3n de filas",
            "code": {
              "html": "\n          <bc-table-container class=\"bc-col-12\">\n            <bc-table-header title=\"Tabla de ejemplo\" actionButtonText=\"Exportar\" (onSelect)=\"rowSelected($event)\">\n              <bc-paginator type=\"full\" totalRegisters=\"14\" perPage=\"7\" (onChangePage)='onChangePage($event)' perMultiple=\"3\"></bc-paginator>\n            </bc-table-header>\n            <bc-table-content>\n              <table bc-table type=\"selection\">\n                <thead>\n                  <tr>\n                    <th bc-cell type=\"checkbox\"></th>\n                    <th bc-cell>Nombre cuenta</th>\n                    <th bc-cell>Ultimo movimiento</th>\n                    <th bc-cell type=\"number\">Saldo en canje</th>\n                    <th bc-cell type=\"number\">Saldo total</th>\n                    <th bc-cell type=\"number\">Saldo disponible</th>\n                    <th bc-cell type=\"action\"></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let row of movements\">\n                    <td bc-cell type=\"checkbox\"></td>\n                    <td bc-cell>{{row.name}}</td>\n                    <td bc-cell>{{row.last_movement}}</td>\n                    <td bc-cell type=\"number\">{{row.exchange_balance}}</td>\n                    <td bc-cell type=\"number\">{{row.total_balance}}</td>\n                    <td bc-cell type=\"total\">{{row.aviable_balance}}</td>\n                    <td bc-cell type=\"action\">\n                      <bc-table-dropdown [options]=\"dropdownOptions\" [row]=\"row\" (onChange)=\"optionSelected($event)\"></bc-table-dropdown>\n                      <!-- <a href=\"#\">\n                        <em class=\"bc-icon bc-sm\">arrow2-right</em>\n                      </a> -->\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </bc-table-content>\n            <bc-table-footer [totalAmounts]=\"totalAmounts\">\n              <bc-paginator type=\"full\" totalRegisters=\"14\" perPage=\"7\" (onChangePage)='onChangePage($event)' perMultiple=\"3\"></bc-paginator>\n            </bc-table-footer>\n          </bc-table-container>\n              ",
              "script": "\n          movements: any[] = [\n            {\n              name: 'Bancolombia Ahorros',\n              last_movement: '02/12/2004',\n              exchange_balance: '$ 9.000.000',\n              total_balance: '$ 21.000.000',\n              aviable_balance: '$ 10.000.000',\n            },\n            {\n              name: 'Bancolombia Corriente',\n              last_movement: '02/12/2006',\n              exchange_balance: '$ 5.000.000',\n              total_balance: '$ 11.000.000',\n              aviable_balance: '$ 6.000.000',\n            },\n            {\n              name: 'Bancolombia Ahorros',\n              last_movement: '02/12/2020',\n              exchange_balance: '$ 25.000.000',\n              total_balance: '$ 30.000.000',\n              aviable_balance: '$ 5.000.000',\n            },\n            {\n              name: 'Bancolombia Ahorros',\n              last_movement: '02/12/2014',\n              exchange_balance: '$ 80.000.000',\n              total_balance: '$ 125.000.000',\n              aviable_balance: '$ 15.000.000',\n            },\n            {\n              name: 'Cuenta Fiduciaria Bancolombia',\n              last_movement: '02/12/2008',\n              exchange_balance: '$ 30.000.000',\n              total_balance: '$ 21.000.000',\n              aviable_balance: '$ 9.000.000',\n            },\n            {\n              name: 'Cuenta Fiduciaria Bancolombia',\n              last_movement: '02/12/2004',\n              exchange_balance: '$ 1.000.000',\n              total_balance: '$ 8.000.000',\n              aviable_balance: '$ 7.000.000',\n            },\n            {\n              name: 'Bancolombia Cobros',\n              last_movement: '02/12/2010',\n              exchange_balance: '$ 4.000.000',\n              total_balance: '$ 14.000.000',\n              aviable_balance: '$ 10.000.000',\n            },\n          ];\n\n          dropdownOptions = [\n            { id: 'detail', icon: 'amount', text: 'Ver detalle' },\n            { id: 'lock', icon: 'lock', text: 'Bloquear' },\n            { id: 'resume', icon: 'data', text: 'Ver extracto' },\n          ];\n\n          totalAmounts = [\n            {title: 'Saldo 1', amount: '$ 5.000.000'},\n            {title: 'Saldo 2', amount: '$ 7.000.000'},\n            {title: 'Saldo 3', amount: '$ 12.000.000'},\n            {title: 'Saldo 4', amount: '$ 24.000.000'}\n          ];\n\n\n          pages: Array<any> = [];\n\n          constructor() {\n            this.pages.push(this.movements);\n            const r = [...this.movements].reverse();\n            this.pages.push(r);\n          }\n\n          optionSelected(data: any) {\n          }\n\n          rowSelected(rows: any) {\n          }\n\n          onChangePage(data: any) {\n            this.movements = this.pages[data.CurrentPage - 1];\n          }\n          ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addButtonEvent",
            "args": [
              {
                "name": "actionButton",
                "type": "HTMLButtonElement"
              },
              {
                "name": "action",
                "type": "BcTableActionButton"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addButtonSettingEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addCheckboxEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventSettingCheckbox",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventToOption",
            "args": [
              {
                "name": "opt",
                "type": "HTMLLIElement"
              },
              {
                "name": "option",
                "type": "BcTableOptionMenu"
              },
              {
                "name": "row",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addOptionButtonInRow",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addRemoveHideForMobile",
            "args": [
              {
                "name": "cell",
                "type": "Element"
              },
              {
                "name": "i",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addSortIcon",
            "args": [
              {
                "name": "column",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addToggleColumn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "buildColumnList",
            "args": [],
            "optional": false,
            "returnType": "Element",
            "typeParameters": []
          },
          {
            "name": "buildListExtraData",
            "args": [
              {
                "name": "el",
                "type": "Element"
              },
              {
                "name": "dataObj",
                "type": "literal type"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "buildSettingDropdown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "changeHeaderTopType",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "clearSelection",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "closeOtherDropdowns",
            "args": [
              {
                "name": "noCloseId",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createListAndEvent",
            "args": [
              {
                "name": "actionCell",
                "type": "Element"
              },
              {
                "name": "row",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createOptionMenu",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createOptionsButton",
            "args": [
              {
                "name": "row",
                "type": "Element"
              },
              {
                "name": "extraRow",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createTableActions",
            "args": [
              {
                "name": "rightContainer",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "executeHideForMobile",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "formatExtraData",
            "args": [],
            "optional": false,
            "returnType": "Array<any>",
            "typeParameters": []
          },
          {
            "name": "formatExtraDataForMobile",
            "args": [],
            "optional": false,
            "returnType": "Array<any>",
            "typeParameters": []
          },
          {
            "name": "getColumnsTitle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "hiddeUnusedColumns",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "hideColumnsInMobile",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "hideShowColumn",
            "args": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "checked",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "initDropdown",
            "args": [
              {
                "name": "element",
                "type": "Element"
              },
              {
                "name": "isStatic",
                "type": "boolean",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "BcDropdownBehavior",
            "typeParameters": []
          },
          {
            "name": "insertElementsForSelection",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "insertTempHeaderTitle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "prepareColumnList",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeElementsForSelection",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeExtraRows",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeTempHeaderTitle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeToogleColumn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "selectUnSelectRow",
            "args": [
              {
                "name": "row",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setColumnId",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setOptionMenu",
            "args": [
              {
                "name": "options",
                "type": "Array<BcTableOptionMenu>"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setRowLimit",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setSelectionAction",
            "args": [
              {
                "name": "actions",
                "type": "Array<BcTableActionButton>"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showActionConlumn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showColumns",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showHideColumnCell",
            "args": [
              {
                "name": "columnId",
                "type": "string"
              },
              {
                "name": "visible",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "sortColumn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "structureExtraColumns",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toggleExtraRow",
            "args": [
              {
                "name": "button",
                "type": "Element"
              },
              {
                "name": "row",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "updateCounterSelectedRows",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "validateAllSelection",
            "args": [],
            "optional": false,
            "returnType": "boolean",
            "typeParameters": []
          },
          {
            "name": "validMaxFavoriteColumns",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Tabla con paginador top y con selecci\u00f3n de filas",
            "code": {
              "html": "\n          <div class=\"bc-table-container\" id=\"myTable\">\n              <div class=\"bc-table-header-top\">\n                  <h6 class=\"bc-table-header-top-title\">T&iacute;tulo</h6>\n                  <div class=\"bc-table-header-top-right-container\">\n                      <div class=\"bc-table-actions-container\">\n                          <div class=\"bc-table-paginator-container\">\n                              <nav class=\"bc-paginator\" id=\"full\" role=\"navigation\" aria-label=\"paginador\" totalregisters=\"300\" perpage=\"5\" typepaginator=\"full\"></nav>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"bc-table-content\">\n                  <table class=\"bc-table bc-table-selection\">\n                      <thead>\n                          <tr>\n                              <th class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></th>\n                              <th>Nombre cuenta</th>\n                              <th>Ultimo movimiento</th>\n                              <th class=\"bc-table-number-column\">Saldo en canje</th>\n                              <th class=\"bc-table-number-column\">Saldo total</th>\n                              <th class=\"bc-table-number-column\">Saldo disponible</th>\n                              <th class=\"bc-table-action-column\"></th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta Z</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown1\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown1\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown2\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown2\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta A</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown3\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown3\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 9.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown4\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown4\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta B</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 15.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown5\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown5\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2016</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown6\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown6\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown7\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown7\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2021</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 3.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown8\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown8\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown10\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown10\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta T</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown11\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown11\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                          <tr>\n                              <td class=\"bc-table-checkbox-cell\"><label class=\"bc-container-checkbox\"><input type=\"checkbox\" /><span class=\"bc-checkbox\"></span></label></td>\n                              <td>Cuenta X</td>\n                              <td>20/12/2020</td>\n                              <td class=\"bc-table-number-cell\">0</td>\n                              <td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n                              <td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n                              <td class=\"bc-table-action-cell\">\n                                  <div class=\"bc-dropdown\"><em class=\"bc-dropdown-toggle bc-icon bc-sm\" id=\"myDropdown12\">secondary-menu</em>\n                                      <div class=\"bc-dropdown-content\" aria-labelledby=\"myDropdown12\">\n                                          <ul>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\" onclick=\"clicked()\"><em class=\"bc-icon bc-sm\">amount</em>&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Ver detalle</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">lock</em> Bloquear</a></li>\n                                              <li class=\"bc-dropdown-item\"><a class=\"bc-link\" href=\"#\"><em class=\"bc-icon bc-sm\">data</em> Ver extractos</a></li>\n                                          </ul>\n                                      </div>\n                                  </div>\n                              </td>\n                          </tr>\n                      </tbody>\n                  </table>\n              </div>\n              <div class=\"bc-table-footer\">\n                  <div class=\"bc-table-footer-container\">\n                      <div class=\"bc-table-footer-total-container\">\n                          <div class=\"bc-table-footer-total-column\">\n                              <p class=\"bc-table-footer-total-column-title\">Total saldo disponible</p>\n                              <h6 class=\"bc-table-footer-total-column-value\">COP $10.000.00,00</h6>\n                          </div>\n                          <div class=\"bc-table-footer-total-column\">\n                              <p class=\"bc-table-footer-total-column-title\">Total saldo consolidado</p>\n                              <h6 class=\"bc-table-footer-total-column-value\">COP $10.000.00,00</h6>\n                          </div>\n                          <div class=\"bc-table-footer-total-column\">\n                              <p class=\"bc-table-footer-total-column-title\">Total saldo consolidado</p>\n                              <h6 class=\"bc-table-footer-total-column-value\">COP $10.000.00,00</h6>\n                          </div>\n                          <div class=\"bc-table-footer-total-column\">\n                              <p class=\"bc-table-footer-total-column-title\">Total saldo consolidado</p>\n                              <h6 class=\"bc-table-footer-total-column-value\">COP $10.000.00,00</h6>\n                          </div>\n                      </div>\n                      <div class=\"bc-table-footer-subcontainer\">\n                          <div class=\"bc-table-actions-container\">\n                              <div class=\"bc-table-paginator-container\">\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n              ",
              "script": "\n          <script type=\"text/javascript\">\n      \t\t\tconst table = new BcTableBehavior();\n      \t\t\ttable.setId('myTable');\n      \t\t\ttable.setSelectionAction('EXPORTAR', myAction);\n      \t\t\ttable.setUp();\n      \t\t\tfunction myAction() {\n      \t\t\t}\n      \t\t\tconst paginator = new BcPaginatorBehavior();\n      \t\t\tpaginator.setId('full');\n      \t\t\tpaginator.changeState = (param) => changePage(param);\n      \t\t\tpaginator.setUp();\n\n      \t\t\tfunction changePage(params) {\n      \t\t\t}\n      \t\t</script>\n          ",
              "language": "js"
            }
          },
          {
            "description": "Tabla simple",
            "code": {
              "html": "\n          <div class=\"bc-table-container\" id=\"myTable\">\n\t\t\t\t\t<div class=\"bc-table-content\">\n\t\t\t\t\t\t<table class=\"bc-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<th>Nombre cuenta</th>\n\t\t\t\t\t\t\t\t<th>Ultimo movimiento</th>\n\t\t\t\t\t\t\t\t<th class=\"bc-table-number-column\">Saldo en canje</th>\n\t\t\t\t\t\t\t\t<th class=\"bc-table-number-column\">Saldo total</th>\n\t\t\t\t\t\t\t\t<th class=\"bc-table-number-column\">Saldo disponible</th>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta Z</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta A</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 9.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta B</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 15.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2016</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2021</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 3.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta T</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>Cuenta X</td>\n\t\t\t\t\t\t\t\t\t<td>20/12/2020</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">0</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell\">$ 10.000.00,00</td>\n\t\t\t\t\t\t\t\t\t<td class=\"bc-table-number-cell bc-total-cell\">$ 10.000.000,00</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n          ",
              "script": "\n          <script type=\"text/javascript\">\n      \t\t\tconst table = new BcTableBehavior();\n      \t\t\ttable.setId('myTable');\n      \t\t\ttable.setUp();\n      \t\t</script>\n          ",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "asc",
            "defaultValue": "false",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "columns",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "columnsData",
            "defaultValue": "[]",
            "type": "Array<literal type>",
            "optional": false,
            "description": ""
          },
          {
            "name": "columnsStatus",
            "defaultValue": "[]",
            "type": "Array<literal type>",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdowns",
            "defaultValue": "[]",
            "type": "BcDropdownBehavior[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "favoriteColumnsIndex",
            "defaultValue": "[]",
            "type": "Array<number>",
            "optional": false,
            "description": ""
          },
          {
            "name": "footer",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "headerTop",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "helper",
            "type": "BcTableHelper",
            "optional": false,
            "description": ""
          },
          {
            "name": "isSelectionTable",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "limitColumnNumber",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "limitColumnNumberBackup",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "optionsMenu",
            "defaultValue": "[]",
            "type": "BcTableOptionMenu[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "rows",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "selectedRowsElement",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "table",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "tableActions",
            "defaultValue": "[]",
            "type": "Array<BcTableActionButton>",
            "optional": false,
            "description": ""
          },
          {
            "name": "tableId",
            "type": "string",
            "optional": false,
            "description": ""
          }
        ]
      },
      {
        "name": "BcTable",
        "description": "<p>BcTable es una lista deslizable que puede visualizar diferentes tipos de informaci\u00f3n con un men\u00fa de 1 a 3 opciones desplegable.</p>",
        "parameters": [
          {
            "name": "scrollController",
            "type": "ScrollController",
            "required": true,
            "description": "<p>Controlador de eventos de deslizamiento horizontal y vertical.</p>"
          },
          {
            "name": "onItemPressed",
            "type": "ValueChanged<int>?",
            "required": false,
            "description": "<p>Funci\u00f3n que se ejecuta cada vez que se toca un item de la lista, entregando el index del item por par\u00e1metro.</p>"
          },
          {
            "name": "itemsPerPage",
            "type": "int",
            "required": false,
            "description": "<p>Entero para indicar cantidad de items a mostrar por p\u00e1gina.</p>"
          },
          {
            "name": "currentPage",
            "type": "int",
            "required": false,
            "description": "<p>Entero que indica en que pagina inicia la lista.</p>"
          },
          {
            "name": "items",
            "type": "List<T>?",
            "required": false,
            "description": "<p>Lista de items a desplegar en la tabla cuando no se requiere carga de datos.</p>"
          },
          {
            "name": "fetchData",
            "type": "BcTableRequest<T>",
            "required": true,
            "description": "<p>Funci\u00f3n que se ejecuta al momento de iniciar la lista o cuando se toca el icono de cargar mas items.</p>"
          },
          {
            "name": "onLoaderPressed",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n que se ejecuta cada vez que se toca el icono cargador de items.</p>"
          },
          {
            "name": "menuItems",
            "type": "List<BcBottomNavigationBarItem>?",
            "required": false,
            "description": "<p>Lista de items que se muestran en el men\u00fa desplegable.</p>"
          },
          {
            "name": "icon",
            "type": "IconData?",
            "required": false,
            "description": "<p>Icono que se muestra al borde derecho de cada item de la lista.</p>"
          },
          {
            "name": "loaderMessages",
            "type": "BcTableLoaderMessages?",
            "required": false,
            "description": "<p>Objeto que pasa los mensajes que se muestran en el cargador.</p>"
          },
          {
            "name": "runFetchData",
            "type": "bool",
            "required": false,
            "description": "<p>Boleano para indicar si se debe correr la carga de datos para la tabla.</p>"
          },
          {
            "name": "showMenuItemsOnEmptyList",
            "type": "bool",
            "required": false,
            "description": "<p>Si es true muestra los botones inferiores aunque la lista este vacia.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcTable es una lista deslizable que puede visualizar diferentes tipos de informaci\u00f3n con un men\u00fa de 1 a 3 opciones desplegable.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n // Se deben crear dos clases, una que realiza de la funcion de proveer la informaci\u00f3n y el item tipo widget que\n // se visualizar\u00e1 en la lista deslizable, y otra clase donde se define el modelo del item tipo widget.\n // Teniendo el modelo BcTableMovementsItem se crea funci\u00f3n para obtener los datos asincronos\n\n // Funcion as\u00edncrona [_getMovementsList] para obtener los datos as\u00edncronos\n Future<List<BcTableMovementsItem>> _getMovementsList(\n     int itemsPerPage, int page) async {\n   await Future.delayed(Duration(seconds: 3));\n   return [\n   for (var i = 1; i < 10; i++)\n     BcTableMovementsItem(\n         icon: BcFunctionalIcons.CHEVRON_RIGHT,\n         date: '2$i Mar 2020',\n         description: 'TRASL CTAS BANCOL SUC VIRT',\n         reference: '1222900003',\n         value: i % 3 > 0 ? '\\$$i.000.000.00' : '\\$-$i.000.000.00'),\n ];\n }\n\n // Luego de crear la clase BcTableMovementsProvider que extiende de BcTableItem<T> Se implementan 2 funciones,\n // la primera [createTableItem] que es para crear el item tipo widget que se visualizar\u00e1 en la lista y la segunda\n // funci\u00f3n [fetch] que permite realizar el llamado de la funci\u00f3n as\u00edncrona para obtener los datos\n // que se parsean al modelo T que es este caso es BcTableMovementsItem.\n\n // Al instanciar el proveedor se le debe pasar una funci\u00f3n as\u00edncrona, en este caso es la funci\u00f3n [_getMovementsList]\n BcTableMovementsProvider movementsProvider =\n BcTableMovementsProvider(request: this._getMovementsList);\n\n // Al instanciar el widget BcTable se le debe especificar el tipo de modelo para identificar la estructura de cada item\n // y sus respectivos parametros segun la necesidad.\n BcTable<BcTableMovementsItem>(\n   fetchData: movementsProvider.fetch,\n   scrollController: controller,\n   createTableItem: movementsProvider.createTableItem,\n   onLoaderPressed: () { **Action** },\n   onItemPressed: (index) { **Action** },\n   onMenuPressed: (index) { **Action** },\n   icon: BcFunctionalIcons.CHEVRON_RIGHT,\n   menuItems: [\n   BcBottomNavigationBarItem(\n       icon: Icon(BcFunctionalIcons.GRIN_TONGUE_SQUINT),\n       title: 'Transferir dinero'),\n   BcBottomNavigationBarItem(\n       icon: Icon(BcFunctionalIcons.QRCODE), title: 'Generar c\u00f3digo QR'),\n   BcBottomNavigationBarItem(\n       icon: Icon(BcFunctionalIcons.ELLIPSIS_V), title: 'M\u00e1s'),\n   ],\n   loaderMessages: BcTableLoaderMessages(\n     emptyMessage: 'No se encuentran m\u00e1s reportes.',\n     offMessage: 'Cargar m\u00e1s reportes.',\n     onMessage: 'Cargando reportes...'\n   ),\n );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcWebView",
        "description": "<p>BcWebView es un componente de interfaz de usuario para generar un navegador web interno dentro de la app.</p>",
        "parameters": [
          {
            "name": "url",
            "type": "String",
            "required": true,
            "description": "<p>Url de p\u00e1gina web que mostrar p\u00e1gina web en browser interno.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "<p>BcWebView es un componente de interfaz de usuario para generar un navegador web interno dentro de la app.</p>",
            "codes": [
              {
                "language": "dart",
                "example": "\n  Navigator.push(\n    context,\n    MaterialPageRoute(\n      builder: (BuildContext context) => BcWebView(url: url),\n    ),\n  );\n"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Mobile",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      {
        "name": "BcWheel",
        "description": "<p>BcWheel consiste en un carrusel vertical de datos.</p>",
        "parameters": [
          {
            "name": "controller",
            "type": "FixedExtentScrollController?",
            "required": false,
            "description": "<p>Normalmente se utiliza para cambiar el elemento actual o para leer los elementos secundarios.</p>"
          },
          {
            "name": "items",
            "type": "List<String?>?",
            "required": true,
            "description": "<p>Lista de datos que se visualizar\u00e1 en el carrusel.</p>"
          },
          {
            "name": "onChanged",
            "type": "ValueChanged<int>",
            "required": true,
            "description": "<p>M\u00e9todo callback, ejecutado cuando cambia de item.</p>"
          },
          {
            "name": "onScrollStops",
            "type": "VoidCallback?",
            "required": false,
            "description": "<p>Funci\u00f3n callback que hace el llamado cuando se finaliza de realizar la interacci\u00f3n de scroll.</p>"
          },
          {
            "name": "containerWidth",
            "type": "double?",
            "required": true,
            "description": "<p>Ancho del componente a visualizar en pantalla.</p>"
          },
          {
            "name": "initialIndex",
            "type": "int?",
            "required": false,
            "description": "<p>\u00cdndice que se centrara en el carrusel.</p>"
          }
        ],
        "methods": [],
        "examples": [
          {
            "description": "Wheel simple con 2 Elementos",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcWheel(\n                items: ['Hola', 'Hola2'],\n                onChanged: (index) {},\n                containerWidth: 200.0,\n                initialIndex: 0),"
              }
            ]
          },
          {
            "description": "Wheel simple con 7 Elementos",
            "codes": [
              {
                "language": "dart",
                "example": "\n            BcWheel(items: [\n              'Hola',\n              'Hola2',\n              'Hola3',\n              'Hola4',\n              'Hola5',\n              'Hola6',\n              'Hola7'\n            ], onChanged: (index) {}, containerWidth: 200.0, initialIndex: 0),"
              }
            ]
          }
        ],
        "technology": "flutter",
        "version": "1.2.11"
      }
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]"
    ]
  },
  {
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Web",
      "\u00c1tomo"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]"
    ]
  },
  {
    "nameComponent": "Breadcrumb",
    "description": "El breadcrumb o miga de pan es una forma secundaria de navegaci\u00f3n que le indica al usuario en qu\u00e9 lugar se encuentra ubicado dentro de la estructura jer\u00e1rquica del sitio y le ayuda a acceder al contenido cercano.",
    "status": "",
    "images": {},
    "tags": [
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcBreadcrumbComponent",
            "selector": "bc-breadcrumb",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "getBreadcrumb",
                "args": [],
                "optional": false,
                "returnType": "IBreadcrumb[]",
                "typeParameters": [],
                "description": "<p>Se suscribe al m\u00e9todo getter &quot;crumbs$&quot; del servicio BcBreadcrumbService,\npara capturar la lista de rutas padres e hijos.</p>\n",
                "modifierKind": [
                  112
                ]
              }
            ],
            "description": "<p>Importa los Breadcumbs con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa los Breadcumbs con los dise\u00f1os de Bancolombia S.A.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Breadcrumb",
            "code": {
              "html": "\n      <bc-breadcrumb></bc-breadcrumb>\n\n",
              "script": "Configuraci\u00f3n del Breadcrumb\nSe debe configurar de acuerdo las rutas de la aplicaci\u00f3n.\n            \n          const routes: Routes = [\n            {\n              path: \"\",\n              component: AppComponent,\n              data: {\n                breadcrumbs:{\n                  path: 'dashboard',\n                  text:'dashboard',\n                },\n              },\n              children: [\n                {\n                path: \"base\",\n                loadChildren: () => import(\"./components/demo/pantallas.module\").then((m) => m.PantallasModule),\n                data: {\n                  breadcrumbs:{\n                  path: 'dashboard/base',\n                  text:'base'\n                  },\n                },\n                }\n              ],\n            }\n          ]\n          \n          \n              const routes: Routes = [\n            {\n              path: \"\",\n              children: [\n                {\n                  path: \"pantalla-uno\",\n                  component: PantallaUnoComponent,\n                  data: {\n                    breadcrumbs:{\n                      path: 'dashboard/base/pantalla-uno',\n                      text:'base' \n                    },\n                  },\n                  children: [\n                    {\n                    path: \"pantalla-dos\",\n                    component: PantallaDosComponent,\n                    data: {\n                      path: 'dashboard/base/pantalla-dos',\n                      text:'base' \n                    },\n                        },\n                      ],\n                    },\n                  ],\n                },\n              ];",
              "language": "ts (app-routing.module.ts)"
            }
          }
        ],
        "version": "2.0.27"
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcCardSelectComponent",
            "selector": "bc-card-select",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Esta entrada permite indicar un id \u00fanico al componente dentro del DOM.</p>\n",
                "type": "string"
              },
              {
                "name": "configDropDownButton",
                "description": "<p>Configuraci\u00f3n del bot\u00f3n del dropdown ac\u00e1 se define el icono y el texto.</p>\n",
                "type": "BcFooterButtonConfig"
              },
              {
                "name": "defaultValue",
                "description": "<p>Esta entrada configura el valor por defecto.</p>\n",
                "type": "string | number"
              },
              {
                "name": "disabled",
                "defaultValue": "false",
                "description": "<p>Esta entrada habilita o deshabilita el componente.</p>\n",
                "type": "boolean"
              },
              {
                "name": "position"
              },
              {
                "name": "showDropDowButton",
                "defaultValue": "false",
                "description": "<p>Muestra el button del dropdown\ntrue | false</p>\n",
                "type": "boolean"
              },
              {
                "name": "subTitleCardSelect",
                "description": "<p>Esta entrada permite indicar el subtitulo para el card select.</p>\n",
                "type": "string"
              },
              {
                "name": "titleCardSelect",
                "description": "<p>Esta entrada permite indicar el titulo para el card select.</p>\n",
                "type": "string"
              },
              {
                "name": "typeCardSelect",
                "description": "<p>Esta entrada de tipo string nos permite indicarle el tipo de card select.\nLas opciones son: select | select-small</p>\n",
                "type": "BcCardType"
              },
              {
                "name": "typeContainer"
              },
              {
                "name": "typeContent"
              },
              {
                "name": "typeItem"
              },
              {
                "name": "values",
                "description": "<p>Esta entrada es el arreglo de configuraci\u00f3n de las card del componente</p>\n",
                "type": "Array<BcCardProductConfig>"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "actionButtonOutput",
                "defaultValue": "new EventEmitter<any>()",
                "description": "<p>Evento que se emite cuando se da clic al button action</p>\n",
                "type": "EventEmitter<any>"
              },
              {
                "name": "valueOutput",
                "defaultValue": "new EventEmitter<any>()",
                "description": "<p>Salida del valor actual del componente.</p>\n",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "getCardSelected",
                "args": [],
                "optional": false,
                "returnType": "any",
                "typeParameters": []
              },
              {
                "name": "getTypeCardSelect",
                "args": [],
                "optional": false,
                "returnType": "string",
                "typeParameters": []
              },
              {
                "name": "initComponent",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "itemSelected",
                "args": [
                  {
                    "name": "card",
                    "type": "BcCardProductConfig"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "setDisabledState",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Componente Card Select</p>\n",
            "rawdescription": "Componente Card Select",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Dropdown Card Select None Icon",
            "code": {
              "html": "\n          <bc-card-select [id]=\"componentIdA\" [titleCardSelect]=\"titleCardSelect\" [componentId]=\"componentId1\" [typeCardSelect]=\"typeCardSelectDefault\" [typeContent]=\"typeContent\" [typeItem]=\"typeItemDefault\"\n          [typeContainer]=\"typeContainer\" [values]=\"values1\" [position]=\"position\" (valueOutput)=\"getCardSelected($event)\">\n          </bc-card-select>\n        ",
              "script": "values1 = [\n          { name: 'Tarjeta Debito Visa', subtitle: 'Nequi - Bancolombia', detail: '03695872', valueProduct: '$ 1.200.000,00' },\n          { name: 'Tarjeta Debito Master', subtitle: 'Ahorros - Bancolombia', detail: '03695921', valueProduct: '$ 35.900.000,00' },\n          { name: 'Tarjeta Credito', subtitle: 'Bancolombia', detail: '03695678678678', valueProduct: '$ 9.000.000,00' },\n        ];",
              "language": "ts"
            }
          },
          {
            "description": "Dropdown Card Select Small",
            "code": {
              "html": "\n        <bc-card-select [id]=\"componentIdC\" [titleCardSelect]=\"titleCardSelect\" [componentId]=\"componentId3\" [typeCardSelect]=\"typeCardSelectSmall\" [typeContent]=\"typeContentSmall\" [typeItem]=\"typeItemSmall\"\n          [typeContainer]=\"typeContainerSmall\" [values]=\"values3\" [position]=\"position\" (valueOutput)=\"getCardSelected($event)\">\n        </bc-card-select>\n        ",
              "script": " values3 = [\n          { name: 'Cuenta de n\u00f3mina', subtitle: 'Bancolombia', detail: '03695872120', valueProduct: '$ 6.200.000,00' },\n          { name: 'Cuenta corriente', subtitle: 'Bancolombia', detail: '03695912132', valueProduct: '$ 15.750.000,00' },\n        ];",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "_setDisable",
            "args": [
              {
                "name": "status",
                "type": "boolean"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Activa o desactiva el input y el card seg\u00fan el par\u00e1metro status sea true o false</p>\n"
          },
          {
            "name": "addDropdownButtonEventClick",
            "args": [
              {
                "name": "footerElement",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "cleanItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "configSelectedEvent",
            "args": [
              {
                "name": "event",
                "type": ""
              },
              {
                "name": "i",
                "type": ""
              },
              {
                "name": "item",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createCardItem",
            "args": [
              {
                "name": "data",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "createDropDownFooter",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "createItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Carga los items del dropdown a partir del objeto itemsConfig del tipo BcCardProductConfig</p>\n"
          },
          {
            "name": "filterItems",
            "args": [
              {
                "name": "event",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getCurrentActiveItem",
            "args": [],
            "optional": false,
            "returnType": "BcCardProductConfig",
            "typeParameters": [],
            "description": "<p>Es un selector que obtiene el card activo</p>\n"
          },
          {
            "name": "getDropdownBody",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getDropdownContent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getDropdownFooter",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getDropdownParent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getInsideElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Verifica si el dropdown tiene items cargados, si no es as\u00ed los carga por medio de getItems.</p>\n"
          },
          {
            "name": "getItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Carga los items del dropdown</p>\n"
          },
          {
            "name": "markItemByIndex",
            "args": [
              {
                "name": "index",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeFilter",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "removeSelectedItem",
            "args": [
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "restoreFilters",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setActiveItem",
            "args": [
              {
                "name": "card",
                "type": "BcCardProductBehavior"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setDefaultIndex",
            "args": [
              {
                "name": "index",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el index seleccionado por default</p>\n"
          },
          {
            "name": "setDefaultValue",
            "args": [
              {
                "name": "value",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el valor seleccionado por default del dropdown, para ello v\u00e1lida que el par\u00e1metro value \nno sea indefinido y que existan items cargados en el dropdown. finalmente filtra value y lo selecciona.</p>\n"
          },
          {
            "name": "setDropDownConfiguration",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se encarga de realizar la configuraci\u00f3n para el comportamiento general heredado del Dropdown</p>\n"
          },
          {
            "name": "setEventListeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el evento click y el evento key up a los items del dropdown</p>\n"
          },
          {
            "name": "setFormatOutput",
            "args": [
              {
                "name": "formatType",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Asigna el tipo de formato, siempre que sea simple o full</p>\n"
          },
          {
            "name": "setItems",
            "args": [
              {
                "name": "items",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea el objeto itemsConfig con el par\u00e1metro items</p>\n"
          },
          {
            "name": "setMarginTop",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Agrega un margin top de -25</p>\n"
          },
          {
            "name": "setSelectedItemsDisplay",
            "args": [
              {
                "name": "displayInfo",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Setea los items seleccionados, siempre y cuando existan</p>\n"
          },
          {
            "name": "showAllItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showSelectedItem",
            "args": [
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toCardComponent",
            "args": [
              {
                "name": "element",
                "type": "Element"
              },
              {
                "name": "isActive",
                "type": "boolean"
              },
              {
                "name": "toggleEvent",
                "type": "",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "BcCardProductBehavior",
            "typeParameters": []
          },
          {
            "name": "addDropdownTriangle",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se agrega el triangulo que indica o se\u00f1ala el elemento que ha abierto el dropdown\npara este caso se\u00f1ala el elemento con la clase &quot;bc-dropdown-toggle&quot; que tiene como Id\nel cual est\u00e1 relacionado con el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a los elementos que tienen la clase &quot;bc-dropdown-toggle&quot;\nel cual permite abrir o cerrar el dropdown que tenga relacionado a id del elemento actual</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "addWindowEventClick",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se a\u00f1ade el evento click a window para poder cerrar los dropdowns abiertos</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "clickToggleEvent",
            "args": [
              {
                "name": "event",
                "type": "MouseEvent"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Evento toggle por medio del click del mouse, llama a la funci\u00f3n toggleDropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "closeDropdown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Cerrar el dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "configureExtraToggles",
            "args": [
              {
                "name": "clickEvent",
                "type": "function",
                "function": [
                  {
                    "name": "event",
                    "type": "MouseEvent"
                  }
                ]
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "getElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se obtienen los elementos a manipular en el comportamiento</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initAccesibilityConfig",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "initConfiguration",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "openDrowndown",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Abrir dropdown, corrigiendo la posici\u00f3n si es necesario</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setConfig",
            "args": [
              {
                "name": "config",
                "type": "BcDropdownConfig"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setDropdownContentPosition",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna a posici\u00f3n del dropdown-conent dependiendo si est\u00e1 fuera de la pantalla</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setParentWidth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Se asigna el ancho del padre (mainClass) a el contenedor del dropdown</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "setPosition",
            "args": [
              {
                "name": "left",
                "type": "number"
              },
              {
                "name": "right",
                "type": "number"
              },
              {
                "name": "top",
                "type": "number"
              },
              {
                "name": "bottom",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleDropdown",
            "args": [
              {
                "name": "noClose",
                "type": "boolean",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "description": "<p>Alterna el estado del dropdown entre abierto y cerrado</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "validateDropdownIsActive",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": [],
            "description": "<p>Se valida si el dropdown tiene la clase &quot;bc-dropdown-active&quot;</p>\n",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ],
        "examples": [
          {
            "description": "Dropdown Card Select None Icon",
            "code": {
              "html": "\n          <div class=\"bc-dropdown-select\">\n            <div class=\"bc-dropdown-card-select\">\n              <div class=\"bc-form-field\">\n                <input class=\"bc-input\" aria-label='A' required='' placeholder=\"Busca por n\u00famero de producto\" type='text' value=''></input>\n                <em class=\"bc-icon\">search</em>\n              </div>\n              <div class=\"bc-dropdown-select-action\">\n                <em class=\"bc-icon bc-dropdown-select-toggle\" #id-content1>arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-dropdown-select-content\" aria-labelledby=\"id-content1\">\n              <ul>\n                <li class=\"bc-dropdown-select-item\">\n                  <div class=\"bc-dropdown-select-container-none-icon\">\n                    <div class=\"bc-dropdown-select-body\">\n                      <div class=\"bc-dropdown-select-head\">\n                        <h6 class=\"bc-dropdown-select-name\">Nombre producto</h6>\n                        <em class=\"bc-icon\">arrow2-down</em>\n                      </div>\n                      <p class=\"bc-dropdown-select-subtitle\">Tipo de cuenta - Banco</p>\n                      <p class=\"bc-dropdown-select-detail\">N\u00famero de cuenta</p>\n                      <div class=\"bc-dropdown-select-info\">\n                        <div class=\"bc-dropdown-select-container-status\">\n                          <p class=\"bc-dropdown-select-status\">Estado</p>\n                        </div>\n                        <h6>COP $395.000.000,00</h6>\n                        <p class=\"bc-dropdown-select-small-text\">D\u00edas en mora</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n                <li class=\"bc-dropdown-select-item\">\n                  <div class=\"bc-dropdown-select-container-none-icon\">\n                    <div class=\"bc-dropdown-select-body\">\n                      <div class=\"bc-dropdown-select-head\">\n                        <h6 class=\"bc-dropdown-select-name\">Nombre producto</h6>\n                        <em class=\"bc-icon\">arrow2-down</em>\n                      </div>\n                      <p class=\"bc-dropdown-select-subtitle\">Tipo de cuenta - Banco</p>\n                      <p class=\"bc-dropdown-select-detail\">N\u00famero de cuenta</p>\n                      <div class=\"bc-dropdown-select-info\">\n                        <div class=\"bc-dropdown-select-container-status\">\n                          <p class=\"bc-dropdown-select-status\">Estado</p>\n                        </div>\n                        <h6>COP $395.000.000,00</h6>\n                        <p class=\"bc-dropdown-select-small-text\">D\u00edas en mora</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          ",
              "script": "<script>\n    BcCardSelectBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          },
          {
            "description": "Dropdown Card Select Small",
            "code": {
              "html": "\n          <div class=\"bc-dropdown-select-small\">\n            <div class=\"bc-dropdown-card-select\">\n              <div class=\"bc-form-field\">\n                <input class=\"bc-input\" aria-label='A' required='' placeholder=\"Busca por n\u00famero de producto\" type='text' value=''></input>\n                <em class=\"bc-icon\">search</em>\n              </div>\n              <div class=\"bc-dropdown-select-action\">\n                <em class=\"bc-icon bc-dropdown-select-toggle\" #id-content2>arrow2-down</em>\n              </div>\n            </div>\n            <div class=\"bc-dropdown-select-content\" aria-labelledby=\"id-content2\">\n              <ul>\n                <li class=\"bc-dropdown-select-item-small\">\n                  <div class=\"bc-dropdown-select-container-small\">\n                    <div class=\"bc-dropdown-select-body\">\n                      <div class=\"bc-dropdown-select-head\">\n                        <h6 class=\"bc-dropdown-select-name\">Nombre producto</h6>\n                        <em class=\"bc-icon\">arrow2-down</em>\n                      </div>\n                      <p class=\"bc-dropdown-select-subtitle\">Tipo de cuenta - Banco</p>\n                      <p class=\"bc-dropdown-select-detail\">N\u00famero de cuenta</p>\n                      <div class=\"bc-dropdown-select-info\">\n                        <div class=\"bc-dropdown-select-container-status\">\n                          <p class=\"bc-dropdown-select-status\">Estado</p>\n                        </div>\n                        <h6>COP $395.000.000,00</h6>\n                        <p class=\"bc-dropdown-select-small-text\">D\u00edas en mora</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n                <li class=\"bc-dropdown-select-item-small\">\n                  <div class=\"bc-dropdown-select-container-small\">\n                    <div class=\"bc-dropdown-select-body\">\n                      <div class=\"bc-dropdown-select-head\">\n                        <h6 class=\"bc-dropdown-select-name\">Nombre producto</h6>\n                        <em class=\"bc-icon\">arrow2-down</em>\n                      </div>\n                      <p class=\"bc-dropdown-select-subtitle\">Tipo de cuenta - Banco</p>\n                      <p class=\"bc-dropdown-select-detail\">N\u00famero de cuenta</p>\n                      <div class=\"bc-dropdown-select-info\">\n                        <div class=\"bc-dropdown-select-container-status\">\n                          <p class=\"bc-dropdown-select-status\">Estado</p>\n                        </div>\n                        <h6>COP $395.000.000,00</h6>\n                        <p class=\"bc-dropdown-select-small-text\">D\u00edas en mora</p>\n                      </div>\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>\n          ",
              "script": "<script>\n    BcCardSelectBehavior.setUpAll();\n  </script>",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "activeElement",
            "defaultValue": "null",
            "type": "BcCardProductConfig",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcCardProductBehavior",
            "defaultValue": "null",
            "type": "BcCardProductBehavior",
            "optional": false,
            "description": ""
          },
          {
            "name": "bcInputBehavior",
            "defaultValue": "new BcInputBehavior()",
            "type": "",
            "optional": false,
            "description": ""
          },
          {
            "name": "defaultIndex",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "dropdownButtonConfig",
            "type": "BcFooterButtonConfig",
            "optional": true,
            "description": ""
          },
          {
            "name": "formatType",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "input",
            "type": "HTMLInputElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "isMultiple",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "itemsConfig",
            "type": "BcCardProductConfig[]",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputFunction",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "selectedItemsDisplay",
            "defaultValue": "'{0} \u00edtems seleccionados'",
            "type": "string",
            "optional": false,
            "description": ""
          },
          {
            "name": "span",
            "type": "HTMLSpanElement",
            "optional": false,
            "description": ""
          },
          {
            "name": "closeButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "config",
            "defaultValue": "{}",
            "type": "BcDropdownConfig",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownActive",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownContent",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "dropdownItems",
            "defaultValue": "[]",
            "type": "Element[]",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "helper",
            "defaultValue": "new BcDropdownHelper()",
            "type": "BcDropdownHelper",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "idContent",
            "type": "string",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButton",
            "defaultValue": "null",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "toggleButtonEventsAdded",
            "defaultValue": "false",
            "type": "boolean",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "topMarginContent",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          },
          {
            "name": "triangle",
            "type": "HTMLDivElement",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcAbstractDropdownBehavior"
            }
          }
        ]
      }
    ]
  },
  {
    "status": "",
    "images": {},
    "tags": [
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      "[[compodoc-sdb-native-formatter]]"
    ]
  },
  {
    "nameComponent": "Shortcut",
    "description": "Los atajos o shortcut son botones que se usan para ir a otras secciones o niveles de men\u00fa dentro un flujo determinado. Los encontramos generalmente en los dashboard y al terminar de realizar un proceso transaccional. Tambi\u00e9n se consideran opciones r\u00e1pidas.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Web",
      "Mol\u00e9cula"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcShortcutComponent",
            "selector": "bc-shortcut",
            "inputsClass": [
              {
                "name": "description",
                "description": "<p>Descripci\u00f3n de la acci\u00f3n del shortcut en caso de que aplique</p>\n"
              },
              {
                "name": "icon",
                "defaultValue": "'help'",
                "description": "<p>Nombre del icono que identifica al shortcut</p>\n"
              },
              {
                "name": "isNew",
                "defaultValue": "false",
                "description": "<p>Permite indicar si el shortcut es nuevo</p>\n"
              },
              {
                "name": "route",
                "description": "<p>Ruta hacia donde dirije el shortcut</p>\n"
              },
              {
                "name": "text",
                "defaultValue": "'Nombre de la acci\u00f3n'",
                "description": "<p>Nombre de la acci\u00f3n que describe el shortcut</p>\n"
              },
              {
                "name": "typeShortcut",
                "defaultValue": "'single'",
                "description": "<p>Este valor de entrada define el tipo de shortcut\nLos valores permitidos [ single(default) | multiple | horizontal ]</p>\n",
                "type": "\"single\" | \"multiple\" | \"horizontal\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component"
          },
          {
            "name": "BcShortcutGroupComponent",
            "selector": "bc-shortcut-group",
            "inputsClass": [
              {
                "name": "typeShortcut",
                "defaultValue": "'single'",
                "description": "<p>Este valor de entrada define el tipo de shortcut.\nLos valores permitidos [ single(default) | multiple | horizontal ]</p>\n",
                "type": "\"single\" | \"multiple\" | \"horizontal\""
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "",
            "rawdescription": "",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Shortcut Single",
            "code": {
              "html": "\n        <bc-shortcut-group>\n          <bc-shortcut [typeShortcut]=\"single\" [text]=\"Generar otro c\u00f3digo QR\" [icon]=\"QR-add\" [isNew]=\"true\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <br>\n          <bc-shortcut [typeShortcut]=\"single\" [text]=\"Generar otro c\u00f3digo QR\" [icon]=\"QR-add\" routerLink=\"/components/bc-accordions\">\n          </bc-shortcut>\n        </bc-shortcut-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Shortcut Multiple",
            "code": {
              "html": "\n        <bc-shortcut-group [typeShortcut]=\"multiple\">\n          <bc-shortcut [typeShortcut]=\"multiple\" [text]=\"Acci\u00f3n aqu\u00ed\" [icon]=\"help\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <bc-shortcut [typeShortcut]=\"multiple\" [text]=\"Acci\u00f3n aqu\u00ed\" [icon]=\"help\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <bc-shortcut [typeShortcut]=\"multiple\" [text]=\"Acci\u00f3n aqu\u00ed\" [icon]=\"help\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <bc-shortcut [typeShortcut]=\"multiple\" [text]=\"Acci\u00f3n aqu\u00ed\" [icon]=\"help\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n        </bc-shortcut-group>\n        ",
              "script": "",
              "language": "ts"
            }
          },
          {
            "description": "Shortcut Horizontal",
            "code": {
              "html": "\n        <bc-shortcut-group [typeShortcut]=\"horizontal\">\n          <bc-shortcut [typeShortcut]=\"horizontal\" [text]=\"Pago de proveedores\" [icon]=\"send-money\" [description]=\"En lote\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <bc-shortcut [typeShortcut]=\"horizontal\" [text]=\"Administrar Roles\" [icon]=\"people\" [description]=\"Crear - Eliminar - Editar\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n          <bc-shortcut [typeShortcut]=\"horizontal\" [text]=\"Grupos de productos\" [icon]=\"product-number\" [description]=\"de la empresa\" [route]=\"http://youtube.com\">\n          </bc-shortcut>\n        </bc-shortcut-group>\n        ",
              "script": "",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      "[[flutter-sdb-formatter]]"
    ]
  },
  {
    "nameComponent": "Menu",
    "description": "El men\u00fa de navegaci\u00f3n le permite al usuario moverse entre distintas secciones y su contenido puede variar seg\u00fan la arquitectura del sitio.",
    "status": "",
    "images": {},
    "tags": [
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcMenuBodyComponent",
            "selector": "bc-menu-body",
            "inputsClass": [
              {
                "name": "identifier",
                "description": "<p>Id del elemento</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente cuerpo men\u00fa.</p>\n",
            "rawdescription": "Componente cuerpo men\u00fa.",
            "type": "component"
          },
          {
            "name": "BcMenuColumnComponent",
            "selector": "bc-menu-column",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Columna men\u00fa.</p>\n",
            "rawdescription": "Columna men\u00fa.",
            "type": "component"
          },
          {
            "name": "BcMenuComponent",
            "selector": "bc-menu",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)",
                "description": "<p>Id del elemento</p>\n"
              },
              {
                "name": "config",
                "description": "<p>Configuraci\u00f3n del men\u00fa</p>\n"
              },
              {
                "name": "hideProfileInSubmenu",
                "defaultValue": "false",
                "description": "<p>Permite ocultar el perfil del usuario en el submenu cuando est\u00e1 en mobile.</p>\n"
              },
              {
                "name": "logoutFunction",
                "description": "<p>Evento para el bot\u00f3n de cerrar sesi\u00f3n</p>\n",
                "type": "function"
              },
              {
                "name": "profileData",
                "defaultValue": "{ user: '', updateUserDataUrl: '' }",
                "description": "<p>Permite setear el nombre del usuario y la url para la actualizaci\u00f3n de datos (opcional)</p>\n",
                "type": "BcMenuProfileData"
              }
            ],
            "outputsClass": [],
            "methodsClass": [
              {
                "name": "generateMenu",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "description": "<p>M\u00e9todo para general el men\u00fa apartir de la configuraci\u00f3n</p>\n"
              },
              {
                "name": "setProfileData",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              }
            ],
            "description": "<p>Componente men\u00fa</p>\n",
            "rawdescription": "Componente men\u00fa",
            "type": "component"
          },
          {
            "name": "BcMenuDrawerComponent",
            "selector": "bc-menu-drawer",
            "inputsClass": [
              {
                "name": "functionCloseButton",
                "type": "Function"
              },
              {
                "name": "textCloseButton",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente drawer menu</p>\n",
            "rawdescription": "Componente drawer menu",
            "type": "component"
          },
          {
            "name": "BcMenuItemComponent",
            "selector": "bc-menu-item",
            "inputsClass": [
              {
                "name": "iconName",
                "description": "<p>Nombre del icono</p>\n",
                "type": "string"
              },
              {
                "name": "identifierContent",
                "description": "<p>Id del elemento</p>\n",
                "type": "string"
              },
              {
                "name": "path",
                "description": "<p>Ruta or url del item</p>\n",
                "type": "string"
              },
              {
                "name": "text",
                "description": "<p>Texto del item</p>\n",
                "type": "string"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Item del menu</p>\n",
            "rawdescription": "Item del menu",
            "type": "component"
          },
          {
            "name": "BcMenuMainComponent",
            "selector": "bc-menu-main",
            "inputsClass": [],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Menu componente principal</p>\n",
            "rawdescription": "Menu componente principal",
            "type": "component"
          },
          {
            "name": "BcMenuOptionComponent",
            "selector": "bc-menu-option",
            "inputsClass": [
              {
                "name": "href",
                "description": "<p>Url de la opci\u00f3n.</p>\n"
              },
              {
                "name": "text",
                "description": "<p>Texto de la opci\u00f3n.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente opciones de menu</p>\n",
            "rawdescription": "Componente opciones de menu",
            "type": "component"
          },
          {
            "name": "BcMenuSectionComponent",
            "selector": "bc-menu-section",
            "inputsClass": [
              {
                "name": "title",
                "description": "<p>titulo secci\u00f3n men\u00fa.</p>\n"
              }
            ],
            "outputsClass": [],
            "methodsClass": [],
            "description": "<p>Componente secci\u00f3n men\u00fa.</p>\n",
            "rawdescription": "Componente secci\u00f3n men\u00fa.",
            "type": "component"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Default",
            "code": {
              "html": "\n        <bc-menu class=\"menu-app-showcase\" [logoutFunction]=\"MylougoutFunction\" hideProfileInSubmenu=\"true\">\n          <bc-menu-drawer>\n            <bc-menu-item path='/' identifierContent='id1' text='Inicio' iconName='hogar'></bc-menu-item>\n            <bc-menu-item path='#' identifierContent='id2' text='Componentes' iconName='tecnologia'></bc-menu-item>\n            <bc-menu-item path='version-record' identifierContent='id3' text='Versionamiento' iconName='app'></bc-menu-item>\n            <bc-menu-item path='#' identifierContent='id4' text='Grid System' iconName='direccionamiento'></bc-menu-item>\n            <bc-menu-item path='components/bc-typography' identifierContent='id6' text='Tipograf\u00edas' iconName='consultar'>\n            </bc-menu-item>\n          </bc-menu-drawer>\n          <bc-menu-main>\n            <bc-menu-body identifier='id2'>\n              <bc-menu-column>\n                <bc-menu-section title='Dise\u00f1o y Contenedores'>\n                  <bc-menu-option text='Acorde\u00f3n' href='components/bc-accordions'></bc-menu-option>\n                  <bc-menu-option text='Alertas' href='components/bc-alerts'></bc-menu-option>\n                  <bc-menu-option text='Avatar' href='components/bc-avatar'></bc-menu-option>\n                  <bc-menu-option text='Bordes' href='components/bc-border'></bc-menu-option>\n                  <bc-menu-option text='Footer' href='components/bc-footer'></bc-menu-option>\n                  <bc-menu-option text='Header' href='components/bc-header'></bc-menu-option>\n                  <bc-menu-option text='\u00cdconos' href='components/bc-icons'></bc-menu-option>\n                  <bc-menu-option text='Modal' href='components/bc-modal'></bc-menu-option>\n                  <bc-menu-option text='Men\u00fa' href='components/bc-menu'></bc-menu-option>\n                  <bc-menu-option text='Pesta\u00f1as' href='components/bc-tabs-group'></bc-menu-option>\n                  <bc-menu-option text='Preloader' href='components/bc-preloader'></bc-menu-option>\n                  <bc-menu-option text='Tarjetas' href='components/bc-cards'></bc-menu-option>\n                  <bc-menu-option text='Tabla' href='components/bc-tables'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n              <bc-menu-column>\n                <bc-menu-section title='Funcionales'>\n                  <bc-menu-option text='Etiquetas' href='components/bc-label'></bc-menu-option>\n                  <bc-menu-option text='Enlaces' href='components/bc-link'></bc-menu-option>\n                  <bc-menu-option text='Breadcrumb' href='components/bc-breadcrumb'></bc-menu-option>\n                  <bc-menu-option text='Buscador' href='components/bc-search'></bc-menu-option>\n                  <bc-menu-option text='Loader' href='components/bc-loader'></bc-menu-option>\n                  <bc-menu-option text='Paginador' href='components/bc-paginator'></bc-menu-option>\n                  <bc-menu-option text='Barra de Progreso' href='components/bc-progress-bar'></bc-menu-option>\n                  <bc-menu-option text='Tag' href='components/bc-tag'></bc-menu-option>\n                  <bc-menu-option text='Tooltip' href='components/bc-tooltip'></bc-menu-option>\n                  <bc-menu-option text='Stepper' href='components/bc-stepper'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n              <bc-menu-column>\n                <bc-menu-section title='Botones e Inputs'>\n                  <bc-menu-option text='Botones' href='components/bc-button'></bc-menu-option>\n                  <bc-menu-option text='Botones de Grupo' href='components/bc-button-group'></bc-menu-option>\n                  <bc-menu-option text='Botones de Opci\u00f3n' href='components/bc-rdo'></bc-menu-option>\n                  <bc-menu-option text='Checkbox' href='components/bc-chk'></bc-menu-option>\n                  <bc-menu-option text='Switch' href='components/bc-switch'></bc-menu-option>\n                  <bc-menu-option text='Input' href='components/bc-input'></bc-menu-option>\n                  <bc-menu-option text='Input Date Range' href='components/bc-input-date-range'></bc-menu-option>\n                  <bc-menu-option text='Selector de Archivo' href='components/bc-input-file'></bc-menu-option>\n                  <bc-menu-option text='Select' href='components/bc-input-select'></bc-menu-option>\n                  <bc-menu-option text='Selector Num\u00e9rico' href='components/number-selector'></bc-menu-option>\n                  <bc-menu-option text='Selector de Hora' href='components/bc-period-input'></bc-menu-option>\n                  <bc-menu-option text='Calendario' href='components/bc-calendar'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n            </bc-menu-body>\n\n            <bc-menu-body identifier='id4'>\n              <bc-menu-column>\n                <bc-menu-section title='Sistema de Grilla'>\n                  <bc-menu-option text='Sistema de Grilla' href='components/bc-layout'></bc-menu-option>\n                  <bc-menu-option text='Flexbox' href='components/bc-flex-box'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n            </bc-menu-body>\n          </bc-menu-main>\n          <div class=\"bc-content-body\">\n              <router-outlet></router-outlet>\n          </div>\n        </bc-menu>\n        ",
              "script": "\n        MylougoutFunction() {}",
              "language": "js"
            }
          },
          {
            "description": "Menu con data de usuario",
            "code": {
              "html": "\n        <bc-menu class=\"menu-app-showcase\" [logoutFunction]=\"MylougoutFunction\" [profileData]=\"profileData\">\n          <bc-menu-drawer>\n            <bc-menu-item path='/' identifierContent='id1' text='Inicio' iconName='hogar'></bc-menu-item>\n            <bc-menu-item path='#' identifierContent='id2' text='Componentes' iconName='tecnologia'></bc-menu-item>\n            <bc-menu-item path='version-record' identifierContent='id3' text='Versionamiento' iconName='app'></bc-menu-item>\n            <bc-menu-item path='#' identifierContent='id4' text='Grid System' iconName='direccionamiento'></bc-menu-item>\n            <bc-menu-item path='components/bc-typography' identifierContent='id6' text='Tipograf\u00edas' iconName='consultar'>\n            </bc-menu-item>\n          </bc-menu-drawer>\n          <bc-menu-main>\n            <bc-menu-body identifier='id2'>\n              <bc-menu-column>\n                <bc-menu-section title='Dise\u00f1o y Contenedores'>\n                  <bc-menu-option text='Acorde\u00f3n' href='components/bc-accordions'></bc-menu-option>\n                  <bc-menu-option text='Alertas' href='components/bc-alerts'></bc-menu-option>\n                  <bc-menu-option text='Avatar' href='components/bc-avatar'></bc-menu-option>\n                  <bc-menu-option text='Bordes' href='components/bc-border'></bc-menu-option>\n                  <bc-menu-option text='Footer' href='components/bc-footer'></bc-menu-option>\n                  <bc-menu-option text='Header' href='components/bc-header'></bc-menu-option>\n                  <bc-menu-option text='\u00cdconos' href='components/bc-icons'></bc-menu-option>\n                  <bc-menu-option text='Modal' href='components/bc-modal'></bc-menu-option>\n                  <bc-menu-option text='Men\u00fa' href='components/bc-menu'></bc-menu-option>\n                  <bc-menu-option text='Pesta\u00f1as' href='components/bc-tabs-group'></bc-menu-option>\n                  <bc-menu-option text='Preloader' href='components/bc-preloader'></bc-menu-option>\n                  <bc-menu-option text='Tarjetas' href='components/bc-cards'></bc-menu-option>\n                  <bc-menu-option text='Tabla' href='components/bc-tables'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n              <bc-menu-column>\n                <bc-menu-section title='Funcionales'>\n                  <bc-menu-option text='Etiquetas' href='components/bc-label'></bc-menu-option>\n                  <bc-menu-option text='Enlaces' href='components/bc-link'></bc-menu-option>\n                  <bc-menu-option text='Breadcrumb' href='components/bc-breadcrumb'></bc-menu-option>\n                  <bc-menu-option text='Buscador' href='components/bc-search'></bc-menu-option>\n                  <bc-menu-option text='Loader' href='components/bc-loader'></bc-menu-option>\n                  <bc-menu-option text='Paginador' href='components/bc-paginator'></bc-menu-option>\n                  <bc-menu-option text='Barra de Progreso' href='components/bc-progress-bar'></bc-menu-option>\n                  <bc-menu-option text='Tag' href='components/bc-tag'></bc-menu-option>\n                  <bc-menu-option text='Tooltip' href='components/bc-tooltip'></bc-menu-option>\n                  <bc-menu-option text='Stepper' href='components/bc-stepper'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n              <bc-menu-column>\n                <bc-menu-section title='Botones e Inputs'>\n                  <bc-menu-option text='Botones' href='components/bc-button'></bc-menu-option>\n                  <bc-menu-option text='Botones de Grupo' href='components/bc-button-group'></bc-menu-option>\n                  <bc-menu-option text='Botones de Opci\u00f3n' href='components/bc-rdo'></bc-menu-option>\n                  <bc-menu-option text='Checkbox' href='components/bc-chk'></bc-menu-option>\n                  <bc-menu-option text='Switch' href='components/bc-switch'></bc-menu-option>\n                  <bc-menu-option text='Input' href='components/bc-input'></bc-menu-option>\n                  <bc-menu-option text='Input Date Range' href='components/bc-input-date-range'></bc-menu-option>\n                  <bc-menu-option text='Selector de Archivo' href='components/bc-input-file'></bc-menu-option>\n                  <bc-menu-option text='Select' href='components/bc-input-select'></bc-menu-option>\n                  <bc-menu-option text='Selector Num\u00e9rico' href='components/number-selector'></bc-menu-option>\n                  <bc-menu-option text='Selector de Hora' href='components/bc-period-input'></bc-menu-option>\n                  <bc-menu-option text='Calendario' href='components/bc-calendar'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n            </bc-menu-body>\n\n            <bc-menu-body identifier='id4'>\n              <bc-menu-column>\n                <bc-menu-section title='Sistema de Grilla'>\n                  <bc-menu-option text='Sistema de Grilla' href='components/bc-layout'></bc-menu-option>\n                  <bc-menu-option text='Flexbox' href='components/bc-flex-box'></bc-menu-option>\n                </bc-menu-section>\n              </bc-menu-column>\n            </bc-menu-body>\n          </bc-menu-main>\n          <div class=\"bc-content-body\">\n              <router-outlet></router-outlet>\n          </div>\n        </bc-menu>\n        ",
              "script": "\n        // updateUserDataUrl ---> es opcional\n        profileData = { user: 'Usuario en sesi\u00f3n', updateUserDataUrl: 'https://google.com' };\n        MylougoutFunction() {}",
              "language": "js"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addChevronIcon",
            "args": [
              {
                "name": "item",
                "type": "Element"
              },
              {
                "name": "body",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addCloseButtonEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addDrawerEvents",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventClickOnExtra",
            "args": [
              {
                "name": "element",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventCloseBtn",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEvents",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addItemEventClick",
            "args": [
              {
                "name": "item",
                "type": "Element"
              },
              {
                "name": "width",
                "type": "number"
              },
              {
                "name": "identifier",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addItemsEvents",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "changeMenuOverflow",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "closeMegaMenu",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "generateByConfig",
            "args": [
              {
                "name": "config",
                "type": "BcMenuConfig"
              },
              {
                "name": "parent",
                "type": "Element | string"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getBodies",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getCurrentItemActive",
            "args": [
              {
                "name": "element",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "getState",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "groupCollectionByProperty",
            "args": [
              {
                "name": "parent",
                "type": "Element"
              },
              {
                "name": "clsName",
                "type": "string"
              },
              {
                "name": "attr",
                "type": "string"
              },
              {
                "name": "map",
                "type": "Map<string | Element>"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "headerIsReady",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "hideProfileInSubmenu",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeBodiesInactive",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeBodyActive",
            "args": [
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeBodyInactive",
            "args": [
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeItemActive",
            "args": [
              {
                "name": "item",
                "type": "Element"
              },
              {
                "name": "customClass",
                "type": "string",
                "defaultValue": "null"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeItemInactive",
            "args": [
              {
                "name": "item",
                "type": "Element"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeItemsInactive",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "makeSubmenuInactive",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "onResizeMainContain",
            "args": [
              {
                "name": "menu",
                "type": "HTMLElement"
              },
              {
                "name": "main",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "openItem",
            "args": [
              {
                "name": "item",
                "type": "any"
              },
              {
                "name": "key",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "(event: any) => void",
            "typeParameters": []
          },
          {
            "name": "openItemClick",
            "args": [
              {
                "name": "item",
                "type": "any"
              },
              {
                "name": "key",
                "type": "any"
              },
              {
                "name": "i",
                "type": "any"
              }
            ],
            "optional": false,
            "returnType": "(event: any) => void",
            "typeParameters": []
          },
          {
            "name": "quantityItemsEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setLogoutEvent",
            "args": [
              {
                "name": "fn",
                "type": "function",
                "optional": true,
                "function": [
                  {
                    "name": "param",
                    "type": "",
                    "optional": true
                  }
                ]
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setMainContenPosition",
            "args": [
              {
                "name": "item",
                "type": "Element",
                "optional": true
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setMainContentWithLeftOfset",
            "args": [
              {
                "name": "columnsActive",
                "type": "number"
              },
              {
                "name": "maxColumns",
                "type": "number"
              },
              {
                "name": "main",
                "type": "HTMLElement"
              },
              {
                "name": "mainWidth",
                "type": "number"
              },
              {
                "name": "contentActive",
                "type": "HTMLElement"
              },
              {
                "name": "el",
                "type": "HTMLElement"
              },
              {
                "name": "menu",
                "type": "HTMLElement"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setState",
            "args": [
              {
                "name": "state",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setSubmenuBottomPos",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "showHideBtnFab",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "structureConfigByResize",
            "args": [
              {
                "name": "width",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "structureExtraItems",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toggleEvent",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "toggleItem",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "validateCloseSesionButton",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createExtraElements",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": [],
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "createHTMLElement",
            "args": [
              {
                "name": "conf",
                "type": "ElementConf"
              }
            ],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "createLogoutBtn",
            "args": [],
            "optional": false,
            "returnType": "Element",
            "typeParameters": [],
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "createProfileSection",
            "args": [],
            "optional": false,
            "returnType": "HTMLElement",
            "typeParameters": [],
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          }
        ],
        "examples": [
          {
            "description": "Men\u00fa nativo base",
            "code": {
              "html": "\n            <div class=\"bc-menu-global-container\">\n          \t\t<div class=\"bc-menu\" id=\"menu\">\n          \t\t\t<ul class=\"bc-menu-drawer-content\"><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id1\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">home</em>  \n          \t\t\t\t\t\t<div>Inicio</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id2\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Componentes</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a>\n          \t\t\t\t<a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id3\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Versionamiento</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id4\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Algo m\u00e1s 1</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id5\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Algo m\u00e1s 2</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id6\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Algo m\u00e1s 3</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id7\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Algo m\u00e1s 4</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a>\n          \t\t\t\t</a><a class=\"bc-menu-item\" aria-label=\"Item del men\u00fa\" for=\"id8\" href=\"#\">\n          \t\t\t\t\t<li>\n          \t\t\t\t\t\t<em class=\"bc-icon\">square</em> \n          \t\t\t\t\t\t<div>Algo m\u00e1s 5</div>\n          \t\t\t\t\t</li>\n          \t\t\t\t</a>\n          \t\t\t</ul>\n          \t\t\t<div class=\"bc-menu-main-content\">\n          \t\t\t\t<div class=\"bc-menu-content-header\">\n          \t\t\t\t\t<h5>Tipograf&iacute;as</h5>\n          \t\t\t\t\t<em class=\"bc-icon bc-sm\" aria-hidden=\"true\" aria-label=\"prueba\" role=\"img\" size=\"sm\"\n          \t\t\t\t\t\tng-reflect-size=\"sm\"> error </em>\n          \t\t\t\t</div>\n          \t\t\t\t<div class=\"bc-menu-content-bodies\">\n          \t\t\t\t\t<div class=\"bc-menu-content-body\" id=\"id1\">\n          \t\t\t\t\t\t<div class=\"bc-menu-content-column\">\n          \t\t\t\t\t\t\t<ul><a>\n          \t\t\t\t\t\t\t\t\t<li>\n          \t\t\t\t\t\t\t\t\t\t<h6> Dise&ntilde;o y Contenedores </h6>\n          \t\t\t\t\t\t\t\t\t</li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Acorde&oacute;n </li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Avatar </li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Bordes </li>\n          \t\t\t\t\t\t\t\t</a></ul>\n          \t\t\t\t\t\t</div>\n          \t\t\t\t\t</div>\n          \t\t\t\t\t<div class=\"bc-menu-content-body\" id=\"id5\">\n          \t\t\t\t\t\t<div class=\"bc-menu-content-column\">\n          \t\t\t\t\t\t\t<ul><a>\n          \t\t\t\t\t\t\t\t\t<li>\n          \t\t\t\t\t\t\t\t\t\t<h6> Dise&ntilde;o y Contenedores </h6>\n          \t\t\t\t\t\t\t\t\t</li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Acorde&oacute;n </li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Avatar </li>\n          \t\t\t\t\t\t\t\t</a><a href=\"#\">\n          \t\t\t\t\t\t\t\t\t<li> Bordes </li>\n          \t\t\t\t\t\t\t\t</a></ul>\n          \t\t\t\t\t\t</div>\n          \t\t\t\t\t</div>\n          \t\t\t\t</div>\n          \t\t\t</div>\n          \t\t</div>\n          \t\t<div class=\"bc-content\">\n          \t\t\t<h1>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Accusantium sed aliquam perferendis cupiditate\n          \t\t\t\tunde, commodi, incidunt voluptatum enim, quaerat perspiciatis est ratione nihil impedit voluptatem.\n          \t\t\t\tCorrupti optio perferendis doloribus magni!</h1>\n          \t\t</div>\n          \t</div>\n            ",
              "script": "\n            const menu = new BcMenuBehavior();\n            menu.setId(\"menu\");\n            menu.setLogoutEvent(() => {\n            });\n            menu.profileData = {\n              user: 'Usuario',\n              updateUserDataUrl: 'https://my_url.gg'\n            };\n            menu.setUp();",
              "language": "js"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bodies",
            "type": "Map<string | Element>",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "closeButton",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "comunicationWithHeader",
            "type": "boolean",
            "optional": false,
            "description": ""
          },
          {
            "name": "config",
            "type": "BcMenuConfig",
            "optional": false,
            "description": ""
          },
          {
            "name": "currentItemActive",
            "type": "any",
            "optional": false,
            "description": ""
          },
          {
            "name": "drawer",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "footerButton",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "headerMainContent",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "items",
            "type": "Map<string | Element>",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "mainContent",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "megaMenu",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ]
          },
          {
            "name": "profileData",
            "type": "literal type",
            "optional": false,
            "description": ""
          },
          {
            "name": "selectedItem",
            "type": "Element",
            "optional": false,
            "description": ""
          },
          {
            "name": "state",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "stateOptionSubmenu",
            "type": "number",
            "optional": false,
            "description": ""
          },
          {
            "name": "stateSubMenu",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "closeBtn",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "itemElement",
            "type": "HTMLAnchorElement",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "logoutBtnContainer",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "logoutFunction",
            "type": "function",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "profileData",
            "type": "literal type",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "showProfileInSubmenu",
            "type": "boolean",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "submenu",
            "type": "Element",
            "optional": false,
            "description": "",
            "modifierKind": [
              114
            ],
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "submenuContentContainer",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          },
          {
            "name": "submenuListContainer",
            "type": "Element",
            "optional": false,
            "description": "",
            "inheritance": {
              "file": "BcMenuElementCreator"
            }
          }
        ]
      }
    ]
  },
  {
    "nameComponent": "Planner",
    "description": "El calendario permite tener un resumen visual relacionado a cada mes, de los datos presentados en la vista de tabla.",
    "status": "",
    "version": "",
    "images": {},
    "tags": [
      "Web",
      "Organismo"
    ],
    "documentation": {},
    "implementations": [
      {
        "technology": "angular",
        "components": [
          {
            "name": "BcPlannerComponent",
            "selector": "bc-planner",
            "inputsClass": [
              {
                "name": "componentId",
                "defaultValue": "this.bcHelperService.getId(this)"
              },
              {
                "name": "items",
                "defaultValue": "[]",
                "type": "IBcPlannerItem[]"
              },
              {
                "name": "itemsTop",
                "defaultValue": "[]",
                "type": "IBcPlannerItem[]"
              },
              {
                "name": "data",
                "type": "any",
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "outputsClass": [
              {
                "name": "changeValue",
                "defaultValue": "new EventEmitter<any>()",
                "type": "EventEmitter<any>"
              }
            ],
            "methodsClass": [
              {
                "name": "onInput",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "postItems",
                "args": [
                  {
                    "name": "Items",
                    "type": "IBcPlannerItem[]"
                  }
                ],
                "optional": false,
                "returnType": "any",
                "typeParameters": []
              },
              {
                "name": "setMonth_Year",
                "args": [],
                "optional": false,
                "returnType": "void",
                "typeParameters": []
              },
              {
                "name": "add",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "addOrRemove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "contains",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "boolean",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnChange",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "registerOnTouched",
                "args": [
                  {
                    "name": "fn",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "remove",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "modifierKind": [
                  112
                ],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "set",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              },
              {
                "name": "writeValue",
                "args": [
                  {
                    "name": "value",
                    "type": "any"
                  }
                ],
                "optional": false,
                "returnType": "void",
                "typeParameters": [],
                "inheritance": {
                  "file": "BcGeneralInputComponent"
                }
              }
            ],
            "description": "<p>Importa el componente de calendario con los dise\u00f1os de Bancolombia S.A.</p>\n",
            "rawdescription": "Importa el componente de calendario con los dise\u00f1os de Bancolombia S.A.",
            "type": "component",
            "extends": "BcGeneralInputComponent"
          }
        ],
        "directives": [],
        "examples": [
          {
            "description": "Planner",
            "code": {
              "html": "\n        <bc-planner [componentId]=\"componentId\" [items]=\"items\">\n        </bc-planner>\n        ",
              "script": "IBcPlannerItem \ncomponentId : string = \"idcomponente\" \n\n\n    const YEAR_EXAMPLE = 2021;\n    const MONTH_EXAMPLE = 3;\n    const DAY_EXAMPLE = 7;\n    const OTHER_DAY_EXAMPLE = 13;\n\n    items: IBcPlannerItem[] = [\n    { date: new Date(new Date().setMonth(new Date().getMonth() + 1)), text: 'Ejemplo dia 1', id: '1', icon: 'ok' },\n    { date: new Date(new Date().setMonth(new Date().getMonth() + 1)), text: 'Ejemplo dia 2', id: '2', icon: 'error' },\n    { date: new Date(), text: 'Ejemplo dia 3', id: '3', color: 'blue', icon: 'error' },\n    { date: new Date(), text: 'Ejemplo dia 4', id: '4', color: 'blue', icon: 'ok' },\n\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, DAY_EXAMPLE),\n      color: 'red',\n      text: 'Ejemplo texto largo, con mas de 30 caracteres',\n      id: '3',\n      icon: 'error',\n    },\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, DAY_EXAMPLE),\n      color: 'blue',\n      text: 'Ejemplo dia 4',\n      id: '5',\n      icon: 'ok',\n    },\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, DAY_EXAMPLE),\n      color: 'green',\n      text: 'Ejemplo dia 3',\n      id: '6',\n      icon: 'error',\n    },\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, DAY_EXAMPLE),\n      color: 'yellow',\n      text: 'Ejemplo dia 4',\n      id: '7',\n      icon: 'ok',\n    },\n\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, OTHER_DAY_EXAMPLE),\n      color: 'blue',\n      text: 'Ejemplo dia 4',\n      id: '8',\n      icon: 'ok',\n    },\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, OTHER_DAY_EXAMPLE),\n      color: 'red',\n      text: 'Ejemplo texto largo, con mas de 30 caracteres',\n      id: '88',\n      icon: 'error',\n    },\n    {\n      date: new Date(YEAR_EXAMPLE, MONTH_EXAMPLE, OTHER_DAY_EXAMPLE),\n      color: 'green',\n      text: 'Ejemplo dia 3',\n      id: '99',\n      icon: 'error',\n    },\n  ];\n          \n          ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.27"
      },
      {
        "technology": "native",
        "methods": [
          {
            "name": "addClassToday",
            "args": [
              {
                "name": "week",
                "type": ""
              },
              {
                "name": "day",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "addEvent",
            "args": [
              {
                "name": "_event",
                "type": "string"
              },
              {
                "name": "elemento",
                "type": ""
              },
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "op",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventsEm",
            "args": [
              {
                "name": "Items",
                "type": "IBcPlannerItem[]"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addEventsItem",
            "args": [
              {
                "name": "Items",
                "type": "IBcPlannerItem[]"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "addOpacityDay",
            "args": [
              {
                "name": "week",
                "type": ""
              },
              {
                "name": "day",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "buildItemHtml",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "nameClass",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "buildItemModalHtml",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "nameClass",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "buildPreviewModalHtml",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerPrevItem"
              },
              {
                "name": "nameClass",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "changesEmitEvent",
            "args": [
              {
                "name": "action",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "closeModal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createDaysOfMonth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createHeadersAndPaginator",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "createHtmlWeeek",
            "args": [
              {
                "name": "week",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "createWeeks",
            "args": [
              {
                "name": "weeks",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "eventPreview",
            "args": [
              {
                "name": "item",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "fourOrMoreItems",
            "args": [
              {
                "name": "_items",
                "type": "any"
              },
              {
                "name": "fourItems",
                "type": "number"
              },
              {
                "name": "threeItems",
                "type": "number"
              },
              {
                "name": "sixteen",
                "type": "number"
              },
              {
                "name": "numplus",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "getDayName",
            "args": [
              {
                "name": "day",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getFirstElementByClassName",
            "args": [
              {
                "name": "className",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getItem",
            "args": [
              {
                "name": "id",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getItems",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getItemsxDate",
            "args": [
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "IBcPlannerItem[]",
            "typeParameters": []
          },
          {
            "name": "getMonth",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "getMonthName",
            "args": [
              {
                "name": "month",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getPlannerHeader",
            "args": [],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "getPlannerTemplate",
            "args": [],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "getPlannerTop",
            "args": [],
            "optional": false,
            "returnType": "string",
            "typeParameters": []
          },
          {
            "name": "getToday",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "getWeeksInMonth",
            "args": [],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "getYear",
            "args": [],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "initModal",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "listeners",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "listUnique",
            "args": [
              {
                "name": "List",
                "type": ""
              },
              {
                "name": "Column",
                "type": "string"
              }
            ],
            "optional": false,
            "returnType": "any",
            "typeParameters": []
          },
          {
            "name": "mModal1",
            "args": [
              {
                "name": "item",
                "type": ""
              },
              {
                "name": "btn",
                "type": ""
              },
              {
                "name": "btn2",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "mModal2",
            "args": [
              {
                "name": "item",
                "type": ""
              },
              {
                "name": "btn",
                "type": ""
              },
              {
                "name": "btn2",
                "type": ""
              },
              {
                "name": "_modal",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "modifyModal",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "_modal",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "moreOneitem",
            "args": [
              {
                "name": "_items",
                "type": "any"
              },
              {
                "name": "thirty",
                "type": "number"
              },
              {
                "name": "numplus",
                "type": "number"
              },
              {
                "name": "twoItems",
                "type": "number"
              },
              {
                "name": "threeItems",
                "type": "number"
              },
              {
                "name": "fourItems",
                "type": "number"
              },
              {
                "name": "sixteen",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "nextMonth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "nextYear",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "openModalPlanner",
            "args": [
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "openModalPreview",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "op",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "orderItemHtml",
            "args": [
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "previousMonth",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "previousYear",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "refreshItemsHtml",
            "args": [
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setClickNextMonthBtnListener",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setClickNextYearBtnListener",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setClickPreviousMonthBtnListener",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setClickPreviousYearBtnListener",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setForitemHtml",
            "args": [
              {
                "name": "_items",
                "type": ""
              },
              {
                "name": "_length",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setItemHtml",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setItemPlus",
            "args": [
              {
                "name": "item",
                "type": "string"
              },
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setItems",
            "args": [
              {
                "name": "_items",
                "type": "Array<IBcPlannerItem>"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setItemsTop",
            "args": [
              {
                "name": "_items",
                "type": "IBcPlannerItem[]"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setItemTopHtml",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              },
              {
                "name": "topElement",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setMonth",
            "args": [
              {
                "name": "Month",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setMonthText",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setUpDateVariables",
            "args": [
              {
                "name": "date",
                "type": "Date"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "setYearText",
            "args": [],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "thowItems",
            "args": [
              {
                "name": "_items",
                "type": "any"
              },
              {
                "name": "thirty",
                "type": "number"
              },
              {
                "name": "numplus",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "threeItems",
            "args": [
              {
                "name": "_items",
                "type": "any"
              },
              {
                "name": "thirty",
                "type": "number"
              },
              {
                "name": "numplus",
                "type": "number"
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          },
          {
            "name": "valueEmitEvent",
            "args": [
              {
                "name": "item",
                "type": "IBcPlannerItem"
              }
            ],
            "optional": false,
            "returnType": "void",
            "typeParameters": []
          },
          {
            "name": "whatMonthorYearBelong",
            "args": [
              {
                "name": "week",
                "type": ""
              },
              {
                "name": "day",
                "type": ""
              },
              {
                "name": "isM",
                "type": ""
              }
            ],
            "optional": false,
            "returnType": "number",
            "typeParameters": []
          }
        ],
        "examples": [
          {
            "description": "Calendario Simple",
            "code": {
              "html": "\n        <div class=\"bc-planner\" id=\"componentId\"></div>\n        ",
              "script": "const myPlanner = new BcPlannerBehavior();  \nmyPlanner.setId(\"myPlanner\");  \nmyPlanner.setUp(); ",
              "language": "ts"
            }
          }
        ],
        "version": "2.0.13",
        "properties": [
          {
            "name": "bcPlannerDate",
            "defaultValue": "new Date()",
            "type": "Date",
            "optional": false,
            "description": "",
            "modifierKind": [
              113
            ]
          },
          {
            "name": "bcPlannerMonth",
            "defaultValue": "this.bcPlannerDate.getMonth()",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              113
            ]
          },
          {
            "name": "bcPlannerNextMonthButton",
            "defaultValue": "`${PLANNER_NAMESPACE}-btn-next-month`",
            "type": "string",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "bcPlannerNextYearButton",
            "defaultValue": "`${PLANNER_NAMESPACE}-btn-next-year`",
            "type": "string",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "bcPlannerPreviousMonthButton",
            "defaultValue": "`${PLANNER_NAMESPACE}-btn-previous-month`",
            "type": "string",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "bcPlannerPreviousYearButton",
            "defaultValue": "`${PLANNER_NAMESPACE}-btn-previous-year`",
            "type": "string",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "bcPlannerToday",
            "defaultValue": "this.bcPlannerDate.getDate()",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              113
            ]
          },
          {
            "name": "bcPlannerYear",
            "defaultValue": "this.bcPlannerDate.getFullYear()",
            "type": "number",
            "optional": false,
            "description": "",
            "modifierKind": [
              113
            ]
          },
          {
            "name": "items",
            "defaultValue": "[]",
            "type": "Array<IBcPlannerItem>",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "modalListPlus",
            "type": "BcModalBehavior",
            "optional": false,
            "description": "",
            "modifierKind": [
              112
            ]
          },
          {
            "name": "outputChanges",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "outputValues",
            "type": "function",
            "optional": false,
            "description": ""
          },
          {
            "name": "timeOut",
            "defaultValue": "0",
            "type": "number",
            "optional": false,
            "description": ""
          }
        ]
      }
    ]
  }
]
